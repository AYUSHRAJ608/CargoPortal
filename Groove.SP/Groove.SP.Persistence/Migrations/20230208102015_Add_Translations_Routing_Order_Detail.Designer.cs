// <auto-generated />
using System;
using Groove.SP.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Groove.SP.Persistence.Migrations
{
    [DbContext(typeof(SpContext))]
    [Migration("20230208102015_Add_Translations_Routing_Order_Detail")]
    partial class Add_Translations_Routing_Order_Detail
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Groove.SP.Application.BillOfLading.ViewModels.BillOfLadingQueryModel", b =>
                {
                    b.Property<string>("AttachmentFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("AttachmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseBLNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("MasterBLId")
                        .HasColumnType("bigint");

                    b.Property<string>("MasterBLNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipmentInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipmentNo")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Application.BillOfLading.ViewModels.HouseBLQueryModel", b =>
                {
                    b.Property<string>("BillOfLadingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillOfLadingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Incoterm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModeOfTransport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Movement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShipFromETDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShipToETADate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("TotalGrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalNetWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalPackage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalVolume")
                        .HasColumnType("decimal(18,2)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Application.Invoices.ViewModels.InvoiceQueryModel", b =>
                {
                    b.Property<string>("BillBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillOfLadingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfSubmissionToCruise")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ETADate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ETDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaymentDueDate")
                        .HasColumnType("datetime2");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Application.POFulfillment.ViewModels.POFulfillmentQueryModel", b =>
                {
                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CargoReadyDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FulfillmentType")
                        .HasColumnType("int");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsPOAdhocChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPending")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderFulfillmentPolicy")
                        .HasColumnType("int");

                    b.Property<string>("ShipFromName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<string>("StageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Application.PurchaseOrders.ViewModels.POEmailNotificationQueryModel", b =>
                {
                    b.Property<DateTime?>("CargoReadyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("OrganizationRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PONumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProposeDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("shipFromId")
                        .HasColumnType("bigint");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Application.WarehouseFulfillment.ViewModels.WarehouseArticleMasterQueryModel", b =>
                {
                    b.Property<string>("ColourName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StyleName")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Application.WarehouseFulfillment.ViewModels.WarehouseFulfillmentLocationQueryModel", b =>
                {
                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingHours")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Application.WarehouseFulfillment.ViewModels.WarehouseFulfillmentLocationSOFormQueryModel", b =>
                {
                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingHours")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ActivityModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ActivityCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<DateTime>("ActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActivityDescription")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("Remark")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("Resolution")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<DateTime?>("ResolutionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Resolved")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ActivityCode = "1007",
                            ActivityDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActivityDescription = "Forwarder Booking Request",
                            ActivityType = "PA",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            ActivityCode = "1008",
                            ActivityDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActivityDescription = "Forwarder Booking Confirmed",
                            ActivityType = "PM",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            ActivityCode = "1009",
                            ActivityDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActivityDescription = "Shipment Dispatch",
                            ActivityType = "PM",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            ActivityCode = "1051",
                            ActivityDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActivityDescription = "Forwarder Booking Request",
                            ActivityType = "FA",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5L,
                            ActivityCode = "1052",
                            ActivityDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActivityDescription = "Forwarder Booking Itinerary Ready",
                            ActivityType = "FA",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6L,
                            ActivityCode = "1053",
                            ActivityDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActivityDescription = "Forwarder Booking Accepted",
                            ActivityType = "FA",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7L,
                            ActivityCode = "1054",
                            ActivityDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActivityDescription = "Forwarder Booking Denied",
                            ActivityType = "FA",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8L,
                            ActivityCode = "1055",
                            ActivityDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActivityDescription = "Forwarder Booking Approval Request",
                            ActivityType = "FE",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9L,
                            ActivityCode = "1056",
                            ActivityDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActivityDescription = "Forwarder Booking Amendment",
                            ActivityType = "FA",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10L,
                            ActivityCode = "1057",
                            ActivityDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActivityDescription = "Forwarder Booking Cancellation",
                            ActivityType = "FE",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11L,
                            ActivityCode = "1058",
                            ActivityDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActivityDescription = "Booking Approval Accepted",
                            ActivityType = "FA",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12L,
                            ActivityCode = "1059",
                            ActivityDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActivityDescription = "Booking Approval Denied",
                            ActivityType = "FA",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13L,
                            ActivityCode = "1060",
                            ActivityDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActivityDescription = "Booking Approval Overdue",
                            ActivityType = "FA",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14L,
                            ActivityCode = "1061",
                            ActivityDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActivityDescription = "Forwarder Booking Confirmation",
                            ActivityType = "FM",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15L,
                            ActivityCode = "1062",
                            ActivityDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActivityDescription = "Plan to ship",
                            ActivityType = "FA",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16L,
                            ActivityCode = "1063",
                            ActivityDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActivityDescription = "Packing List Ready",
                            ActivityType = "FA",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17L,
                            ActivityCode = "1065",
                            ActivityDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActivityDescription = "PO Invoice Ready",
                            ActivityType = "FA",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18L,
                            ActivityCode = "1067",
                            ActivityDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActivityDescription = "Ready to ship",
                            ActivityType = "FA",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19L,
                            ActivityCode = "1068",
                            ActivityDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ActivityDescription = "Goods Dispatch",
                            ActivityType = "FM",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.AgentAssignmentModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("AgentOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<int>("AgentType")
                        .HasColumnType("int");

                    b.Property<int?>("AutoCreateShipment")
                        .HasColumnType("int");

                    b.Property<long>("BuyerComplianceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModeOfTransport")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Sea");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("PortSelectionIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerComplianceId");

                    b.ToTable("AgentAssignments");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ArticleMasterModel", b =>
                {
                    b.Property<string>("CompanyCode")
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("CompanyType")
                        .HasMaxLength(1)
                        .HasColumnType("VARCHAR(1)");

                    b.Property<string>("PONo")
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR(40)");

                    b.Property<string>("ItemNo")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("ShipmentNo")
                        .HasMaxLength(5)
                        .HasColumnType("VARCHAR(5)");

                    b.Property<long>("POSeq")
                        .HasColumnType("bigint");

                    b.Property<string>("DestCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("VARCHAR(5)")
                        .HasDefaultValue("");

                    b.Property<string>("AssignedSupplier")
                        .HasMaxLength(3999)
                        .HasColumnType("VARCHAR(3999)");

                    b.Property<string>("Barcode")
                        .HasMaxLength(3999)
                        .HasColumnType("VARCHAR(3999)");

                    b.Property<string>("BarcodeType")
                        .HasMaxLength(3999)
                        .HasColumnType("VARCHAR(3999)");

                    b.Property<string>("CartonType")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("CategoryCode")
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("ColourCode")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("ColourName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("DATETIME");

                    b.Property<string>("DisplaySetFlat")
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal?>("InnerDepth")
                        .HasColumnType("NUMERIC(18,3)");

                    b.Property<decimal?>("InnerGrossWeight")
                        .HasColumnType("NUMERIC(18,3)");

                    b.Property<decimal?>("InnerHeight")
                        .HasColumnType("NUMERIC(18,3)");

                    b.Property<int?>("InnerQuantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("InnerWidth")
                        .HasColumnType("NUMERIC(18,3)");

                    b.Property<decimal?>("ItemDepth")
                        .HasColumnType("NUMERIC(18,3)");

                    b.Property<string>("ItemDesc")
                        .HasMaxLength(256)
                        .HasColumnType("VARCHAR(256)");

                    b.Property<decimal?>("ItemHeight")
                        .HasColumnType("NUMERIC(18,3)");

                    b.Property<decimal?>("ItemPrice")
                        .HasColumnType("NUMERIC(18,3)");

                    b.Property<decimal?>("ItemWidth")
                        .HasColumnType("NUMERIC(18,3)");

                    b.Property<string>("MembersItemId")
                        .HasMaxLength(256)
                        .HasColumnType("VARCHAR(256)");

                    b.Property<string>("MembersQuantity")
                        .HasMaxLength(256)
                        .HasColumnType("VARCHAR(256)");

                    b.Property<string>("OrderDetailKey")
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)");

                    b.Property<decimal?>("OuterDepth")
                        .HasColumnType("NUMERIC(18,3)");

                    b.Property<decimal?>("OuterGrossWeight")
                        .HasColumnType("DECIMAL(18,3)");

                    b.Property<decimal?>("OuterHeight")
                        .HasColumnType("NUMERIC(18,3)");

                    b.Property<int?>("OuterQuantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("OuterWidth")
                        .HasColumnType("NUMERIC(18,3)");

                    b.Property<string>("ProcurementRule")
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<long?>("Seller")
                        .HasColumnType("bigint");

                    b.Property<string>("Size")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .HasColumnType("VARCHAR(1)");

                    b.Property<string>("StyleName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("StyleNo")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("SupplierType")
                        .HasMaxLength(3999)
                        .HasColumnType("VARCHAR(3999)");

                    b.Property<decimal?>("UnitWeight")
                        .HasColumnType("DECIMAL(18,3)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("DATETIME");

                    b.HasKey("CompanyCode", "CompanyType", "PONo", "ItemNo", "ShipmentNo", "POSeq", "DestCode");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("IX_ArticleMaster_Id");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("Id"), false);
                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("Id"), new[] { "CompanyCode", "CompanyType", "PONo", "ItemNo", "ShipmentNo", "POSeq", "DestCode" });

                    b.ToTable("ArticleMaster");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ArticleMasterQueryModel", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("ItemDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.AttachmentModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AttachmentType")
                        .HasColumnType("NVARCHAR(64)");

                    b.Property<string>("BlobId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadedBy")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<DateTime>("UploadedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.AttachmentTypeClassificationModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AttachmentType")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(64)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(3)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EntityType", "AttachmentType", "Order")
                        .IsUnique();

                    b.ToTable("AttachmentTypeClassifications", "dbo");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.AttachmentTypePermissionModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Alias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AttachmentType")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(64)");

                    b.Property<bool>("CheckContractHolder")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoleId", "AttachmentType")
                        .IsUnique();

                    b.ToTable("AttachmentTypePermissions", "dbo");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BillOfLadingConsignmentModel", b =>
                {
                    b.Property<long>("BillOfLadingId")
                        .HasColumnType("bigint");

                    b.Property<long>("ConsignmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<long?>("ShipmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BillOfLadingId", "ConsignmentId");

                    b.HasIndex("ConsignmentId");

                    b.HasIndex("ShipmentId");

                    b.ToTable("BillOfLadingConsignments");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BillOfLadingContactModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<long>("BillOfLadingId")
                        .HasColumnType("bigint");

                    b.Property<string>("CompanyName")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("OrganizationRole")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BillOfLadingId");

                    b.ToTable("BillOfLadingContacts");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BillOfLadingItineraryModel", b =>
                {
                    b.Property<long>("ItineraryId")
                        .HasColumnType("bigint");

                    b.Property<long>("BillOfLadingId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("MasterBillOfLadingId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ItineraryId", "BillOfLadingId");

                    b.HasIndex("BillOfLadingId");

                    b.HasIndex("MasterBillOfLadingId");

                    b.ToTable("BillOfLadingItineraries");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BillOfLadingModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("BillOfLadingNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("BillOfLadingType")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ExecutionAgentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Incoterm")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobNumber")
                        .HasMaxLength(12)
                        .HasColumnType("NVARCHAR(12)");

                    b.Property<string>("MainCarrier")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("MainVessel")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("ModeOfTransport")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("Movement")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("ShipFrom")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<DateTime>("ShipFromETDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipTo")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<DateTime>("ShipToETADate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalGrossWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("TotalGrossWeightUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal>("TotalNetWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("TotalNetWeightUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal>("TotalPackage")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("TotalPackageUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal>("TotalVolume")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("TotalVolumeUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BillOfLadingNo")
                        .IsUnique();

                    b.ToTable("BillOfLadings");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BillOfLadingShipmentLoadModel", b =>
                {
                    b.Property<long>("BillOfLadingId")
                        .HasColumnType("bigint");

                    b.Property<long>("ShipmentLoadId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ConsolidationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ContainerId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsFCL")
                        .HasColumnType("bit");

                    b.Property<long?>("MasterBillOfLadingId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BillOfLadingId", "ShipmentLoadId");

                    b.HasIndex("ConsolidationId");

                    b.HasIndex("ContainerId");

                    b.HasIndex("MasterBillOfLadingId");

                    b.HasIndex("ShipmentLoadId");

                    b.ToTable("BillOfLadingShipmentLoads");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BookingPolicyModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<int>("ApproverSetting")
                        .HasColumnType("int");

                    b.Property<string>("ApproverUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BookingTimeless")
                        .HasColumnType("int");

                    b.Property<long>("BuyerComplianceId")
                        .HasColumnType("bigint");

                    b.Property<int>("CargoLoadabilities")
                        .HasColumnType("int");

                    b.Property<string>("CarrierSelections")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FulfillmentAccuracies")
                        .HasColumnType("int");

                    b.Property<int>("IncotermSelections")
                        .HasColumnType("int");

                    b.Property<int?>("ItineraryIsEmpty")
                        .HasColumnType("int");

                    b.Property<int>("LogisticsServiceSelections")
                        .HasColumnType("int");

                    b.Property<int>("ModeOfTransports")
                        .HasColumnType("int");

                    b.Property<int>("MovementTypeSelections")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("ShipFromLocationSelections")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipToLocationSelections")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerComplianceId");

                    b.ToTable("BookingPolicies");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BookingTimelessModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int?>("AirEarlyBookingTimeless")
                        .HasColumnType("int");

                    b.Property<int?>("AirLateBookingTimeless")
                        .HasColumnType("int");

                    b.Property<long>("BuyerComplianceId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CfsEarlyBookingTimeless")
                        .HasColumnType("int");

                    b.Property<int?>("CfsLateBookingTimeless")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CyEarlyBookingTimeless")
                        .HasColumnType("int");

                    b.Property<int?>("CyLateBookingTimeless")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerComplianceId")
                        .IsUnique();

                    b.ToTable("BookingTimelesses");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BookingValidationLogModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ActionActivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ActionDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("BuyerComplianceId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FulfillmentJSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("POFulfillmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("POFulfillmentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PolicyID")
                        .HasColumnType("bigint");

                    b.Property<string>("PolicyJSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubmittedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuyerComplianceId");

                    b.ToTable("BookingValidationLogs");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BulkFulfillmentQueryModel", b =>
                {
                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CargoReadyDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipFromName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipToName")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BuyerApprovalModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("ActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AlertNotificationFrequencyType")
                        .HasColumnType("int");

                    b.Property<long?>("ApproverOrgId")
                        .HasColumnType("bigint");

                    b.Property<int>("ApproverSetting")
                        .HasColumnType("int");

                    b.Property<string>("ApproverUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueOnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExceptionActivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExceptionDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExceptionType")
                        .HasColumnType("int");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("POFulfillmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasMaxLength(12)
                        .HasColumnType("VARCHAR(12)");

                    b.Property<string>("RequestByOrganization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Requestor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResponseOn")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Severity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Transaction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("POFulfillmentId");

                    b.ToTable("BuyerApprovals");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BuyerApprovalQueryModel", b =>
                {
                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("POFulfillmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("POFulfillmentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POFulfillmentSupplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("POFulfillmentType")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<string>("StageName")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BuyerComplianceModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("AgentAssignmentMethod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("AllowToBookIn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(30);

                    b.Property<int>("ApprovalAlertFrequency")
                        .HasColumnType("int");

                    b.Property<int>("ApprovalDuration")
                        .HasColumnType("int");

                    b.Property<int>("BookingApproverSetting")
                        .HasColumnType("int");

                    b.Property<string>("BookingApproverUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BookingPolicyAction")
                        .HasColumnType("int");

                    b.Property<string>("BypassEmailDomain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailNotificationTime")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("EnforceCommercialInvoiceFormat")
                        .HasColumnType("bit");

                    b.Property<bool>("EnforcePackingListFormat")
                        .HasColumnType("bit");

                    b.Property<string>("HSCodeShipFromCountryIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HSCodeShipToCountryIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IntegrateWithWMS")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAllowMissingPO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsAssignedAgent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompulsory")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailNotificationToSupplier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsProgressCargoReadyDate")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OvershipTolerancePercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PrincipleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgressNotifyDay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("PurchaseOrderTransmissionFrequency")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseOrderTransmissionMethods")
                        .HasColumnType("int");

                    b.Property<string>("PurchaseOrderTransmissionNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("ServiceType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10);

                    b.Property<decimal?>("ShortShipTolerancePercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BuyerCompliances");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BuyerComplianceQueryModel", b =>
                {
                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<string>("StageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.CargoDetailModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal?>("ChargeableWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("ChargeableWeightUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("Commodity")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("CountryOfOrigin")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<decimal>("GrossWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("GrossWeightUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("HSCode")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("NetWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("NetWeightUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<long?>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<int>("OrderType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(1);

                    b.Property<decimal>("Package")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("PackageUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("ProductNumber")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<long>("ShipmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("ShippingMarks")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<decimal>("Unit")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("UnitUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Volume")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("VolumeUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal?>("VolumetricWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("VolumetricWeightUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentId");

                    b.ToTable("CargoDetails");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.CargoLoadabilityModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("BuyerComplianceId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("CfsMaximumCBM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CfsMinimumCBM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CyMaximumCBM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CyMinimumCBM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EquipmentType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerComplianceId");

                    b.ToTable("CargoLoadabilitys");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.CargoLoadDetailQueryModel", b =>
                {
                    b.Property<decimal>("BalanceGrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalancePackageQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceUnitQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CargoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GrossWeightUOM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("NetWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NetWeightUOM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<string>("PONumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Package")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PackageUOM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.Property<long>("ShipmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("ShipmentNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Unit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitUOM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Volume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VolumeUOM")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ComplianceSelectionModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("BuyerComplianceId")
                        .HasColumnType("bigint");

                    b.Property<string>("CarrierSelectionNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarrierSelections")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CommoditySelections")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FulfillmentAccuracies")
                        .HasColumnType("int");

                    b.Property<int>("IncotermSelections")
                        .HasColumnType("int");

                    b.Property<int>("LogisticsServiceSelections")
                        .HasColumnType("int");

                    b.Property<int>("ModeOfTransportSelections")
                        .HasColumnType("int");

                    b.Property<int>("MovementTypeSelections")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("ShipFromLocationSelections")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipToLocationSelections")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerComplianceId")
                        .IsUnique();

                    b.ToTable("ComplianceSelections");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ConsignmentItineraryModel", b =>
                {
                    b.Property<long>("ConsignmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("ItineraryId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("MasterBillId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<long?>("ShipmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ConsignmentId", "ItineraryId");

                    b.HasIndex("ItineraryId");

                    b.HasIndex("MasterBillId");

                    b.HasIndex("ShipmentId");

                    b.ToTable("ConsignmentItineraries");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ConsignmentModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AgentReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ConfirmedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ConsignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConsignmentHouseBL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsignmentMasterBL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsignmentType")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ExecutionAgentId")
                        .HasColumnType("bigint");

                    b.Property<string>("ExecutionAgentName")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<decimal>("GrossWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("GrossWeightUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<long?>("HouseBillId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("MasterBillId")
                        .HasColumnType("bigint");

                    b.Property<bool>("MemoBOLFlag")
                        .HasColumnType("bit");

                    b.Property<string>("ModeOfTransport")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("Movement")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<decimal>("NetWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("NetWeightUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal>("Package")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("PackageUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<string>("ServiceType")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("ShipFrom")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<DateTime>("ShipFromETDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipTo")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<DateTime>("ShipToETADate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ShipmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<bool>("TriangleTradeFlag")
                        .HasColumnType("bit");

                    b.Property<decimal>("Unit")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("UnitUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Volume")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("VolumeUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("Id");

                    b.HasIndex("HouseBillId");

                    b.HasIndex("MasterBillId");

                    b.HasIndex("ShipmentId");

                    b.ToTable("Consignments");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ConsignmentQueryModel", b =>
                {
                    b.Property<DateTime?>("ConsignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExecutionAgentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("ShipFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ShipmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("ShipmentNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ConsolidationModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CFSCutoffDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CarrierSONo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsolidationNo")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<long?>("ContainerId")
                        .HasColumnType("bigint");

                    b.Property<string>("ContainerNo")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EquipmentType")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<DateTime?>("LoadingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModeOfTransport")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("OriginCFS")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SealNo")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("SealNo2")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalGrossWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("TotalGrossWeightUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal>("TotalNetWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("TotalNetWeightUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal>("TotalPackage")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("TotalPackageUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal>("TotalVolume")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("TotalVolumeUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ContainerId")
                        .IsUnique()
                        .HasFilter("[ContainerId] IS NOT NULL");

                    b.ToTable("Consolidations");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ConsolidationQueryModel", b =>
                {
                    b.Property<DateTime>("CFSCutoffDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CFSCutoffDateOnly")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConsolidationNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ContainerId")
                        .HasColumnType("bigint");

                    b.Property<string>("ContainerNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LoadingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LoadingDateOnly")
                        .HasColumnType("datetime2");

                    b.Property<string>("OriginCFS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipmentInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipmentNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ContainerItineraryModel", b =>
                {
                    b.Property<long>("ItineraryId")
                        .HasColumnType("bigint");

                    b.Property<long>("ContainerId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ItineraryId", "ContainerId");

                    b.HasIndex("ContainerId");

                    b.ToTable("ContainerItineraries");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ContainerModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CarrierSONo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContainerNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("ContainerType")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsFCL")
                        .HasColumnType("bit");

                    b.Property<string>("LoadPlanRefNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateTime?>("LoadingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Movement")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SealNo")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("SealNo2")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("ShipFrom")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("ShipFromETDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipTo")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("ShipToETADate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalGrossWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("TotalGrossWeightUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal>("TotalNetWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("TotalNetWeightUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<int>("TotalPackage")
                        .HasColumnType("int");

                    b.Property<string>("TotalPackageUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal>("TotalVolume")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("TotalVolumeUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ContainerNo", "LoadPlanRefNo")
                        .IsUnique();

                    b.HasIndex("ShipFrom", "ContainerNo");

                    b.HasIndex("ShipTo", "ContainerNo");

                    b.ToTable("Containers");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ContainerQueryModel", b =>
                {
                    b.Property<string>("ContainerNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Movement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShipFromETDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShipToETADate")
                        .HasColumnType("datetime2");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ContractMasterModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AccountName")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("CarrierCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)")
                        .HasDefaultValue("");

                    b.Property<string>("CarrierContractNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("ColoaderCode")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("ContractHolder")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("ContractType")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerContractType")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<bool?>("IsVIP")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("ParentContract")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("RealContractNo")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("DATETIME2(7)");

                    b.HasKey("Id");

                    b.HasIndex("CarrierContractNo")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("CarrierContractNo"), new[] { "Id", "ContractType" });

                    b.ToTable("ContractMaster", "dbo");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ContractMasterQueryModel", b =>
                {
                    b.Property<string>("CarrierCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarrierContractNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarrierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColoaderCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractHolder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerContractType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsVip")
                        .HasColumnType("bit");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RealContractNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("ValidFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidToDate")
                        .HasColumnType("datetime2");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ContractTypeModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ContractTypes");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.Cruise.CruiseOrderContactModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("ContactName")
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("BIGINT");

                    b.Property<string>("OrganizationRole")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("CruiseOrderContacts", "cruise");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.Cruise.CruiseOrderItemModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<string>("BuyerName")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Comments")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<bool?>("CommercialInvoice")
                        .HasColumnType("bit");

                    b.Property<string>("Contract")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("NVARCHAR(16)");

                    b.Property<string>("DelayCause")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("DeliveryPort")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("DeliveryTicket")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Destination")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("DestinationCountry")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime?>("FirstReceivedDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<string>("ItemId")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("ItemName")
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("ItemUpdates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LatestDialog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LineEstimatedDeliveryDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<string>("MakerReferenceOfItemName2")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<decimal?>("NetUSUnitPrice")
                        .HasColumnType("DECIMAL(18,3)");

                    b.Property<decimal?>("NetUnitPrice")
                        .HasColumnType("DECIMAL(18,3)");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrderQuantity")
                        .HasColumnType("bigint");

                    b.Property<string>("Origin")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<long?>("OriginalItemId")
                        .HasColumnType("BIGINT");

                    b.Property<long?>("OriginalOrganizationId")
                        .HasColumnType("BIGINT");

                    b.Property<int>("POLine")
                        .HasColumnType("INT");

                    b.Property<string>("Priority")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<long?>("QuantityDelivered")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("QuotedCost")
                        .HasColumnType("DECIMAL(18,3)");

                    b.Property<string>("QuotedCostCurrency")
                        .HasColumnType("NVARCHAR(16)");

                    b.Property<DateTime?>("REQOnboardDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<DateTime?>("ReadyDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<int?>("RequestLine")
                        .HasColumnType("int");

                    b.Property<string>("RequestLineShoreNotes")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("RequestNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RequestQuantity")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("ShipRequestLineNotes")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("ShipboardLoadingLocation")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<long?>("ShipmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Sub1")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Sub2")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<decimal?>("TotalOrderPrice")
                        .HasColumnType("DECIMAL(18,3)");

                    b.Property<int?>("UOM")
                        .HasColumnType("INT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ShipmentId");

                    b.ToTable("CruiseOrderItems", "cruise");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.Cruise.CruiseOrderModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActualDeliveryDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<DateTime?>("ActualShipDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<string>("ApprovalStatus")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<string>("Approver")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("BudgetAccount")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("BudgetId")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<int?>("BudgetPeriod")
                        .HasColumnType("INT");

                    b.Property<int?>("BudgetYear")
                        .HasColumnType("INT");

                    b.Property<string>("CertificateId")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("CertificateNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUser")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Delivered")
                        .HasColumnType("NVARCHAR(5)");

                    b.Property<string>("DeliveryMeans")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("Department")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<DateTime?>("EstimatedDeliveryDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<string>("FirstReceivingPoint")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<decimal?>("Invoiced")
                        .HasColumnType("DECIMAL(18,3)");

                    b.Property<string>("MaintenanceObject")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Maker")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("POCause")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<DateTime?>("PODate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<string>("POId")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("PONumber")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("POPriority")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("POStatus")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("POSubject")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("POType")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<DateTime?>("RequestApprovedDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<DateTime?>("RequestDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<string>("RequestPriority")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("RequestType")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("RequestType2")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("RequestType3")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("Requestor")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Ship")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WithWO")
                        .HasColumnType("NVARCHAR(5)");

                    b.HasKey("Id");

                    b.ToTable("CruiseOrders", "cruise");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.Cruise.CruiseOrderQueryModel", b =>
                {
                    b.Property<string>("Consignee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("PODate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PONumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.Cruise.CruiseOrderWarehouseInfoModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("AgentInDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<int?>("AvailableDays")
                        .HasColumnType("int");

                    b.Property<string>("BondNo")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Bonded")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("BookedToShip")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<DateTime?>("BookingCreatedDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<string>("BookingNumber")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("BookingRemarks")
                        .HasColumnType("NVARCHAR(300)");

                    b.Property<decimal?>("CBM")
                        .HasColumnType("NUMERIC(12,4)");

                    b.Property<string>("ContainerId")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("ContainerNumber")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CruiseOrderItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("Delivered")
                        .HasColumnType("VARCHAR(5)");

                    b.Property<DateTime?>("DeliveryConfirmDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<string>("DeliveryTicket")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Department")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("Dimension")
                        .HasColumnType("VARCHAR(256)");

                    b.Property<DateTime?>("ExpLineShipDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<DateTime?>("GRDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<string>("HAWBMAWB")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Hazardous")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<DateTime?>("InDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<decimal?>("KGS")
                        .HasColumnType("NUMERIC(12,4)");

                    b.Property<int?>("KeepWHDays")
                        .HasColumnType("int");

                    b.Property<string>("MRStatus")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("ModeOfTransport")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("OSD")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("OSDReason")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("OnHold")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("OnHoldCode")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int?>("OnHoldDays")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PLClosingDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<string>("POCause")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("PackageID")
                        .HasColumnType("NVARCHAR(300)");

                    b.Property<DateTime?>("PackedDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<int?>("PackedDays")
                        .HasColumnType("int");

                    b.Property<string>("PackingList")
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<int?>("PhysicalQty")
                        .HasColumnType("int");

                    b.Property<long?>("QuantityDelivered")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RTPDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<int?>("ReceivedDays")
                        .HasColumnType("int");

                    b.Property<long?>("ReceivedQty")
                        .HasColumnType("bigint");

                    b.Property<string>("RefID")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(256)")
                        .HasDefaultValue("");

                    b.Property<int?>("ReleaseToPackDays")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemoteDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<string>("RemoteStatus")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<DateTime?>("ReqApprovedDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<long?>("ReqLine")
                        .HasColumnType("bigint");

                    b.Property<string>("ReqType")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("ReqType2")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("ReqType3")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Ship")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("UNNo")
                        .HasColumnType("VARCHAR(256)");

                    b.Property<string>("UOM")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Warehouse")
                        .HasColumnType("NVARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("CruiseOrderItemId")
                        .IsUnique();

                    b.ToTable("CruiseOrderWarehouseInfos", "cruise");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.CurrencyExchangeRateModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code", "StartDate")
                        .IsUnique();

                    b.ToTable("CurrencyExchangeRates");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.CustomerRelationshipQueryModel", b =>
                {
                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerRefId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.Email.EmailRecipientModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("BCC")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("CC")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("To")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TemplateName")
                        .IsUnique();

                    b.ToTable("EmailRecipients", "email");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.EmailSettingModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("BuyerComplianceId")
                        .HasColumnType("bigint");

                    b.Property<string>("CC")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DefaultSendTo")
                        .HasColumnType("bit");

                    b.Property<int>("EmailType")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SendTo")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerComplianceId");

                    b.ToTable("EmailSettings");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.FreightSchedulerChangeLogModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JsonCurrentData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JsonNewData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<long>("ScheduleId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("FreightSchedulerChangeLogs", (string)null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.FreightSchedulerModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("ATADate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<DateTime?>("ATDDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<DateTime?>("CYClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CYOpenDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CarrierCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("CarrierName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ETADate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<DateTime>("ETDDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<string>("FlightNumber")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<bool>("IsAllowExternalUpdate")
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LocationFromCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("LocationFromName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("LocationToCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("LocationToName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("MAWB")
                        .HasColumnType("CHAR(11)");

                    b.Property<string>("ModeOfTransport")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VesselName")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("Voyage")
                        .HasColumnType("NVARCHAR(512)");

                    b.HasKey("Id");

                    b.ToTable("FreightSchedulers", (string)null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.FreightSchedulerQueryModel", b =>
                {
                    b.Property<DateTime?>("ATADate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ATDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AllowUpdateFromExternal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CYClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CYOpenDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CarrierCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarrierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ETADate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ETDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlightNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasLinkedItineraries")
                        .HasColumnType("bit");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAllowExternalUpdate")
                        .HasColumnType("bit");

                    b.Property<string>("LocationFromName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationToName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MAWB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModeOfTransport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VesselMAWB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VesselName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voyage")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.FtpServerModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FileProtocol")
                        .HasColumnType("int");

                    b.Property<string>("FolderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("Passphrase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("PrivateKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.HasKey("Id");

                    b.ToTable("FtpServers");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.GlobalIdActivityModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("ActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ActivityId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GlobalId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("GlobalId");

                    b.ToTable("GlobalIdActivities");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.GlobalIdApprovalModel", b =>
                {
                    b.Property<string>("GlobalId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("ApprovalId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("GlobalId", "ApprovalId");

                    b.HasIndex("ApprovalId");

                    b.ToTable("GlobalIdApprovals");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.GlobalIdAttachmentModel", b =>
                {
                    b.Property<string>("GlobalId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("AttachemntId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("GlobalId", "AttachemntId");

                    b.HasIndex("AttachemntId");

                    b.ToTable("GlobalIdAttachments");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.GlobalIdMasterDialogModel", b =>
                {
                    b.Property<string>("GlobalId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("MasterDialogId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtendedData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("GlobalId", "MasterDialogId");

                    b.HasIndex("MasterDialogId");

                    b.ToTable("GlobalIdMasterDialogs");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.GlobalIdModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("EntityId")
                        .HasColumnType("bigint");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR(64)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GlobalIds");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ImportDataProgressModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("CompletedSteps")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Log")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TotalSteps")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ImportDataProgresses");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.IntegrationLogModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("APIMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("APIName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EDIMessageRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EDIMessageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PostingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Profile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PostingDate", "Id");

                    b.ToTable("IntegrationLogs");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.IntegrationLogQueryModel", b =>
                {
                    b.Property<string>("APIName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EDIMessageRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EDIMessageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PostingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Profile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.InvoiceModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("BillBy")
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<long?>("BillByOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("BillOfLadingNo")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("BillTo")
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<long?>("BillToOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("BlobId")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfSubmissionToCruise")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<DateTime?>("ETADate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ETDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(35)");

                    b.Property<string>("InvoiceType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(1)")
                        .HasDefaultValue("N");

                    b.Property<string>("JobNo")
                        .HasMaxLength(35)
                        .HasColumnType("NVARCHAR(35)");

                    b.Property<DateTime?>("PaymentDueDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceNo")
                        .IsUnique();

                    b.HasIndex("InvoiceDate", "Id");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ItineraryModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AirlineCode")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<DateTime?>("CYClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CYOpenDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CarrierName")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DischargePort")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<DateTime>("ETADate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ETDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlightNumber")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<bool>("IsImportFromApi")
                        .HasColumnType("bit");

                    b.Property<string>("LoadingPort")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("ModeOfTransport")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("RoadFreightRef")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SCAC")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<long?>("ScheduleId")
                        .HasColumnType("bigint");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VesselFlight")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("VesselName")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("Voyage")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Itineraries");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.MasterBillOfLadingContactModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("MasterBillOfLadingId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("OrganizationRole")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MasterBillOfLadingId");

                    b.ToTable("MasterBillContacts");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.MasterBillOfLadingItineraryModel", b =>
                {
                    b.Property<long>("ItineraryId")
                        .HasColumnType("bigint");

                    b.Property<long>("MasterBillOfLadingId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ItineraryId", "MasterBillOfLadingId");

                    b.HasIndex("MasterBillOfLadingId");

                    b.ToTable("MasterBillItineraries");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.MasterBillOfLadingModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AirlineCode")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("CarrierContractNo")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("CarrierName")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ExecutionAgentId")
                        .HasColumnType("BIGINT");

                    b.Property<string>("FlightNo")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<bool>("IsDirectMaster")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MasterBillOfLadingNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("MasterBillOfLadingType")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("ModeOfTransport")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("Movement")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<DateTime>("OnBoardDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlaceOfDelivery")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("PlaceOfIssue")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("PlaceOfReceipt")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("PortOfDischarge")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("PortOfLoading")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SCAC")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vessel")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("VesselFlight")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("Voyage")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.HasKey("Id");

                    b.HasIndex("MasterBillOfLadingNo")
                        .IsUnique();

                    b.HasIndex("OnBoardDate", "Id");

                    b.ToTable("MasterBills");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.MasterBillOfLadingQueryModel", b =>
                {
                    b.Property<string>("CarrierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractHolder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("MasterBillOfLadingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OnBoardDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RealContractNo")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.MasterDialogModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayOn")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR(64)");

                    b.Property<string>("FilterCriteria")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR(64)");

                    b.Property<string>("FilterValue")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("NVARCHAR(1024)");

                    b.Property<long?>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Owner")
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SelectedItems")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MasterDialogs");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.MasterDialogQueryModel", b =>
                {
                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDateOnly")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilterCriteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilterValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.Mobile.MobileApplicationModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDiscontinued")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PackageUrl")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(52)
                        .HasColumnType("nvarchar(52)");

                    b.HasKey("Id");

                    b.HasIndex("PublishedDate");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("PublishedDate"), new[] { "Version", "PackageUrl" });

                    b.HasIndex("Version")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("Version"), new[] { "IsDiscontinued" });

                    b.ToTable("Applications", "mobile");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.NoteModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtendedData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GlobalObjectId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("NVARCHAR(450)");

                    b.Property<string>("NoteText")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("Owner")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.NotificationModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessageKey")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("ReadUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.OrganizationPreferenceModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ChineseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HSCode")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductCode", "OrganizationId")
                        .IsUnique();

                    b.ToTable("OrganizationPreferences");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.OrgContactPreferenceModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("AddressLine3")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("AddressLine4")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyName", "OrganizationId")
                        .IsUnique();

                    b.ToTable("OrgContactPreferences");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.PermissionModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dashboard",
                            Order = 1001
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dashboard.ThisWeekShipments",
                            Order = 1002
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dashboard.ThisWeekCustomerPO",
                            Order = 1003
                        },
                        new
                        {
                            Id = 4L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dashboard.ThisWeekOceanVolume",
                            Order = 1004
                        },
                        new
                        {
                            Id = 5L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dashboard.Top10ShipperThisWeek",
                            Order = 1005
                        },
                        new
                        {
                            Id = 6L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dashboard.Top10ConsigneeThisWeek",
                            Order = 1006
                        },
                        new
                        {
                            Id = 7L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dashboard.Top10CarrierThisWeek",
                            Order = 1007
                        },
                        new
                        {
                            Id = 8L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dashboard.MonthlyTop5OceanVolumeByOrigin",
                            Order = 1008
                        },
                        new
                        {
                            Id = 9L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dashboard.MonthlyTop5OceanVolumeByDestination",
                            Order = 1009
                        },
                        new
                        {
                            Id = 10L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dashboard.MonthlyOceanVolumeByMovement",
                            Order = 1010
                        },
                        new
                        {
                            Id = 11L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dashboard.MonthlyOceanVolumeByServiceType",
                            Order = 1011
                        },
                        new
                        {
                            Id = 12L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Product",
                            Order = 1101
                        },
                        new
                        {
                            Id = 13L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Product.List",
                            Order = 1102
                        },
                        new
                        {
                            Id = 14L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Product.Detail",
                            Order = 1103
                        },
                        new
                        {
                            Id = 15L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Product.Detail.Add",
                            Order = 1104
                        },
                        new
                        {
                            Id = 16L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Product.Detail.Edit",
                            Order = 1105
                        },
                        new
                        {
                            Id = 17L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Order",
                            Order = 1201
                        },
                        new
                        {
                            Id = 18L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Order.POList",
                            Order = 1202
                        },
                        new
                        {
                            Id = 19L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Order.PODetail",
                            Order = 1203
                        },
                        new
                        {
                            Id = 20L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Order.PODetail.Add",
                            Order = 1204
                        },
                        new
                        {
                            Id = 21L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Order.PODetail.Edit",
                            Order = 1205
                        },
                        new
                        {
                            Id = 22L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Order.PODelegation",
                            Order = 1207
                        },
                        new
                        {
                            Id = 23L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Order.POFulfillmentList",
                            Order = 1209
                        },
                        new
                        {
                            Id = 24L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Order.POFulfillmentDetail",
                            Order = 1210
                        },
                        new
                        {
                            Id = 25L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Order.POFulfillmentDetail.Add",
                            Order = 1211
                        },
                        new
                        {
                            Id = 26L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Order.POFulfillmentDetail.Edit",
                            Order = 1212
                        },
                        new
                        {
                            Id = 27L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Order.PendingApprovalList",
                            Order = 1213
                        },
                        new
                        {
                            Id = 28L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Order.PendingApprovalDetail",
                            Order = 1214
                        },
                        new
                        {
                            Id = 29L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Order.PendingApprovalDetail.Edit",
                            Order = 1215
                        },
                        new
                        {
                            Id = 30L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment",
                            Order = 1401
                        },
                        new
                        {
                            Id = 31L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.List",
                            Order = 1402
                        },
                        new
                        {
                            Id = 32L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.Detail",
                            Order = 1403
                        },
                        new
                        {
                            Id = 33L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.Detail.ConfirmItinerary",
                            Order = 1424
                        },
                        new
                        {
                            Id = 34L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.ContainerDetail",
                            Order = 1407
                        },
                        new
                        {
                            Id = 40L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.ConsignmentList",
                            Order = 1410
                        },
                        new
                        {
                            Id = 41L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.ConsignmentDetail",
                            Order = 1411
                        },
                        new
                        {
                            Id = 42L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.ConsignmentDetail.Add",
                            Order = 1412
                        },
                        new
                        {
                            Id = 43L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.ConsignmentDetail.Edit",
                            Order = 1413
                        },
                        new
                        {
                            Id = 44L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Invoice",
                            Order = 1601
                        },
                        new
                        {
                            Id = 45L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Invoice.List",
                            Order = 1602
                        },
                        new
                        {
                            Id = 46L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization",
                            Order = 1701
                        },
                        new
                        {
                            Id = 47L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.List",
                            Order = 1702
                        },
                        new
                        {
                            Id = 48L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.Detail",
                            Order = 1703
                        },
                        new
                        {
                            Id = 49L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.Detail.Edit",
                            Order = 1705
                        },
                        new
                        {
                            Id = 50L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.ComplianceList",
                            Order = 1706
                        },
                        new
                        {
                            Id = 51L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.ComplianceDetail",
                            Order = 1707
                        },
                        new
                        {
                            Id = 52L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.ComplianceDetail.Edit",
                            Order = 1708
                        },
                        new
                        {
                            Id = 53L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User",
                            Order = 1801
                        },
                        new
                        {
                            Id = 54L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User.RequestList",
                            Order = 1802
                        },
                        new
                        {
                            Id = 55L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User.RequestDetail",
                            Order = 1803
                        },
                        new
                        {
                            Id = 56L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User.RequestDetail.Edit",
                            Order = 1804
                        },
                        new
                        {
                            Id = 57L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User.UserList",
                            Order = 1805
                        },
                        new
                        {
                            Id = 58L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User.UserDetail",
                            Order = 1806
                        },
                        new
                        {
                            Id = 59L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User.UserDetail.Edit",
                            Order = 1808
                        },
                        new
                        {
                            Id = 60L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User.RoleList",
                            Order = 1809
                        },
                        new
                        {
                            Id = 61L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User.RoleDetail",
                            Order = 1810
                        },
                        new
                        {
                            Id = 62L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User.RoleDetail.Edit",
                            Order = 1811
                        },
                        new
                        {
                            Id = 63L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Reports",
                            Order = 1901
                        },
                        new
                        {
                            Id = 64L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Reports.List",
                            Order = 1902
                        },
                        new
                        {
                            Id = 65L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "IntegrationLog",
                            Order = 2001
                        },
                        new
                        {
                            Id = 66L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "IntegrationLog.List",
                            Order = 2002
                        },
                        new
                        {
                            Id = 67L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CruiseOrder",
                            Order = 1301
                        },
                        new
                        {
                            Id = 68L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CruiseOrder.List",
                            Order = 1302
                        },
                        new
                        {
                            Id = 69L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CruiseOrder.Detail",
                            Order = 1303
                        },
                        new
                        {
                            Id = 70L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CruiseOrder.Detail.Add",
                            Order = 1304
                        },
                        new
                        {
                            Id = 71L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CruiseOrder.Detail.Edit",
                            Order = 1305
                        },
                        new
                        {
                            Id = 72L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.Detail.Add",
                            Order = 1704
                        },
                        new
                        {
                            Id = 73L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.FreightSchedulers",
                            Order = 1421
                        },
                        new
                        {
                            Id = 74L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.FreightSchedulers.Add",
                            Order = 1422
                        },
                        new
                        {
                            Id = 75L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.FreightSchedulers.Edit",
                            Order = 1423
                        },
                        new
                        {
                            Id = 76L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.ShippedPOList",
                            Order = 1405
                        },
                        new
                        {
                            Id = 77L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.ContainerList",
                            Order = 1406
                        },
                        new
                        {
                            Id = 78L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.CarrierList",
                            Order = 1709
                        },
                        new
                        {
                            Id = 79L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.CarrierDetail",
                            Order = 1710
                        },
                        new
                        {
                            Id = 80L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.CarrierDetail.Add",
                            Order = 1711
                        },
                        new
                        {
                            Id = 81L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.CarrierDetail.Edit",
                            Order = 1712
                        },
                        new
                        {
                            Id = 82L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.VesselList",
                            Order = 1717
                        },
                        new
                        {
                            Id = 83L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.VesselDetail",
                            Order = 1718
                        },
                        new
                        {
                            Id = 84L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.VesselDetail.Add",
                            Order = 1719
                        },
                        new
                        {
                            Id = 85L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.VesselDetail.Edit",
                            Order = 1720
                        },
                        new
                        {
                            Id = 86L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.LocationList",
                            Order = 1721
                        },
                        new
                        {
                            Id = 87L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.LocationDetail",
                            Order = 1722
                        },
                        new
                        {
                            Id = 88L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.LocationDetail.Add",
                            Order = 1723
                        },
                        new
                        {
                            Id = 89L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.LocationDetail.Edit",
                            Order = 1724
                        },
                        new
                        {
                            Id = 90L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dashboard.EndToEndShipmentStatus",
                            Order = 1012
                        },
                        new
                        {
                            Id = 91L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.MasterDialogs",
                            Order = 1425
                        },
                        new
                        {
                            Id = 92L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.MasterDialogs.Add",
                            Order = 1426
                        },
                        new
                        {
                            Id = 93L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.MasterDialogs.Edit",
                            Order = 1427
                        },
                        new
                        {
                            Id = 94L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.ContainerDetail.Add",
                            Order = 1408
                        },
                        new
                        {
                            Id = 95L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.ContainerDetail.Edit",
                            Order = 1409
                        },
                        new
                        {
                            Id = 96L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.ConsolidationList",
                            Order = 1414
                        },
                        new
                        {
                            Id = 97L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.ConsolidationDetail",
                            Order = 1415
                        },
                        new
                        {
                            Id = 98L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.ConsolidationDetail.Add",
                            Order = 1416
                        },
                        new
                        {
                            Id = 99L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.ConsolidationDetail.Edit",
                            Order = 1417
                        },
                        new
                        {
                            Id = 100L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.ConsolidationDetail.Confirm",
                            Order = 1419
                        },
                        new
                        {
                            Id = 101L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.ConsolidationDetail.Unconfirm",
                            Order = 1420
                        },
                        new
                        {
                            Id = 102L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BillOfLading",
                            Order = 1501
                        },
                        new
                        {
                            Id = 103L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BillOfLading.ListOfHouseBL",
                            Order = 1502
                        },
                        new
                        {
                            Id = 104L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BillOfLading.HouseBLDetail",
                            Order = 1503
                        },
                        new
                        {
                            Id = 105L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BillOfLading.HouseBLDetail.Add",
                            Order = 1504
                        },
                        new
                        {
                            Id = 106L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BillOfLading.HouseBLDetail.Edit",
                            Order = 1505
                        },
                        new
                        {
                            Id = 107L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BillOfLading.ListOfMasterBL",
                            Order = 1506
                        },
                        new
                        {
                            Id = 108L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BillOfLading.MasterBLDetail",
                            Order = 1507
                        },
                        new
                        {
                            Id = 109L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BillOfLading.MasterBLDetail.Add",
                            Order = 1508
                        },
                        new
                        {
                            Id = 110L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BillOfLading.MasterBLDetail.Edit",
                            Order = 1509
                        },
                        new
                        {
                            Id = 111L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.Detail.Edit",
                            Order = 1404
                        },
                        new
                        {
                            Id = 112L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Order.POProgressCheckCRD",
                            Order = 1208
                        },
                        new
                        {
                            Id = 113L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shipment.ConsolidationDetail.Delete",
                            Order = 1418
                        },
                        new
                        {
                            Id = 114L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Reports.TaskList",
                            Order = 1903
                        },
                        new
                        {
                            Id = 115L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Reports.TaskDetail",
                            Order = 1904
                        },
                        new
                        {
                            Id = 116L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Reports.TaskDetail.Add",
                            Order = 1905
                        },
                        new
                        {
                            Id = 117L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Reports.TaskDetail.Edit",
                            Order = 1906
                        },
                        new
                        {
                            Id = 118L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.ContractList",
                            Order = 1713
                        },
                        new
                        {
                            Id = 119L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.ContractDetail",
                            Order = 1714
                        },
                        new
                        {
                            Id = 120L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.ContractDetail.Add",
                            Order = 1715
                        },
                        new
                        {
                            Id = 121L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.ContractDetail.Edit",
                            Order = 1716
                        },
                        new
                        {
                            Id = 122L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Order.PODetail.Close",
                            Order = 1206
                        },
                        new
                        {
                            Id = 123L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.WarehouseLocationList",
                            Order = 1725
                        },
                        new
                        {
                            Id = 124L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.WarehouseLocationDetail",
                            Order = 1726
                        },
                        new
                        {
                            Id = 125L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.WarehouseLocationDetail.Add",
                            Order = 1727
                        },
                        new
                        {
                            Id = 126L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.WarehouseLocationDetail.Edit",
                            Order = 1728
                        },
                        new
                        {
                            Id = 127L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.ArticleMasterList",
                            Order = 1729
                        },
                        new
                        {
                            Id = 128L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Organization.ArticleMasterDetail",
                            Order = 1730
                        },
                        new
                        {
                            Id = 129L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User.UserDetail.Add",
                            Order = 1807
                        },
                        new
                        {
                            Id = 130L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dashboard.CategorizedPO",
                            Order = 1013
                        },
                        new
                        {
                            Id = 131L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BalanceOfGoods",
                            Order = 2101
                        },
                        new
                        {
                            Id = 132L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BalanceOfGoods.Enquiry",
                            Order = 2102
                        },
                        new
                        {
                            Id = 139L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Order.RoutingOrderList",
                            Order = 1216
                        },
                        new
                        {
                            Id = 140L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Order.RoutingOrderDetail",
                            Order = 1217
                        },
                        new
                        {
                            Id = 141L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Order.RoutingOrderDetail.Edit",
                            Order = 1218
                        },
                        new
                        {
                            Id = 142L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Order.RoutingOrderDetail.Confirm",
                            Order = 1219
                        });
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentAllocatedOrderModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("BalanceQty")
                        .HasColumnType("int");

                    b.Property<int?>("BookedPackage")
                        .HasColumnType("int");

                    b.Property<int>("BookedQty")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("GrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("POFulfillmentBookingRequestId")
                        .HasColumnType("bigint");

                    b.Property<long>("POFulfillmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("POLineItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PurchaseOrderId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<long?>("ShipmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("DECIMAL(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("POFulfillmentBookingRequestId");

                    b.HasIndex("POFulfillmentId");

                    b.HasIndex("POLineItemId");

                    b.HasIndex("ShipmentId");

                    b.ToTable("POFulfillmentAllocatedOrders");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentBookingRequestModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("BillOfLadingHeader")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<DateTime>("BookedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BookingReferenceNumber")
                        .HasColumnType("NVARCHAR(25)");

                    b.Property<DateTime?>("CFSClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CFSWarehouseCode")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("CFSWarehouseDescription")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<DateTime?>("CYClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CYEmptyPickupTerminalCode")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("CYEmptyPickupTerminalDescription")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<DateTime?>("CargoClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("POFulfillmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("RequestContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SONumber")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Warehouse")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.HasKey("Id");

                    b.HasIndex("BookingReferenceNumber")
                        .IsUnique()
                        .HasFilter("[BookingReferenceNumber] IS NOT NULL");

                    b.HasIndex("POFulfillmentId");

                    b.ToTable("POFulfillmentBookingRequests");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentCargoDetailModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Commodity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCodeOfOrigin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DimensionUnit")
                        .HasColumnType("int");

                    b.Property<decimal>("GrossWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<decimal>("Height")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("HsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Length")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<int>("LineOrder")
                        .HasColumnType("int");

                    b.Property<string>("LoadReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<long>("POFulfillmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("PackageDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PackageQuantity")
                        .HasColumnType("int");

                    b.Property<int>("PackageUOM")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("ShippingMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitQuantity")
                        .HasColumnType("int");

                    b.Property<int>("UnitUOM")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Volume")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<decimal>("Width")
                        .HasColumnType("DECIMAL(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("POFulfillmentId");

                    b.ToTable("POFulfillmentCargoDetails");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentCargoReceiveItemModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ColourCode")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DGFlag")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<decimal?>("GrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<DateTime>("InDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InnerPacakageQty")
                        .HasColumnType("int");

                    b.Property<int?>("Length")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("OuterPackageQty")
                        .HasColumnType("int");

                    b.Property<long>("POFulfillmentCargoReceiveId")
                        .HasColumnType("bigint");

                    b.Property<long>("POFulfillmentOrderId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SizeCode")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("StyleNo")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<int?>("UnitUOM")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<int?>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("POFulfillmentCargoReceiveId");

                    b.HasIndex("POFulfillmentOrderId")
                        .IsUnique();

                    b.ToTable("POFulfillmentCargoReceiveItems");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentCargoReceiveModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CRNo")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HouseNo")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<long>("POFulfillmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("PlantNo")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("POFulfillmentCargoReceives");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentContactModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("AddressLine3")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("AddressLine4")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("OrganizationRole")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<long>("POFulfillmentId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("POFulfillmentId");

                    b.ToTable("POFulfillmentContacts");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentItineraryModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("CarrierId")
                        .HasColumnType("bigint");

                    b.Property<string>("CarrierName")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DischargePort")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<long>("DischargePortId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ETADate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ETDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoadingPort")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<long>("LoadingPortId")
                        .HasColumnType("bigint");

                    b.Property<int>("ModeOfTransport")
                        .HasColumnType("int");

                    b.Property<long>("POFulfillmentId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VesselFlight")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.HasKey("Id");

                    b.HasIndex("POFulfillmentId");

                    b.ToTable("POFulfillmentItineraries");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentLoadDetailModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerPONumber")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("DimensionUnit")
                        .HasColumnType("int");

                    b.Property<decimal>("GrossWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<decimal?>("Length")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<decimal?>("NetWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<long>("POFulfillmentLoadId")
                        .HasColumnType("bigint");

                    b.Property<long>("POFulfillmentOrderId")
                        .HasColumnType("bigint");

                    b.Property<string>("PackageDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PackageQuantity")
                        .HasColumnType("int");

                    b.Property<int>("PackageUOM")
                        .HasColumnType("int");

                    b.Property<string>("ProductCode")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.Property<string>("ShippingMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitQuantity")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Volume")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<decimal?>("Width")
                        .HasColumnType("DECIMAL(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("POFulfillmentLoadId");

                    b.ToTable("POFulfillmentLoadDetails");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentLoadModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ContainerNumber")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EquipmentType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GateInDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoadReferenceNumber")
                        .HasMaxLength(12)
                        .HasColumnType("NVARCHAR(12)");

                    b.Property<DateTime?>("LoadingDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("POFulfillmentId")
                        .HasColumnType("bigint");

                    b.Property<int>("PackageUOM")
                        .HasColumnType("int");

                    b.Property<decimal>("PlannedGrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PlannedNetWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<int>("PlannedPackageQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("PlannedVolume")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SealNumber")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("SealNumber2")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("SubtotalGrossWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<decimal>("SubtotalNetWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<int>("SubtotalPackageQuantity")
                        .HasColumnType("int");

                    b.Property<int>("SubtotalUnitQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("SubtotalVolume")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<decimal?>("TotalGrossWeight")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal?>("TotalNetWeight")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("POFulfillmentId");

                    b.ToTable("POFulfillmentLoads");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActualTimeArrival")
                        .HasColumnType("datetime2");

                    b.Property<string>("AgentAssignmentMode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .HasColumnType("NVARCHAR(32)")
                        .HasDefaultValue("Default");

                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CFSClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CFSWarehouseCode")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("CFSWarehouseDescription")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<DateTime?>("CYClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CYEmptyPickupTerminalCode")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("CYEmptyPickupTerminalDescription")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<DateTime?>("CargoReadyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyNo")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("ConfirmBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("ConfirmedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ConfirmedHubArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContainerNo")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryMode")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("DeliveryPort")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<long?>("DeliveryPortId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ETADestination")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ETDOrigin")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailSubject")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpectedShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Forwarder")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<int>("FulfilledFromPOType")
                        .HasColumnType("int");

                    b.Property<int>("FulfillmentType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(1);

                    b.Property<string>("HAWBNo")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<int>("Incoterm")
                        .HasColumnType("int");

                    b.Property<bool>("IsBatteryOrChemical")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCIQOrFumigation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsContainDangerousGoods")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExportLicence")
                        .HasColumnType("bit");

                    b.Property<bool>("IsForwarderBookingItineraryReady")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFulfilledFromPO")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGeneratePlanToShip")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNotifyPartyAsConsignee")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPartialShipment")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShipperPickup")
                        .HasColumnType("bit");

                    b.Property<string>("LoadingBay")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("LogisticsService")
                        .HasColumnType("int");

                    b.Property<int>("ModeOfTransport")
                        .HasColumnType("int");

                    b.Property<int>("MovementType")
                        .HasColumnType("int");

                    b.Property<string>("NameofInternationalAccount")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("Number")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<int>("OrderFulfillmentPolicy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(20);

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlantNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PreferredCarrier")
                        .HasColumnType("bigint");

                    b.Property<string>("ReceiptPort")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<long?>("ReceiptPortId")
                        .HasColumnType("bigint");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SONo")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<long>("ShipFrom")
                        .HasColumnType("bigint");

                    b.Property<string>("ShipFromName")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<long>("ShipTo")
                        .HasColumnType("bigint");

                    b.Property<string>("ShipToName")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VesselName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("VoyageNo")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.ToTable("POFulfillments");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentOrderModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("BalanceUnitQty")
                        .HasColumnType("int");

                    b.Property<int?>("BookedPackage")
                        .HasColumnType("int");

                    b.Property<string>("ChineseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColourCode")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("Commodity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCodeOfOrigin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerPONumber")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<int>("FulfillmentUnitQty")
                        .HasColumnType("int");

                    b.Property<decimal?>("GrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LoadedQty")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OpenQty")
                        .HasColumnType("int");

                    b.Property<int>("OrderedUnitQty")
                        .HasColumnType("int");

                    b.Property<long>("POFulfillmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("POLineItemId")
                        .HasColumnType("bigint");

                    b.Property<int>("PackageUOM")
                        .HasColumnType("int");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PurchaseOrderId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SeasonCode")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("ShippingMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StyleNo")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<int>("UnitUOM")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<decimal?>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("POFulfillmentId");

                    b.ToTable("POFulfillmentOrders");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentShortshipOrderModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("ApprovedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("BalanceUnitQty")
                        .HasColumnType("int");

                    b.Property<int?>("BookedPackage")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerPONumber")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<int>("FulfillmentUnitQty")
                        .HasColumnType("int");

                    b.Property<decimal?>("GrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int>("OrderedUnitQty")
                        .HasColumnType("int");

                    b.Property<long>("POFulfillmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("POFulfillmentNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("PolicyLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<long>("PurchaseOrderId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("DECIMAL(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("POFulfillmentId");

                    b.ToTable("POFulfillmentShortshipOrders");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentShortshipOrderQueryModel", b =>
                {
                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BalanceUnitQty")
                        .HasColumnType("int");

                    b.Property<int?>("BookedPackage")
                        .HasColumnType("int");

                    b.Property<string>("CustomerPONumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FulfillmentUnitQty")
                        .HasColumnType("int");

                    b.Property<decimal?>("GrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int>("OrderedUnitQty")
                        .HasColumnType("int");

                    b.Property<long>("POFulfillmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("POFulfillmentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PurchaseOrderId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("decimal(18,2)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POLineItemModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("BalanceUnitQty")
                        .HasColumnType("int");

                    b.Property<int>("BookedUnitQty")
                        .HasColumnType("int");

                    b.Property<string>("ColourCode")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("Commodity")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("CountryCodeOfOrigin")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(16)
                        .HasColumnType("NVARCHAR(16)");

                    b.Property<string>("DescriptionOfGoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("GrossWeight")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<string>("HSCode")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<int?>("LineOrder")
                        .HasColumnType("int");

                    b.Property<int?>("MinOrderQty")
                        .HasColumnType("int");

                    b.Property<int?>("MinPackageQty")
                        .HasColumnType("int");

                    b.Property<int>("OrderedUnitQty")
                        .HasColumnType("int");

                    b.Property<string>("POLineKey")
                        .IsRequired()
                        .HasColumnType("VARCHAR(750)");

                    b.Property<int?>("PackageUOM")
                        .HasColumnType("int");

                    b.Property<string>("PackagingInstruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("ProductFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PurchaseOrderId")
                        .HasColumnType("bigint");

                    b.Property<string>("ReferenceNumber1")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("ReferenceNumber2")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SeasonCode")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("ShippingMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("StyleNo")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("SupplierProductCode")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<int>("UnitUOM")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("DECIMAL(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("POLineItems");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POProgressCheckQueryModel", b =>
                {
                    b.Property<DateTime?>("CargoReadyDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("PONumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ProductionStarted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ProposeDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("QCRequired")
                        .HasColumnType("bit");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShortShip")
                        .HasColumnType("bit");

                    b.Property<bool>("SplitShipment")
                        .HasColumnType("bit");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ProductVerificationSettingModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("BuyerComplianceId")
                        .HasColumnType("bigint");

                    b.Property<int>("CommodityVerification")
                        .HasColumnType("int");

                    b.Property<int>("CountryOfOriginVerification")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HsCodeVerification")
                        .HasColumnType("int");

                    b.Property<bool>("IsRequireGrossWeight")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequireVolume")
                        .HasColumnType("bit");

                    b.Property<int>("PreferredCarrierVerification")
                        .HasColumnType("int");

                    b.Property<int>("ProductCodeVerification")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerComplianceId")
                        .IsUnique();

                    b.ToTable("ProductVerificationSettings");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.PurchaseOrderAdhocChangeModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<long>("POFulfillmentId")
                        .HasColumnType("bigint");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<long>("PurchaseOrderId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("POFulfillmentId");

                    b.ToTable("PurchaseOrderAdhocChanges");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.PurchaseOrderContactModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AddressLine1")
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("AddressLine3")
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("AddressLine4")
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("OrganizationCode")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("NVARCHAR(35)");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("OrganizationRole")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<long>("PurchaseOrderId")
                        .HasColumnType("bigint");

                    b.Property<string>("References")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationCode");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderContacts");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.PurchaseOrderModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("BlanketPOId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CargoReadyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CarrierCode")
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("CarrierName")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<int?>("ContainerType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ContractShipmentDate")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CruiseOrderId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerReferences")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("Department")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<DateTime?>("EarliestDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EarliestShipDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpectedShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GatewayCode")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("GatewayName")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<decimal?>("GrossWeight")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<string>("HazardousMaterialsInstruction")
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("Incoterm")
                        .HasColumnType("VARCHAR(3)");

                    b.Property<DateTime?>("LatestDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LatestShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModeOfTransport")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<long?>("NotifyUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("NumberOfLineItems")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("POIssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("POKey")
                        .IsRequired()
                        .HasColumnType("VARCHAR(612)");

                    b.Property<string>("PONumber")
                        .IsRequired()
                        .HasColumnType("VARCHAR(512)");

                    b.Property<string>("PORemark")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("POTerms")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<int>("POType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10);

                    b.Property<string>("PaymentCurrencyCode")
                        .HasColumnType("NVARCHAR(16)");

                    b.Property<string>("PaymentTerms")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<bool>("ProductionStarted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ProposeDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("QCRequired")
                        .HasColumnType("bit");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Season")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("ShipFrom")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<long?>("ShipFromId")
                        .HasColumnType("bigint");

                    b.Property<string>("ShipFromName")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("ShipTo")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<long?>("ShipToId")
                        .HasColumnType("bigint");

                    b.Property<string>("ShipToName")
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<bool>("ShortShip")
                        .HasColumnType("bit");

                    b.Property<string>("SpecialHandlingInstruction")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<bool>("SplitShipment")
                        .HasColumnType("bit");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("DECIMAL(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("BlanketPOId");

                    b.HasIndex("POKey");

                    b.HasIndex("PONumber");

                    b.HasIndex("CreatedDate", "Id");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.PurchaseOrderQueryModel", b =>
                {
                    b.Property<DateTime?>("CargoReadyDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ContainerType")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerReferences")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpectedShipDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Incoterm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsProgressCargoReadyDates")
                        .HasColumnType("bit");

                    b.Property<string>("ModeOfTransport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("POIssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PONumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PORemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("POType")
                        .HasColumnType("int");

                    b.Property<bool>("ProductionStarted")
                        .HasColumnType("bit");

                    b.Property<int?>("ProgressNotifyDay")
                        .HasColumnType("int");

                    b.Property<string>("ShipFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<string>("StageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.PurchaseOrderVerificationSettingModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("BuyerComplianceId")
                        .HasColumnType("bigint");

                    b.Property<int>("ConsigneeVerification")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpectedDeliveryDateVerification")
                        .HasColumnType("int");

                    b.Property<int>("ExpectedShipDateVerification")
                        .HasColumnType("int");

                    b.Property<int>("IncotermVerification")
                        .HasColumnType("int");

                    b.Property<int>("LogisticsServiceVerification")
                        .HasColumnType("int");

                    b.Property<int>("ModeOfTransportVerification")
                        .HasColumnType("int");

                    b.Property<int>("MovementTypeVerification")
                        .HasColumnType("int");

                    b.Property<int>("PaymentCurrencyVerification")
                        .HasColumnType("int");

                    b.Property<int>("PaymentTermsVerification")
                        .HasColumnType("int");

                    b.Property<int>("PreferredCarrierVerification")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("ShipFromLocationVerification")
                        .HasColumnType("int");

                    b.Property<int>("ShipToLocationVerification")
                        .HasColumnType("int");

                    b.Property<int>("ShipperVerification")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerComplianceId")
                        .IsUnique();

                    b.ToTable("PurchaseOrderVerificationSettings");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ReportingShipmentQueryModel", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("ModeOfTransport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Movement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OceanVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShipFromETDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipTo")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ReportModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastRunTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportDescription")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("VARCHAR(3000)");

                    b.Property<string>("ReportGroup")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("VARCHAR(128)");

                    b.Property<string>("ReportName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("VARCHAR(128)");

                    b.Property<string>("ReportUrl")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("VARCHAR(512)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<bool>("SchedulingApply")
                        .HasColumnType("bit");

                    b.Property<string>("StoredProcedureName")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("TelerikCategoryId")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("TelerikCategoryName")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("TelerikReportId")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ReportName")
                        .IsUnique();

                    b.HasIndex("ReportUrl")
                        .IsUnique();

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ReportPermissionModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrganizationIds")
                        .HasColumnType("nvarchar(1024)");

                    b.Property<long>("ReportId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("ReportId", "OrganizationIds", "RoleId")
                        .IsUnique()
                        .HasFilter("[OrganizationIds] IS NOT NULL");

                    b.ToTable("ReportPermissions");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ReportQueryModel", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastRunTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelerikCategoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelerikCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelerikReportId")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.RoleModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Activated")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOfficial")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Activated = false,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsInternal = true,
                            IsOfficial = true,
                            Name = "System Admin",
                            Status = 1
                        },
                        new
                        {
                            Id = 2L,
                            Activated = false,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsInternal = true,
                            IsOfficial = true,
                            Name = "CSR",
                            Status = 1
                        },
                        new
                        {
                            Id = 3L,
                            Activated = false,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsInternal = true,
                            IsOfficial = true,
                            Name = "Sale",
                            Status = 0
                        },
                        new
                        {
                            Id = 4L,
                            Activated = false,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsInternal = false,
                            IsOfficial = true,
                            Name = "Agent",
                            Status = 1
                        },
                        new
                        {
                            Id = 5L,
                            Activated = false,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsInternal = false,
                            IsOfficial = true,
                            Name = "Registered User",
                            Status = 1
                        },
                        new
                        {
                            Id = 6L,
                            Activated = false,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsInternal = false,
                            IsOfficial = false,
                            Name = "Guest",
                            Status = 1
                        },
                        new
                        {
                            Id = 7L,
                            Activated = false,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsInternal = true,
                            IsOfficial = false,
                            Name = "Pending",
                            Status = 1
                        },
                        new
                        {
                            Id = 8L,
                            Activated = false,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsInternal = false,
                            IsOfficial = true,
                            Name = "Principal",
                            Status = 1
                        },
                        new
                        {
                            Id = 9L,
                            Activated = false,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsInternal = false,
                            IsOfficial = true,
                            Name = "Shipper",
                            Status = 1
                        },
                        new
                        {
                            Id = 10L,
                            Activated = false,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsInternal = false,
                            IsOfficial = true,
                            Name = "Cruise Agent",
                            Status = 1
                        },
                        new
                        {
                            Id = 11L,
                            Activated = false,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsInternal = false,
                            IsOfficial = true,
                            Name = "Cruise Principal",
                            Status = 1
                        },
                        new
                        {
                            Id = 12L,
                            Activated = false,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsInternal = false,
                            IsOfficial = true,
                            Name = "Warehouse",
                            Status = 1
                        },
                        new
                        {
                            Id = 13L,
                            Activated = false,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsInternal = false,
                            IsOfficial = true,
                            Name = "Factory",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.RolePermissionModel", b =>
                {
                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("PermissionId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 1L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 2L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 3L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 4L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 5L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 6L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 8L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 9L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 10L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 11L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 17L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 18L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 19L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 20L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 21L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 22L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 23L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 24L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 25L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 26L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 27L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 28L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 29L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 30L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 31L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 32L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 33L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 34L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 40L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 41L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 42L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 43L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 44L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 45L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 46L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 47L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 48L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 49L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 50L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 51L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 52L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 53L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 54L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 55L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 56L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 57L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 58L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 59L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 60L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 61L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 62L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 63L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 64L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 65L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 66L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 67L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 68L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 69L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 70L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 71L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 72L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 73L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 74L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 75L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 76L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 77L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 78L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 79L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 80L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 81L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 82L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 83L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 84L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 85L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 86L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 87L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 88L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 89L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 90L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 91L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 92L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 93L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 94L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 95L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 96L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 97L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 98L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 99L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 100L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 101L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 102L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 103L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 104L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 105L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 106L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 107L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 108L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 109L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 110L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 111L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 112L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 113L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 114L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 115L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 116L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 117L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 118L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 119L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 120L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 121L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 122L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 123L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 124L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 125L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 126L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 127L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 128L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 129L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 130L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 131L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 132L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 139L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 140L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 141L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1L,
                            PermissionId = 142L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ROLineItemModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int?>("BookedPackage")
                        .HasColumnType("int");

                    b.Property<string>("ChineseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Commodity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionOfGoods")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<decimal?>("GrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemNo")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<decimal?>("NetWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderedUnitQty")
                        .HasColumnType("int");

                    b.Property<string>("PONumber")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<int?>("PackageUOM")
                        .HasColumnType("int");

                    b.Property<long>("RoutingOrderId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("ShippingMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitUOM")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("DECIMAL(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("RoutingOrderId");

                    b.ToTable("ROLineItems");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.RoutingOrderContactModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AddressLine1")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("AddressLine3")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("AddressLine4")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrganizationCode")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("VARCHAR(35)");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("OrganizationRole")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<long>("RoutingOrderId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("RoutingOrderId");

                    b.ToTable("RoutingOrderContacts");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.RoutingOrderContainerModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("ContainerType")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<long>("RoutingOrderId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("DECIMAL(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("RoutingOrderId");

                    b.ToTable("RoutingOrderContainers");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.RoutingOrderInvoiceModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(35)
                        .HasColumnType("VARCHAR(35)");

                    b.Property<string>("InvoiceType")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<long>("RoutingOrderId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoutingOrderId");

                    b.ToTable("RoutingOrderInvoices");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.RoutingOrderModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CargoReadyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EarliestShipDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpectedShipDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Incoterm")
                        .HasColumnType("int");

                    b.Property<bool>("IsBatteryOrChemical")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCIQOrFumigation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsContainDangerousGoods")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExportLicence")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateForShipment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LatestShipDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LogisticsService")
                        .HasColumnType("int");

                    b.Property<int>("ModeOfTransport")
                        .HasColumnType("int");

                    b.Property<int>("MovementType")
                        .HasColumnType("int");

                    b.Property<long>("NumberOfLineItems")
                        .HasColumnType("bigint");

                    b.Property<long>("PreferredCarrier")
                        .HasColumnType("bigint");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RoutingOrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoutingOrderNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<long>("ShipFrom")
                        .HasColumnType("bigint");

                    b.Property<string>("ShipFromName")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<long>("ShipTo")
                        .HasColumnType("bigint");

                    b.Property<string>("ShipToName")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VesselName")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("VoyageNo")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.HasKey("Id");

                    b.HasIndex("RoutingOrderNumber")
                        .IsUnique();

                    b.ToTable("RoutingOrders");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.RoutingOrderQueryModel", b =>
                {
                    b.Property<DateTime?>("CargoReadyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConsigneeCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Incoterm")
                        .HasColumnType("int");

                    b.Property<string>("IncotermName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RoutingOrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoutingOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipFromName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipToName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipperCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<string>("StageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.SchedulingModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CSPortalReportId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("FtpServerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TelerikSchedulingId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FtpServerId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("TelerikSchedulingId")
                        .IsUnique();

                    b.ToTable("Schedulings");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.SchedulingQueryModel", b =>
                {
                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NextOccurrence")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelerikSchedulingId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ShareDocumentModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("BlobId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SharedBy")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ShareDocuments");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ShipmentBillOfLadingModel", b =>
                {
                    b.Property<long>("ShipmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("BillOfLadingId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ShipmentId", "BillOfLadingId");

                    b.HasIndex("BillOfLadingId");

                    b.ToTable("ShipmentBillOfLadings");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ShipmentContactModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("OrganizationRole")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<long>("ShipmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ShipmentId");

                    b.ToTable("ShipmentContacts");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ShipmentItemModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("BalanceUnitQty")
                        .HasColumnType("int");

                    b.Property<int?>("BookedPackage")
                        .HasColumnType("int");

                    b.Property<string>("Commodity")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("CountryCodeOfOrigin")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerPONumber")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<int>("FulfillmentUnitQty")
                        .HasColumnType("int");

                    b.Property<decimal?>("GrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HSCode")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<int>("LoadedQty")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OpenQty")
                        .HasColumnType("int");

                    b.Property<int>("OrderedUnitQty")
                        .HasColumnType("int");

                    b.Property<long?>("POLineItemId")
                        .HasColumnType("bigint");

                    b.Property<int>("PackageUOM")
                        .HasColumnType("int");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PurchaseOrderId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<long>("ShipmentId")
                        .HasColumnType("bigint");

                    b.Property<int>("UnitUOM")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("DECIMAL(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentId");

                    b.ToTable("ShipmentItems");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ShipmentLoadDetailModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("CargoDetailId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ConsignmentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ConsolidationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ContainerId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GrossWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("GrossWeightUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal?>("NetWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("NetWeightUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal>("Package")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("PackageUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.Property<long?>("ShipmentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ShipmentLoadId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Unit")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("UnitUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Volume")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("VolumeUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("Id");

                    b.HasIndex("CargoDetailId");

                    b.HasIndex("ConsignmentId");

                    b.HasIndex("ConsolidationId");

                    b.HasIndex("ContainerId");

                    b.HasIndex("ShipmentId");

                    b.HasIndex("ShipmentLoadId");

                    b.ToTable("ShipmentLoadDetails");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ShipmentLoadModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CarrierBookingNo")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<long?>("ConsignmentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ConsolidationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ContainerId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EquipmentType")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<bool>("IsFCL")
                        .HasColumnType("bit");

                    b.Property<long?>("LoadingPartyId")
                        .HasColumnType("bigint");

                    b.Property<string>("LoadingPlace")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("ModeOfTransport")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<long?>("ShipmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ConsignmentId");

                    b.HasIndex("ConsolidationId");

                    b.HasIndex("ContainerId");

                    b.HasIndex("ShipmentId", "ConsolidationId")
                        .IsUnique()
                        .HasFilter("[ShipmentId] IS NOT NULL AND [ConsolidationId] IS NOT NULL");

                    b.HasIndex("ShipmentId", "ContainerId")
                        .IsUnique()
                        .HasFilter("[ShipmentId] IS NOT NULL AND [ContainerId] IS NOT NULL");

                    b.ToTable("ShipmentLoads");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ShipmentMilestoneSingleQueryModel", b =>
                {
                    b.Property<string>("ActivityCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Consignee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Milestone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShipFromETDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipmentNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shipper")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalRows")
                        .HasColumnType("int");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ShipmentModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AgentReferenceNo")
                        .HasMaxLength(3000)
                        .HasColumnType("VARCHAR(3000)");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BookingNo")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("BuyerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CargoReadyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CarrierContractNo")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerReferenceNo")
                        .HasMaxLength(3000)
                        .HasColumnType("VARCHAR(3000)");

                    b.Property<int?>("Factor")
                        .HasColumnType("int");

                    b.Property<string>("Incoterm")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<bool>("IsFCL")
                        .HasColumnType("bit");

                    b.Property<bool>("IsItineraryConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ModeOfTransport")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("Movement")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<int>("OrderType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(1);

                    b.Property<long?>("POFulfillmentId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("ServiceType")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("ShipFrom")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("ShipFromETDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipTo")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("ShipToETADate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipmentNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("ShipmentType")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("ShipperReferenceNo")
                        .HasMaxLength(3000)
                        .HasColumnType("VARCHAR(3000)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<decimal>("TotalGrossWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("TotalGrossWeightUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal>("TotalNetWeight")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("TotalNetWeightUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal>("TotalPackage")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("TotalPackageUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal>("TotalUnit")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("TotalUnitUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal>("TotalVolume")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("TotalVolumeUOM")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarrierContractNo");

                    b.HasIndex("POFulfillmentId");

                    b.HasIndex("ShipFromETDDate");

                    b.HasIndex("ShipmentNo")
                        .IsUnique();

                    b.HasIndex("CargoReadyDate", "Id");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ShipmentQueryModel", b =>
                {
                    b.Property<string>("ActivityCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Consignee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Milestone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShipFromETDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipmentNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shipper")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ShipmentScheduleQueryModel", b =>
                {
                    b.Property<DateTime>("CargoReadyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Consignee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("LatestMilestone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipmentNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shipper")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPackage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TotalPackageUOM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TotalVolumeUOM")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ShippedPurchaseOrderQueryModel", b =>
                {
                    b.Property<DateTime?>("CargoReadyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsProgressCargoReadyDates")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("POIssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PONumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("POType")
                        .HasColumnType("int");

                    b.Property<bool>("ProductionStarted")
                        .HasColumnType("bit");

                    b.Property<int?>("ProgressNotifyDay")
                        .HasColumnType("int");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<string>("StageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ShippingComplianceModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("AllowMixedPack")
                        .HasColumnType("int");

                    b.Property<bool>("AllowMultiplePOPerFulfillment")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowPartialShipment")
                        .HasColumnType("bit");

                    b.Property<long>("BuyerComplianceId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerComplianceId")
                        .IsUnique();

                    b.ToTable("ShippingCompliances");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.SurveyAnswerModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int?>("AnswerNumeric")
                        .HasColumnType("int");

                    b.Property<string>("AnswerText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("OptionId")
                        .HasColumnType("bigint");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.HasKey("Id");

                    b.HasIndex("OptionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("SurveyAnswers");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.SurveyModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("ClosedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsIncludeAffiliate")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<int?>("OrganizationType")
                        .HasColumnType("int");

                    b.Property<int>("ParticipantType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("SendToUser")
                        .HasColumnType("int");

                    b.Property<string>("SpecifiedOrganization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecifiedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Surveys");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.SurveyParticipantModel", b =>
                {
                    b.Property<long>("SurveyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSubmitted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("SubmittedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SurveyId", "Username");

                    b.ToTable("SurveyParticipants");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.SurveyQueryModel", b =>
                {
                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Participants")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.SurveyQuestionModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HighValueLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsIncludeOpenEndedText")
                        .HasColumnType("bit");

                    b.Property<string>("LowValueLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceHolderText")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<int?>("StarRating")
                        .HasColumnType("int");

                    b.Property<long>("SurveyId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("SurveyQuestions");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.SurveyQuestionOptionModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("SurveyQuestionOptions");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.TranslationModel", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("English")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SimplifiedChinese")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TraditionalChinese")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Key");

                    b.ToTable("Translations");

                    b.HasData(
                        new
                        {
                            Key = "permission.dashboard",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Dashboard",
                            SimplifiedChinese = "Dashboard (SC)",
                            TraditionalChinese = "Dashboard (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.dashboard.thisWeekShipments",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipments in last 7 days",
                            SimplifiedChinese = "Shipments in last 7 days (SC)",
                            TraditionalChinese = "Shipments in last 7 days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.dashboard.thisWeekCustomerPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Customer PO issued in last 7 days",
                            SimplifiedChinese = "Customer PO issued in last 7 days (SC)",
                            TraditionalChinese = "Customer PO issued in last 7 days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.dashboard.thisWeekOceanVolume",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment Volume in last 7 days",
                            SimplifiedChinese = "Shipment Volume in last 7 days (SC)",
                            TraditionalChinese = "Shipment Volume in last 7 days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.dashboard.top10ShipperThisWeek",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Top 10 Shipper in last 7 days",
                            SimplifiedChinese = "Top 10 Shipper in last 7 days (SC)",
                            TraditionalChinese = "Top 10 Shipper in last 7 days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.dashboard.top10ConsigneeThisWeek",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Top 10 Consignee in last 7 days",
                            SimplifiedChinese = "Top 10 Consignee in last 7 days (SC)",
                            TraditionalChinese = "Top 10 Consignee in last 7 days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.dashboard.top10CarrierThisWeek",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Top 10 Carrier in last 7 days",
                            SimplifiedChinese = "Top 10 Carrier in last 7 days (SC)",
                            TraditionalChinese = "Top 10 Carrier in last 7 days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.dashboard.monthlyTop5OceanVolumeByOrigin",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Top 5 Shipment Volume By Origin last month",
                            SimplifiedChinese = "Top 5 Shipment Volume By Origin last month (SC)",
                            TraditionalChinese = "Top 5 Shipment Volume By Origin last month (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.dashboard.monthlyTop5OceanVolumeByDestination",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Top 5 Shipment Volume By Destination last month",
                            SimplifiedChinese = "Top 5 Shipment Volume By Destination last month (SC)",
                            TraditionalChinese = "Top 5 Shipment Volume By Destination last month (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.dashboard.monthlyOceanVolumeByMovement",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment Volume By Movement last month",
                            SimplifiedChinese = "Shipment Volume By Movement last month (SC)",
                            TraditionalChinese = "Shipment Volume By Movement last month (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.dashboard.monthlyOceanVolumeByServiceType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment Volume By Service Type last month",
                            SimplifiedChinese = "Shipment Volume By Service Type last month (SC)",
                            TraditionalChinese = "Shipment Volume By Service Type last month (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.dashboard.endToEndShipmentStatus",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "End-to-end Shipment status",
                            SimplifiedChinese = "End-to-end Shipment status (SC)",
                            TraditionalChinese = "End-to-end Shipment status (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.dashboard.categorizedPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Categorized PO",
                            SimplifiedChinese = "Categorized PO (SC)",
                            TraditionalChinese = "Categorized PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.dashboard.shortshipsList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Shortships",
                            SimplifiedChinese = "List of Shortships (SC)",
                            TraditionalChinese = "List of Shortships (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.dashboard.vesselArrivalList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Vessel Arrival",
                            SimplifiedChinese = "List of Vessel Arrival (SC)",
                            TraditionalChinese = "List of Vessel Arrival (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipping Orders",
                            SimplifiedChinese = "Shipping Orders (SC)",
                            TraditionalChinese = "Shipping Orders (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.list",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Shipments",
                            SimplifiedChinese = "List of Shipments (SC)",
                            TraditionalChinese = "List of Shipments (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.detail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment Detail",
                            SimplifiedChinese = "Shipment Detail (SC)",
                            TraditionalChinese = "Shipment Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.detail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.shippedPOList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipped PO",
                            SimplifiedChinese = "Shipped PO (SC)",
                            TraditionalChinese = "Shipped PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.containerList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipping Containers",
                            SimplifiedChinese = "Shipping Containers (SC)",
                            TraditionalChinese = "Shipping Containers (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.containerDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Container Detail",
                            SimplifiedChinese = "Container Detail (SC)",
                            TraditionalChinese = "Container Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.containerDetail.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add",
                            SimplifiedChinese = "Add (SC)",
                            TraditionalChinese = "Add (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.containerDetail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.consolidationList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Consolidations",
                            SimplifiedChinese = "List of Consolidations (SC)",
                            TraditionalChinese = "List of Consolidations (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.consolidationDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Consolidation Detail",
                            SimplifiedChinese = "Consolidation Detail (SC)",
                            TraditionalChinese = "Consolidation Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.consolidationDetail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.consolidationDetail.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add",
                            SimplifiedChinese = "Add (SC)",
                            TraditionalChinese = "Add (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.consolidationDetail.delete",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Delete",
                            SimplifiedChinese = "Delete (SC)",
                            TraditionalChinese = "Delete (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.consolidationDetail.confirm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Confirm",
                            SimplifiedChinese = "Confirm (SC)",
                            TraditionalChinese = "Confirm (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.consolidationDetail.unconfirm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Unconfirm",
                            SimplifiedChinese = "Unconfirm (SC)",
                            TraditionalChinese = "Unconfirm (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.detail.confirmItinerary",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Confirm Itinerary",
                            SimplifiedChinese = "Confirm Itinerary (SC)",
                            TraditionalChinese = "Confirm Itinerary (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.freightSchedulers",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Freight Scheduler",
                            SimplifiedChinese = "List of Freight Scheduler (SC)",
                            TraditionalChinese = "List of Freight Scheduler (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.freightSchedulers.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add",
                            SimplifiedChinese = "Add (SC)",
                            TraditionalChinese = "Add (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.freightSchedulers.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.masterDialogs",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Master Dialogs",
                            SimplifiedChinese = "List of Master Dialogs (SC)",
                            TraditionalChinese = "List of Master Dialogs (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.masterDialogs.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add",
                            SimplifiedChinese = "Add (SC)",
                            TraditionalChinese = "Add (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.masterDialogs.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.billOfLading",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Bill Of Lading",
                            SimplifiedChinese = "Bill Of Lading (SC)",
                            TraditionalChinese = "Bill Of Lading (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.billOfLading.listOfHouseBL",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of House BL",
                            SimplifiedChinese = "List of House BL (SC)",
                            TraditionalChinese = "List of House BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.billOfLading.houseBLDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "House BL Detail",
                            SimplifiedChinese = "House BL Detail (SC)",
                            TraditionalChinese = "House BL Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.billOfLading.houseBLDetail.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add",
                            SimplifiedChinese = "Add (SC)",
                            TraditionalChinese = "Add (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.billOfLading.houseBLDetail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.billOfLading.listOfMasterBL",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Master BL",
                            SimplifiedChinese = "List of Master BL (SC)",
                            TraditionalChinese = "List of Master BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.billOfLading.masterBLDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Master BL Detail",
                            SimplifiedChinese = "Master BL Detail (SC)",
                            TraditionalChinese = "Master BL Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.billOfLading.masterBLDetail.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add",
                            SimplifiedChinese = "Add (SC)",
                            TraditionalChinese = "Add (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.billOfLading.masterBLDetail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.masterBillOfLading",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Master BL",
                            SimplifiedChinese = "Master BL (SC)",
                            TraditionalChinese = "Master BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.masterBillOfLading.list",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Master BL",
                            SimplifiedChinese = "List of Master BL (SC)",
                            TraditionalChinese = "List of Master BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.masterBillOfLading.detail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Master BL Detail",
                            SimplifiedChinese = "Master BL Detail (SC)",
                            TraditionalChinese = "Master BL Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.consignmentList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Consignments",
                            SimplifiedChinese = "List of Consignments (SC)",
                            TraditionalChinese = "List of Consignments (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.consignmentDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Consignments Detail",
                            SimplifiedChinese = "Consignments Detail (SC)",
                            TraditionalChinese = "Consignments Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.consignmentDetail.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add",
                            SimplifiedChinese = "Add (SC)",
                            TraditionalChinese = "Add (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.shipment.consignmentDetail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.invoice",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Invoices",
                            SimplifiedChinese = "Invoices (SC)",
                            TraditionalChinese = "Invoices (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.invoice.list",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Invoices",
                            SimplifiedChinese = "List of Invoices (SC)",
                            TraditionalChinese = "List of Invoices (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Master Data",
                            SimplifiedChinese = "Master Data (SC)",
                            TraditionalChinese = "Master Data (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.list",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Organizations",
                            SimplifiedChinese = "List of Organizations (SC)",
                            TraditionalChinese = "List of Organizations (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.detail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Organization Detail",
                            SimplifiedChinese = "Organization Detail (SC)",
                            TraditionalChinese = "Organization Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.detail.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add",
                            SimplifiedChinese = "Add (SC)",
                            TraditionalChinese = "Add (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.detail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.complianceList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Compliances",
                            SimplifiedChinese = "List of Compliances (SC)",
                            TraditionalChinese = "List of Compliances (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.complianceDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Compliance Detail",
                            SimplifiedChinese = "Compliance Detail (SC)",
                            TraditionalChinese = "Compliance Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.complianceDetail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.carrierList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Carriers",
                            SimplifiedChinese = "List of Carriers (SC)",
                            TraditionalChinese = "List of Carriers (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.carrierDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Carrier Detail",
                            SimplifiedChinese = "Carrier Detail (SC)",
                            TraditionalChinese = "Carrier Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.carrierDetail.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add",
                            SimplifiedChinese = "Add (SC)",
                            TraditionalChinese = "Add (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.carrierDetail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.contractList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Contracts",
                            SimplifiedChinese = "List of Contracts (SC)",
                            TraditionalChinese = "List of Contracts (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.contractDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Contract Detail",
                            SimplifiedChinese = "Contract Detail (SC)",
                            TraditionalChinese = "Contract Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.contractDetail.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add",
                            SimplifiedChinese = "Add (SC)",
                            TraditionalChinese = "Add (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.contractDetail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.vesselList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Vessels",
                            SimplifiedChinese = "List of Vessels (SC)",
                            TraditionalChinese = "List of Vessels (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.vesselDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Vessel Detail",
                            SimplifiedChinese = "Vessel Detail (SC)",
                            TraditionalChinese = "Vessel Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.vesselDetail.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add",
                            SimplifiedChinese = "Add (SC)",
                            TraditionalChinese = "Add (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.vesselDetail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.locationList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Locations",
                            SimplifiedChinese = "List of Locations (SC)",
                            TraditionalChinese = "List of Locations (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.locationDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Location Detail",
                            SimplifiedChinese = "Location Detail (SC)",
                            TraditionalChinese = "Location Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.locationDetail.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add",
                            SimplifiedChinese = "Add (SC)",
                            TraditionalChinese = "Add (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.locationDetail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.warehouseLocationList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Warehouse Locations",
                            SimplifiedChinese = "List of Warehouse Locations (SC)",
                            TraditionalChinese = "List of Warehouse Locations (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.warehouseLocationDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Warehouse Location Detail",
                            SimplifiedChinese = "Warehouse Location Detail (SC)",
                            TraditionalChinese = "Warehouse Location Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.warehouseLocationDetail.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add",
                            SimplifiedChinese = "Add (SC)",
                            TraditionalChinese = "Add (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.warehouseLocationDetail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.articleMasterList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Articles",
                            SimplifiedChinese = "List of Articles (SC)",
                            TraditionalChinese = "List of Articles (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.articleMasterDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Article Detail",
                            SimplifiedChinese = "Article Detail (SC)",
                            TraditionalChinese = "Article Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.surveyList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Surveys",
                            SimplifiedChinese = "List of Surveys (SC)",
                            TraditionalChinese = "List of Surveys (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.surveyDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Survey Detail",
                            SimplifiedChinese = "Survey Detail (SC)",
                            TraditionalChinese = "Survey Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.surveyDetail.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add",
                            SimplifiedChinese = "Add (SC)",
                            TraditionalChinese = "Add (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.organization.surveyDetail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.user",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Users and Roles",
                            SimplifiedChinese = "Users and Roles (SC)",
                            TraditionalChinese = "Users and Roles (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.user.requestList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of User Requests",
                            SimplifiedChinese = "List of User Requests (SC)",
                            TraditionalChinese = "List of User Requests (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.user.requestDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "User Request Detail",
                            SimplifiedChinese = "User Request Detail (SC)",
                            TraditionalChinese = "User Request Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.user.requestDetail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.user.userList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Users",
                            SimplifiedChinese = "List of Users (SC)",
                            TraditionalChinese = "List of Users (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.user.userDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "User Detail",
                            SimplifiedChinese = "User Detail (SC)",
                            TraditionalChinese = "User Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.user.userDetail.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add",
                            SimplifiedChinese = "Add (SC)",
                            TraditionalChinese = "Add (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.user.userDetail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.user.roleList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Roles",
                            SimplifiedChinese = "List of Roles (SC)",
                            TraditionalChinese = "List of Roles (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.user.roleDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Role Detail",
                            SimplifiedChinese = "Role Detail (SC)",
                            TraditionalChinese = "Role Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.user.roleDetail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.integrationLog",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Integration Logs",
                            SimplifiedChinese = "Integration Logs (SC)",
                            TraditionalChinese = "Integration Logs (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.integrationLog.list",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List",
                            SimplifiedChinese = "List (SC)",
                            TraditionalChinese = "List (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.reports",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Reports",
                            SimplifiedChinese = "Reports (SC)",
                            TraditionalChinese = "Reports (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.reports.list",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Reports",
                            SimplifiedChinese = "List of Reports (SC)",
                            TraditionalChinese = "List of Reports (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.reports.taskList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Tasks",
                            SimplifiedChinese = "List of Tasks (SC)",
                            TraditionalChinese = "List of Tasks (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.reports.taskDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Task Detail",
                            SimplifiedChinese = "Task Detail (SC)",
                            TraditionalChinese = "Task Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.reports.taskDetail.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add",
                            SimplifiedChinese = "Add (SC)",
                            TraditionalChinese = "Add (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.reports.taskDetail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.product",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Products",
                            SimplifiedChinese = "Products (SC)",
                            TraditionalChinese = "Products (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.product.list",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Products",
                            SimplifiedChinese = "List of Products (SC)",
                            TraditionalChinese = "List of Products (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.product.detail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Product Detail",
                            SimplifiedChinese = "Product Detail (SC)",
                            TraditionalChinese = "Product Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.product.detail.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add",
                            SimplifiedChinese = "Add (SC)",
                            TraditionalChinese = "Add (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.product.detail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.order",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Orders",
                            SimplifiedChinese = "Orders (SC)",
                            TraditionalChinese = "Orders (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.order.pOList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of PO(s)",
                            SimplifiedChinese = "List of PO(s) (SC)",
                            TraditionalChinese = "List of PO(s) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.order.pODetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Detail",
                            SimplifiedChinese = "PO Detail (SC)",
                            TraditionalChinese = "PO Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.order.pODetail.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add",
                            SimplifiedChinese = "Add (SC)",
                            TraditionalChinese = "Add (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.order.pODetail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.order.pODetail.close",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Close",
                            SimplifiedChinese = "Close (SC)",
                            TraditionalChinese = "Close (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.order.pODelegation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Delegation",
                            SimplifiedChinese = "PO Delegation (SC)",
                            TraditionalChinese = "PO Delegation (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.order.pOProgressCheckCRD",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Progress Check CRD",
                            SimplifiedChinese = "Progress Check CRD (SC)",
                            TraditionalChinese = "Progress Check CRD (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.order.pOFulfillmentList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Booking",
                            SimplifiedChinese = "List of Booking (SC)",
                            TraditionalChinese = "List of Booking (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.order.pOFulfillmentDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Details",
                            SimplifiedChinese = "Booking Details (SC)",
                            TraditionalChinese = "Booking Details (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.order.pOFulfillmentDetail.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Add (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.order.pOFulfillmentDetail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.order.pendingApprovalList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Pending Approvals",
                            SimplifiedChinese = "List of Pending Approvals (SC)",
                            TraditionalChinese = "List of Pending Approvals (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.order.pendingApprovalDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Pending Approval Detail",
                            SimplifiedChinese = "Pending Approval Detail (SC)",
                            TraditionalChinese = "Pending Approval Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.order.pendingApprovalDetail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Approve",
                            SimplifiedChinese = "Approve (SC)",
                            TraditionalChinese = "Approve (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.order.routingOrderList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Routing Orders",
                            SimplifiedChinese = "List of Routing Orders (SC)",
                            TraditionalChinese = "List of Routing Orders (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.order.routingOrderDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Routing Order Detail",
                            SimplifiedChinese = "Routing Order Detail (SC)",
                            TraditionalChinese = "Routing Order Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.order.routingOrderDetail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.order.routingOrderDetail.confirm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Confirm",
                            SimplifiedChinese = "Confirm (SC)",
                            TraditionalChinese = "Confirm (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.cruiseOrder",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cruise Orders",
                            SimplifiedChinese = "Cruise Orders (SC)",
                            TraditionalChinese = "Cruise Orders (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.cruiseOrder.list",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Cruise Orders",
                            SimplifiedChinese = "List of Cruise Orders (SC)",
                            TraditionalChinese = "List of Cruise Orders (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.cruiseOrder.detail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cruise Order Detail",
                            SimplifiedChinese = "Cruise Order Detail (SC)",
                            TraditionalChinese = "Cruise Order Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.cruiseOrder.detail.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add",
                            SimplifiedChinese = "Add (SC)",
                            TraditionalChinese = "Add (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.cruiseOrder.detail.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.balanceOfGoods",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Balance Of Goods",
                            SimplifiedChinese = "Balance Of Goods (SC)",
                            TraditionalChinese = "Balance Of Goods (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "permission.balanceOfGoods.enquiry",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Balance Of Goods Enquiry",
                            SimplifiedChinese = "Balance Of Goods Enquiry (SC)",
                            TraditionalChinese = "Balance Of Goods Enquiry (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.calendar.today",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Today",
                            SimplifiedChinese = "今天",
                            TraditionalChinese = "今天",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.dateinput.decrement",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Decrease value",
                            SimplifiedChinese = "减少",
                            TraditionalChinese = "減少",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.dateinput.increment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Increase value",
                            SimplifiedChinese = "增加",
                            TraditionalChinese = "增加",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.datepicker.today",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Today",
                            SimplifiedChinese = "今天",
                            TraditionalChinese = "今天",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.datepicker.toggle",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Toggle calendar",
                            SimplifiedChinese = "切换日历",
                            TraditionalChinese = "切換日曆",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.autocomplete.noDataText",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No data found",
                            SimplifiedChinese = "没有相关数据",
                            TraditionalChinese = "沒有相關數據",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.autocomplete.clearTitle",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Clear",
                            SimplifiedChinese = "Clear (SC)",
                            TraditionalChinese = "Clear (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.combobox.noDataText",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No data found",
                            SimplifiedChinese = "没有相关数据",
                            TraditionalChinese = "沒有相關數據",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.combobox.clearTitle",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Clear",
                            SimplifiedChinese = "Clear (SC)",
                            TraditionalChinese = "Clear (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.dropdownlist.noDataText",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No data found",
                            SimplifiedChinese = "没有相关数据",
                            TraditionalChinese = "沒有相關數據",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.multiselect.noDataText",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No data found",
                            SimplifiedChinese = "没有相关数据",
                            TraditionalChinese = "沒有相關數據",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.multiselect.clearTitle",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Clear",
                            SimplifiedChinese = "Clear (SC)",
                            TraditionalChinese = "Clear (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterAfterOperator",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Is after",
                            SimplifiedChinese = "大于",
                            TraditionalChinese = "大於",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterAfterOrEqualOperator",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Is after or equal to",
                            SimplifiedChinese = "大于等于",
                            TraditionalChinese = "大於等於",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterAndLogic",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "And",
                            SimplifiedChinese = "并且",
                            TraditionalChinese = "並且",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterBeforeOperator",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Is before",
                            SimplifiedChinese = "小于",
                            TraditionalChinese = "小於",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterBeforeOrEqualOperator",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Is before or equal to",
                            SimplifiedChinese = "小于等于",
                            TraditionalChinese = "小於等於",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterBooleanAll",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "(All)",
                            SimplifiedChinese = "(所有)",
                            TraditionalChinese = "(所有)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterClearButton",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Clear",
                            SimplifiedChinese = "清除",
                            TraditionalChinese = "清除",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterContainsOperator",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Contains",
                            SimplifiedChinese = "包含",
                            TraditionalChinese = "包含",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterEndsWithOperator",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ends with",
                            SimplifiedChinese = "结尾为",
                            TraditionalChinese = "結尾為",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterEqOperator",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Is equal to",
                            SimplifiedChinese = "等于",
                            TraditionalChinese = "等於",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterFilterButton",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Filter",
                            SimplifiedChinese = "过滤",
                            TraditionalChinese = "過濾",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterGteOperator",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Is greater than or equal to",
                            SimplifiedChinese = "大于等于",
                            TraditionalChinese = "大於等於",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterGtOperator",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Is greater than",
                            SimplifiedChinese = "大于",
                            TraditionalChinese = "大於",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterIsEmptyOperator",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Is empty",
                            SimplifiedChinese = "是空的",
                            TraditionalChinese = "是空的",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterIsFalse",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "is false",
                            SimplifiedChinese = "为假",
                            TraditionalChinese = "為假",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterIsNotEmptyOperator",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Is not empty",
                            SimplifiedChinese = "不是空的",
                            TraditionalChinese = "不是空的",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterIsNotNullOperator",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Is not null",
                            SimplifiedChinese = "不为null",
                            TraditionalChinese = "不为null",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterIsNullOperator",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Is null",
                            SimplifiedChinese = "为null",
                            TraditionalChinese = "为null",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterIsTrue",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "is true",
                            SimplifiedChinese = "为真",
                            TraditionalChinese = "為真",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterLteOperator",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Is less than or equal to",
                            SimplifiedChinese = "小于等于",
                            TraditionalChinese = "小於等於",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterLtOperator",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Is less than",
                            SimplifiedChinese = "小于等于",
                            TraditionalChinese = "小於等於",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterNotContainsOperator",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Does not contain",
                            SimplifiedChinese = "不包含",
                            TraditionalChinese = "不包含",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterNotEqOperator",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Is not equal to",
                            SimplifiedChinese = "不等于",
                            TraditionalChinese = "不等於",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterOrLogic",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Or",
                            SimplifiedChinese = "或",
                            TraditionalChinese = "或",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.filterStartsWithOperator",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Starts with",
                            SimplifiedChinese = "开头为",
                            TraditionalChinese = "開頭為",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.groupPanelEmpty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Drag a column header and drop it here to group by that column",
                            SimplifiedChinese = "拖拽列标题到此处按列组合显示",
                            TraditionalChinese = "拖拽列標題到此處按列組合顯示",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.noRecords",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No records available.",
                            SimplifiedChinese = "没有可用的记录。",
                            TraditionalChinese = "沒有可用的記錄。",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.pagerFirstPage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Go to the first page",
                            SimplifiedChinese = "首页",
                            TraditionalChinese = "首頁",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.pagerItems",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "items",
                            SimplifiedChinese = "每页",
                            TraditionalChinese = "每頁",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.pagerItemsPerPage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "items per page",
                            SimplifiedChinese = "每页",
                            TraditionalChinese = "每頁",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.pagerLastPage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Go to the last page",
                            SimplifiedChinese = "末页",
                            TraditionalChinese = "末頁",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.pagerNextPage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Go to the next page",
                            SimplifiedChinese = "下一页",
                            TraditionalChinese = "下一頁",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.pagerOf",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "of",
                            SimplifiedChinese = "共",
                            TraditionalChinese = "共",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.pagerPage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Page",
                            SimplifiedChinese = "页",
                            TraditionalChinese = "頁",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.grid.pagerPreviousPage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Go to the previous page",
                            SimplifiedChinese = "上一页",
                            TraditionalChinese = "上一頁",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.numerictextbox.decrement",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Decrease value",
                            SimplifiedChinese = "减少",
                            TraditionalChinese = "減少",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.numerictextbox.increment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Increase value",
                            SimplifiedChinese = "增加",
                            TraditionalChinese = "增加",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.slider.decrement",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Decrease value",
                            SimplifiedChinese = "减少",
                            TraditionalChinese = "減少",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.slider.dragHandle",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "drag",
                            SimplifiedChinese = "drag",
                            TraditionalChinese = "drag",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.slider.increment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Increase value",
                            SimplifiedChinese = "增加",
                            TraditionalChinese = "增加",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.switch.off",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Off",
                            SimplifiedChinese = "關",
                            TraditionalChinese = "關",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.switch.on",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "On",
                            SimplifiedChinese = "開",
                            TraditionalChinese = "開",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.timepicker.accept",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Set",
                            SimplifiedChinese = "组",
                            TraditionalChinese = "组",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.timepicker.acceptLabel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Set",
                            SimplifiedChinese = "组",
                            TraditionalChinese = "组",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.timepicker.cancel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cancel",
                            SimplifiedChinese = "取消",
                            TraditionalChinese = "取消",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.timepicker.cancelLabel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cancel",
                            SimplifiedChinese = "取消",
                            TraditionalChinese = "取消",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.timepicker.now",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Now",
                            SimplifiedChinese = "现在",
                            TraditionalChinese = "现在",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.timepicker.nowLabel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Now",
                            SimplifiedChinese = "现在",
                            TraditionalChinese = "现在",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.timepicker.toggle",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Toggle time list",
                            SimplifiedChinese = "切换时间列表",
                            TraditionalChinese = "切换时间列表",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.upload.cancel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cancel",
                            SimplifiedChinese = "取消",
                            TraditionalChinese = "取消",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.upload.clearSelectedFiles",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Clear",
                            SimplifiedChinese = "清除",
                            TraditionalChinese = "清除",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.upload.dropFilesHere",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Drop files here to upload",
                            SimplifiedChinese = "拖拽要上传的文件到此处",
                            TraditionalChinese = "拖拽要上傳的文件到此處",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.upload.headerStatusUploaded",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Done",
                            SimplifiedChinese = "完成",
                            TraditionalChinese = "完成",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.upload.headerStatusUploading",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Uploading...",
                            SimplifiedChinese = "上传...",
                            TraditionalChinese = "上傳...",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.upload.invalidFileExtension",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "File type not allowed.",
                            SimplifiedChinese = "文件类型不允许.",
                            TraditionalChinese = "文件類型不允許.",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.upload.invalidFiles",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Invalid file(s). Please check file upload requirements.",
                            SimplifiedChinese = "无效的文件. 请检查文件上传要求.",
                            TraditionalChinese = "無效的文件. 請檢查文件上傳要求.",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.upload.invalidMaxFileSize",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "File size too large.",
                            SimplifiedChinese = "文件太大.",
                            TraditionalChinese = "文件太大.",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.upload.invalidMinFileSize",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "File size too small.",
                            SimplifiedChinese = "文件太小.",
                            TraditionalChinese = "文件太小.",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.upload.remove",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Remove",
                            SimplifiedChinese = "移除",
                            TraditionalChinese = "移除",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.upload.retry",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Retry",
                            SimplifiedChinese = "重试",
                            TraditionalChinese = "重試",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.upload.select",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Select files...",
                            SimplifiedChinese = "选择...",
                            TraditionalChinese = "選擇...",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.upload.uploadSelectedFiles",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Upload files",
                            SimplifiedChinese = "上传文件",
                            TraditionalChinese = "上傳文件",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.datimepicker.dateTab",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Date",
                            SimplifiedChinese = "Date (SC)",
                            TraditionalChinese = "Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.datimepicker.dateTabLabel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Date",
                            SimplifiedChinese = "Date (SC)",
                            TraditionalChinese = "Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.datimepicker.timeTab",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Time",
                            SimplifiedChinese = "Time (SC)",
                            TraditionalChinese = "Time (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.datimepicker.timeTabLabel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Time",
                            SimplifiedChinese = "Time (SC)",
                            TraditionalChinese = "Time (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.datimepicker.cancel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cancel",
                            SimplifiedChinese = "Cancel (SC)",
                            TraditionalChinese = "Cancel (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.datimepicker.cancelLabel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cancel",
                            SimplifiedChinese = "Cancel (SC)",
                            TraditionalChinese = "Cancel (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.datimepicker.accept",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Save",
                            SimplifiedChinese = "Save (SC)",
                            TraditionalChinese = "Save (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.datimepicker.acceptLabel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Save",
                            SimplifiedChinese = "Save (SC)",
                            TraditionalChinese = "Save (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.datimepicker.now",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Now",
                            SimplifiedChinese = "Now (SC)",
                            TraditionalChinese = "Now (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.datimepicker.nowLabel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Now",
                            SimplifiedChinese = "Now (SC)",
                            TraditionalChinese = "Now (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.datimepicker.today",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Today",
                            SimplifiedChinese = "Today (SC)",
                            TraditionalChinese = "Today (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.datimepicker.toogle",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Toggle calendar",
                            SimplifiedChinese = "Toggle calendar (SC)",
                            TraditionalChinese = "Toggle calendar (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.repeat",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Repeat",
                            SimplifiedChinese = "Repeat (SC)",
                            TraditionalChinese = "Repeat (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.frequenciesNever",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Once",
                            SimplifiedChinese = "Once (SC)",
                            TraditionalChinese = "Once (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.frequenciesDaily",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Daily",
                            SimplifiedChinese = "Daily (SC)",
                            TraditionalChinese = "Daily (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.frequenciesWeekly",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Weekly",
                            SimplifiedChinese = "Weekly (SC)",
                            TraditionalChinese = "Weekly (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.frequenciesMonthly",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Monthly",
                            SimplifiedChinese = "Monthly (SC)",
                            TraditionalChinese = "Monthly (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.frequenciesYearly",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Yearly",
                            SimplifiedChinese = "Yearly (SC)",
                            TraditionalChinese = "Yearly (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.dailyRepeatEvery",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Repeat every",
                            SimplifiedChinese = "Repeat every (SC)",
                            TraditionalChinese = "Repeat every (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.dailyInterval",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "day(s)",
                            SimplifiedChinese = "day(s) (SC)",
                            TraditionalChinese = "day(s) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.weeklyRepeatEvery",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Repeat every",
                            SimplifiedChinese = "Repeat every (SC)",
                            TraditionalChinese = "Repeat every (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.weeklyInterval",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "week(s)",
                            SimplifiedChinese = "week(s) (SC)",
                            TraditionalChinese = "week(s) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.weeklyRepeatOn",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Repeat on",
                            SimplifiedChinese = "Repeat on (SC)",
                            TraditionalChinese = "Repeat on (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.weekdaysDay",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Day",
                            SimplifiedChinese = "Day (SC)",
                            TraditionalChinese = "Day (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.weekdaysWeekday",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Weekday",
                            SimplifiedChinese = "Weekday (SC)",
                            TraditionalChinese = "Weekday (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.weekdaysWeekendday",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Weekend day",
                            SimplifiedChinese = "Weekend day (SC)",
                            TraditionalChinese = "Weekend day (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.monthlyRepeatEvery",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Repeat every",
                            SimplifiedChinese = "Repeat every (SC)",
                            TraditionalChinese = "Repeat every (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.monthlyInterval",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "month(s)",
                            SimplifiedChinese = "month(s) (SC)",
                            TraditionalChinese = "month(s) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.monthlyRepeatOn",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Repeat on",
                            SimplifiedChinese = "Repeat on (SC)",
                            TraditionalChinese = "Repeat on (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.monthlyDay",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Day",
                            SimplifiedChinese = "Day (SC)",
                            TraditionalChinese = "Day (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.yearlyRepeatEvery",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Repeat every",
                            SimplifiedChinese = "Repeat every (SC)",
                            TraditionalChinese = "Repeat every (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.yearlyInterval",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "year(s)",
                            SimplifiedChinese = "year(s) (SC)",
                            TraditionalChinese = "year(s) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.yearlyRepeatOn",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Repeat on",
                            SimplifiedChinese = "Repeat on (SC)",
                            TraditionalChinese = "Repeat on (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.yearlyOf",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "of",
                            SimplifiedChinese = "of (SC)",
                            TraditionalChinese = "of (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.offsetPositionsFirst",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "First",
                            SimplifiedChinese = "First (SC)",
                            TraditionalChinese = "First (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.offsetPositionsSecond",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Second",
                            SimplifiedChinese = "Second (SC)",
                            TraditionalChinese = "Second (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.offsetPositionsThird",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Third",
                            SimplifiedChinese = "Third (SC)",
                            TraditionalChinese = "Third (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.offsetPositionsFourth",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Fourth",
                            SimplifiedChinese = "Fourth (SC)",
                            TraditionalChinese = "Fourth (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.offsetPositionsLast",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Last",
                            SimplifiedChinese = "Last (SC)",
                            TraditionalChinese = "Last (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.endLabel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "End",
                            SimplifiedChinese = "End (SC)",
                            TraditionalChinese = "End (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.endNever",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Never",
                            SimplifiedChinese = "Never (SC)",
                            TraditionalChinese = "Never (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.endAfter",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "After",
                            SimplifiedChinese = "After (SC)",
                            TraditionalChinese = "After (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.endOccurrence",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "occurrence(s)",
                            SimplifiedChinese = "occurrence(s) (SC)",
                            TraditionalChinese = "occurrence(s) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "kendo.recurrenceeditor.endOn",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "On",
                            SimplifiedChinese = "On (SC)",
                            TraditionalChinese = "On (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "delete.saveConfirmation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to delete this?",
                            SimplifiedChinese = "Are you sure you want to delete this? (SC)",
                            TraditionalChinese = "Are you sure you want to delete this? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "edit.activateOrganizationConfirmation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Do you want to activate status of all users under this organization?",
                            SimplifiedChinese = "Do you want to activate status of all users under this organization? (SC)",
                            TraditionalChinese = "Do you want to activate status of all users under this organization? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.addParentCustomersToAffiliateConfirmation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Do you want to add existing customer relationship to new affiliate organization?",
                            SimplifiedChinese = "Do you want to add existing customer relationship to new affiliate organization? (SC)",
                            TraditionalChinese = "Do you want to add existing customer relationship to new affiliate organization? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.addParentCustomersToAllAffiliateConfirmation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Do you want to add same customer relationship to all affiliate organization?",
                            SimplifiedChinese = "Do you want to add same customer relationship to all affiliate organization? (SC)",
                            TraditionalChinese = "Do you want to add same customer relationship to all affiliate organization? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.confirmConsolidationFailed",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Container info and Consignment are mandatory for Confirm.",
                            SimplifiedChinese = "Container info and Consignment are mandatory for Confirm. (SC)",
                            TraditionalChinese = "Container info and Consignment are mandatory for Confirm. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.confirmConsolidationConfirmation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure to confirm this consolidation?",
                            SimplifiedChinese = "Are you sure to confirm this consolidation? (SC)",
                            TraditionalChinese = "Are you sure to confirm this consolidation? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "edit.cancelConfirmation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure to ignore these changes and move away?",
                            SimplifiedChinese = "您確定要放棄所有修改並離開？",
                            TraditionalChinese = "您确定要放弃所有修改并离开？",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "edit.suspendOrganizationConfirmation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Do you want to suspend status of all users under this organization?",
                            SimplifiedChinese = "Do you want to suspend status of all users under this organization? (SC)",
                            TraditionalChinese = "Do you want to suspend status of all users under this organization? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.action",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Action",
                            SimplifiedChinese = "操作",
                            TraditionalChinese = "操作",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.active",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Active",
                            SimplifiedChinese = "已啟用",
                            TraditionalChinese = "已激活",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addMore",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add More",
                            SimplifiedChinese = "Add More (SC)",
                            TraditionalChinese = "Add More (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.seeMore",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "See more",
                            SimplifiedChinese = "See more (SC)",
                            TraditionalChinese = "See more (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.address",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Address",
                            SimplifiedChinese = "地址",
                            TraditionalChinese = "地址",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addressLine2",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Address Line 2",
                            SimplifiedChinese = "Address Line 2 (SC)",
                            TraditionalChinese = "Address Line 2 (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addressLine3",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Address Line 3",
                            SimplifiedChinese = "Address Line 3 (SC)",
                            TraditionalChinese = "Address Line 3 (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addressLine4",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Address Line 4",
                            SimplifiedChinese = "Address Line 4 (SC)",
                            TraditionalChinese = "Address Line 4 (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.affiliateOrganization",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Affiliate Organization",
                            SimplifiedChinese = "Affiliate Organization (SC)",
                            TraditionalChinese = "Affiliate Organization (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.parentOrganization",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Parent Organization",
                            SimplifiedChinese = "Parent Organization (SC)",
                            TraditionalChinese = "Parent Organization (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.customerRelationship",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Customer Relationship",
                            SimplifiedChinese = "Customer Relationship (SC)",
                            TraditionalChinese = "Customer Relationship (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.agent",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Agent",
                            SimplifiedChinese = "Agent (SC)",
                            TraditionalChinese = "Agent (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.alsoNotify",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Also Notify",
                            SimplifiedChinese = "Also Notify (SC)",
                            TraditionalChinese = "Also Notify (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cancel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cancel",
                            SimplifiedChinese = "退出",
                            TraditionalChinese = "退出",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.refreshPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Refresh PO",
                            SimplifiedChinese = "Refresh PO (SC)",
                            TraditionalChinese = "Refresh PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.city",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "City",
                            SimplifiedChinese = "城市",
                            TraditionalChinese = "城市",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.consignee",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Consignee",
                            SimplifiedChinese = "收貨人",
                            TraditionalChinese = "收货人",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.contactEmail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Contact Email",
                            SimplifiedChinese = "郵箱地址",
                            TraditionalChinese = "邮箱地址",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.contactName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Contact Name",
                            SimplifiedChinese = "聯絡人姓名",
                            TraditionalChinese = "联系人姓名",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.country",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Country",
                            SimplifiedChinese = "國家",
                            TraditionalChinese = "国家",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.department",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Department",
                            SimplifiedChinese = "Department (SC)",
                            TraditionalChinese = "Department (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.destinationAgent",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Destination Agent",
                            SimplifiedChinese = "Destination Agent (SC)",
                            TraditionalChinese = "Destination Agent (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.ediSONCompanyCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "ediSON Company Code",
                            SimplifiedChinese = "ediSON Company Code (SC)",
                            TraditionalChinese = "ediSON Company Code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.ediSONInstance",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "ediSON Instance",
                            SimplifiedChinese = "ediSON Instance (SC)",
                            TraditionalChinese = "ediSON Instance (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.email",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Email",
                            SimplifiedChinese = "電郵",
                            TraditionalChinese = "邮箱地址",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.exportBroker",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Export Broker",
                            SimplifiedChinese = "Export Broker (SC)",
                            TraditionalChinese = "Export Broker (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.general",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "General",
                            SimplifiedChinese = "General (SC)",
                            TraditionalChinese = "General (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.importBroker",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Import Broker",
                            SimplifiedChinese = "Import Broker (SC)",
                            TraditionalChinese = "Import Broker (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.inactive",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Inactive",
                            SimplifiedChinese = "待用",
                            TraditionalChinese = "待用",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfOrganizations",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Organizations",
                            SimplifiedChinese = "List of Organizations (SC)",
                            TraditionalChinese = "List of Organizations (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.name",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Name",
                            SimplifiedChinese = "名稱",
                            TraditionalChinese = "名称",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.no",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No",
                            SimplifiedChinese = "否",
                            TraditionalChinese = "否",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.ok",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "OK",
                            SimplifiedChinese = "好",
                            TraditionalChinese = "好",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.noDataFound",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No data found",
                            SimplifiedChinese = "沒有相關數據",
                            TraditionalChinese = "没有相关数据",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.notifyParty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Notify Party",
                            SimplifiedChinese = "被通知人",
                            TraditionalChinese = "被通知人",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.organization",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Organization",
                            SimplifiedChinese = "Organization (SC)",
                            TraditionalChinese = "Organization (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addNewOrganization",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add New Organization",
                            SimplifiedChinese = "Add New Organization (SC)",
                            TraditionalChinese = "Add New Organization (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.organizationCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Organization Code",
                            SimplifiedChinese = "Organization Code (SC)",
                            TraditionalChinese = "Organization Code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.organizationDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Organization Detail",
                            SimplifiedChinese = "Organization Detail (SC)",
                            TraditionalChinese = "Organization Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.organizationName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Organization Name",
                            SimplifiedChinese = "Organization Name (SC)",
                            TraditionalChinese = "Organization Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.organizationRole",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Organization Role",
                            SimplifiedChinese = "Organization Role (SC)",
                            TraditionalChinese = "Organization Role (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.organizationType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Organization Type",
                            SimplifiedChinese = "Organization Type (SC)",
                            TraditionalChinese = "Organization Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.originAgent",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Origin Agent",
                            SimplifiedChinese = "Origin Agent (SC)",
                            TraditionalChinese = "Origin Agent (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.pending",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Pending",
                            SimplifiedChinese = "待接單",
                            TraditionalChinese = "待接单",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.phone",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Phone",
                            SimplifiedChinese = "聯繫電話",
                            TraditionalChinese = "联系电话",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.principal",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Principal",
                            SimplifiedChinese = "Principal (SC)",
                            TraditionalChinese = "Principal (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.rejected",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Rejected",
                            SimplifiedChinese = "拒绝",
                            TraditionalChinese = "拒絕",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.select",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Select",
                            SimplifiedChinese = "選擇",
                            TraditionalChinese = "选择",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipper",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipper",
                            SimplifiedChinese = "托運人",
                            TraditionalChinese = "托运人",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.showRows",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Show Rows",
                            SimplifiedChinese = "Show Rows (SC)",
                            TraditionalChinese = "Show Rows (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.status",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Status",
                            SimplifiedChinese = "狀態",
                            TraditionalChinese = "状态",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.title",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Title",
                            SimplifiedChinese = "Title (SC)",
                            TraditionalChinese = "Title (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.user",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "User",
                            SimplifiedChinese = "User (SC)",
                            TraditionalChinese = "User (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.userType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "User Type",
                            SimplifiedChinese = "用戶類型",
                            TraditionalChinese = "用户类型",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.yes",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Yes",
                            SimplifiedChinese = "是",
                            TraditionalChinese = "是",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.customerPrefix",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Customer Prefix",
                            SimplifiedChinese = "Customer Prefix (SC)",
                            TraditionalChinese = "Customer Prefix (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "save.failureNotification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Data cannot be saved",
                            SimplifiedChinese = "Data cannot be saved (SC)",
                            TraditionalChinese = "Data cannot be saved (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "save.sucessNotification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Data has been saved successfully",
                            SimplifiedChinese = "Data has been saved successfully (SC)",
                            TraditionalChinese = "Data has been saved successfully (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "save.activityAddedNotification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Data has been saved successfully",
                            SimplifiedChinese = "Data has been saved successfully (SC)",
                            TraditionalChinese = "Data has been saved successfully (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.emailFormat",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "The email is not valid",
                            SimplifiedChinese = "The email is not valid (SC)",
                            TraditionalChinese = "The email is not valid (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.mandatoryFieldsValidation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Invalid data found. Please check.",
                            SimplifiedChinese = "訊息無效，請重新輸入。",
                            TraditionalChinese = "无效信息，请重新输入。",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.organizationAddressRequired",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "OrganizationAddress is required",
                            SimplifiedChinese = "OrganizationAddress is required (SC)",
                            TraditionalChinese = "OrganizationAddress is required (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.organizationCityIdRequired",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "OrganizationCityId is required",
                            SimplifiedChinese = "OrganizationCityId is required (SC)",
                            TraditionalChinese = "OrganizationCityId is required (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.organizationContactEmailRequired",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "OrganizationContactEmail is required",
                            SimplifiedChinese = "OrganizationContactEmail is required (SC)",
                            TraditionalChinese = "OrganizationContactEmail is required (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.organizationContactNameRequired",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "OrganizationContactName is required",
                            SimplifiedChinese = "OrganizationContactName is required (SC)",
                            TraditionalChinese = "OrganizationContactName is required (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.organizationCountryIdRequired",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "OrganizationCountryId is required",
                            SimplifiedChinese = "OrganizationCountryId is required (SC)",
                            TraditionalChinese = "OrganizationCountryId is required (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.organizationEdisonCompanyCodeIdRequired",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "OrganizationEdisonCompanyCodeId is required",
                            SimplifiedChinese = "OrganizationEdisonCompanyCodeId is required (SC)",
                            TraditionalChinese = "OrganizationEdisonCompanyCodeId is required (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.organizationEdisonInstanceIdRequired",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "OrganizationEdisonInstanceId is required",
                            SimplifiedChinese = "OrganizationEdisonInstanceId is required (SC)",
                            TraditionalChinese = "OrganizationEdisonInstanceId is required (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.organizationNameRequired",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "OrganizationName is required",
                            SimplifiedChinese = "OrganizationName is required (SC)",
                            TraditionalChinese = "OrganizationName is required (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.organizationRolesRequired",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Organization Role is required",
                            SimplifiedChinese = "Organization Role is required (SC)",
                            TraditionalChinese = "Organization Role is required (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.requiredField",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "{{fieldName}} is required",
                            SimplifiedChinese = "{{fieldName}} is required (SC)",
                            TraditionalChinese = "{{fieldName}} is required (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.requiredThisField",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "This field is required",
                            SimplifiedChinese = "This field is required (SC)",
                            TraditionalChinese = "This field is required (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.executionAgentAlreadyUsed",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Execution Agent already used.",
                            SimplifiedChinese = "Execution Agent already used. (SC)",
                            TraditionalChinese = "Execution Agent already used. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.specifyContainerType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Please specify the container type",
                            SimplifiedChinese = "Please specify the container type (SC)",
                            TraditionalChinese = "Please specify the container type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.atLeastOneCargoItem",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Please provide at least one item",
                            SimplifiedChinese = "Please provide at least one item (SC)",
                            TraditionalChinese = "Please provide at least one item (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.requireMSDSWithDangerousGoods",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "MSDS is required for shipment with dangerous goods",
                            SimplifiedChinese = "MSDS is required for shipment with dangerous goods (SC)",
                            TraditionalChinese = "MSDS is required for shipment with dangerous goods (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.total",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Total",
                            SimplifiedChinese = "Total (SC)",
                            TraditionalChinese = "Total (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.userProfile",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "User profile",
                            SimplifiedChinese = "User profile (SC)",
                            TraditionalChinese = "User profile (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.logOut",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Log out",
                            SimplifiedChinese = "Log out (SC)",
                            TraditionalChinese = "Log out (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipmentNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment No.",
                            SimplifiedChinese = "Shipment No. (SC)",
                            TraditionalChinese = "Shipment No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.containerNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Container No.",
                            SimplifiedChinese = "Container No. (SC)",
                            TraditionalChinese = "Container No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.dashboard",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Dashboard",
                            SimplifiedChinese = "Dashboard (SC)",
                            TraditionalChinese = "Dashboard (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment",
                            SimplifiedChinese = "Shipment (SC)",
                            TraditionalChinese = "Shipment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipments",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipments",
                            SimplifiedChinese = "Shipments (SC)",
                            TraditionalChinese = "Shipments (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.masterBOL",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Master BL",
                            SimplifiedChinese = "Master BL (SC)",
                            TraditionalChinese = "Master BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.masterBillDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Master Bill Detail",
                            SimplifiedChinese = "Master Bill Detail (SC)",
                            TraditionalChinese = "Master Bill Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.BOLDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "House BL Detail",
                            SimplifiedChinese = "House BL Detail (SC)",
                            TraditionalChinese = "House BL Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.consignments",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Consignments",
                            SimplifiedChinese = "Consignments (SC)",
                            TraditionalChinese = "Consignments (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfInvoices",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Invoices",
                            SimplifiedChinese = "List of Invoices (SC)",
                            TraditionalChinese = "List of Invoices (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.invoices",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Invoices",
                            SimplifiedChinese = "Invoices (SC)",
                            TraditionalChinese = "Invoices (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.organizations",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Organizations",
                            SimplifiedChinese = "Organizations (SC)",
                            TraditionalChinese = "Organizations (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.users",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Users",
                            SimplifiedChinese = "Users (SC)",
                            TraditionalChinese = "Users (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.userDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "User Detail",
                            SimplifiedChinese = "User Detail (SC)",
                            TraditionalChinese = "User Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.usersAndRoles",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Users and Roles",
                            SimplifiedChinese = "Users and Roles (SC)",
                            TraditionalChinese = "Users and Roles (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.userRequests",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "User Requests",
                            SimplifiedChinese = "User Requests (SC)",
                            TraditionalChinese = "User Requests(TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.userRequestDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "User Request Detail",
                            SimplifiedChinese = "User Request Detail (SC)",
                            TraditionalChinese = "User Request Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.roles",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Roles",
                            SimplifiedChinese = "Roles (SC)",
                            TraditionalChinese = "Roles (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.roleDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Role Detail",
                            SimplifiedChinese = "Role Detail (SC)",
                            TraditionalChinese = "Role Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.aboutUs",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "About Us",
                            SimplifiedChinese = "About Us (SC)",
                            TraditionalChinese = "About Us (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.help",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Help",
                            SimplifiedChinese = "Help (SC)",
                            TraditionalChinese = "Help (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.contact",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Contact",
                            SimplifiedChinese = "Contact (SC)",
                            TraditionalChinese = "Contact (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.termsCondition",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Terms & Condition",
                            SimplifiedChinese = "Terms & Condition (SC)",
                            TraditionalChinese = "Terms & Condition (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.quickTrackValue",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Quick Track Value",
                            SimplifiedChinese = "Quick Track Value (SC)",
                            TraditionalChinese = "Quick Track Value (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.home",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Home",
                            SimplifiedChinese = "Home (SC)",
                            TraditionalChinese = "Home (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cargoHomepage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cargo Service",
                            SimplifiedChinese = "Cargo Service (SC)",
                            TraditionalChinese = "Cargo Service (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.welcome",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Hi, {{name}} ! Welcome to CS Shipment Portal Platform",
                            SimplifiedChinese = "{{name}}，您好！ 欢迎使用 CS Shipment Portal Platform",
                            TraditionalChinese = "{{name}}，您好！ 歡迎使用 CS Shipment Portal Platform",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.appAccountPending",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Thank you for registering an account with us! An email notification will be sent to you when the account opening process is completed.",
                            SimplifiedChinese = "感谢您注册成为我们的用户，当账户审批完成时，我们将会以电邮的方式通知您。",
                            TraditionalChinese = "帳戶審批過程完成時，我們將會以電郵方式通知您。",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.appAccountRejected",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Thank you for registering an account with us! Your account approve process cannot be complete. Please contact our customer support team <a href=\"mailto:csportal.helpdesk@cargofe.com\"> csportal.helpdesk@cargofe.com </a> if there's anything we can help with.",
                            SimplifiedChinese = "Thank you for registering an account with us! Your account approve process cannot be complete. Please contact our customer support team <a href=\"mailto:csportal.helpdesk@cargofe.com\"> csportal.helpdesk@cargofe.com </a> if there's anything we can help with. (SC)",
                            TraditionalChinese = "Thank you for registering an account with us! Your account approve process cannot be complete. Please contact our customer support team <a href=\"mailto:csportal.helpdesk@cargofe.com\"> csportal.helpdesk@cargofe.com </a> if there's anything we can help with. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.createdDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Created Date",
                            SimplifiedChinese = "Created Date (SC)",
                            TraditionalChinese = "Created Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "edit.inactiveConfirmation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Selected item state is inactive. Are you sure you want to submit it?",
                            SimplifiedChinese = "Selected item state is inactive. Are you sure you want to submit it? (SC)",
                            TraditionalChinese = "Selected item state is inactive. Are you sure you want to submit it? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.userRequest",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "User Request",
                            SimplifiedChinese = "User Request (SC)",
                            TraditionalChinese = "User Request (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.role",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Role",
                            SimplifiedChinese = "用戶角色",
                            TraditionalChinese = "用户角色",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.companyName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Company Name",
                            SimplifiedChinese = "公司名稱",
                            TraditionalChinese = "公司名称",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.internalUser",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Internal User",
                            SimplifiedChinese = "Internal User (SC)",
                            TraditionalChinese = "Internal User (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.externalUser",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "External User",
                            SimplifiedChinese = "External User (SC)",
                            TraditionalChinese = "External User (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.all",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "All",
                            SimplifiedChinese = "All (SC)",
                            TraditionalChinese = "All (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.id",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "ID",
                            SimplifiedChinese = "ID (SC)",
                            TraditionalChinese = "ID (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.userList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Users",
                            SimplifiedChinese = "List of Users (SC)",
                            TraditionalChinese = "List of Users (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.lastSignIn",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Last Sign In",
                            SimplifiedChinese = "Last Sign In (SC)",
                            TraditionalChinese = "Last Sign In (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.invalidFormat",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "{{fieldName}} is not valid",
                            SimplifiedChinese = "{{fieldName}} is not valid (SC)",
                            TraditionalChinese = "{{fieldName}} is not valid (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.fileTooLarge",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Your file is too large",
                            SimplifiedChinese = "檔案太大，上傳失敗。",
                            TraditionalChinese = "文件太大，上传失败。",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.profilePictureLimit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Extensions: *.jpg, *.jpeg, *.png. Max size: 150 KB.",
                            SimplifiedChinese = "可选择文件类型：*.jpg，*jpeg，*.png 最大文件容量：150 KB",
                            TraditionalChinese = "可選擇檔案類型：*.jpg，*jpeg，*.png。 最大檔容量：150 KB",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.myProfile",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "My Profile",
                            SimplifiedChinese = "My Profile (SC)",
                            TraditionalChinese = "My Profile (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfUserRequests",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of User Requests",
                            SimplifiedChinese = "List of User Requests (SC)",
                            TraditionalChinese = "List of User Requests (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.userRole",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "User Role",
                            SimplifiedChinese = "User Role (SC)",
                            TraditionalChinese = "User Role (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.userNotLogin",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Current user did not login to the application",
                            SimplifiedChinese = "Current user did not login to the application (SC)",
                            TraditionalChinese = "Current user did not login to the application (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.allPermissionsRequired",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "All of these permissions must be granted",
                            SimplifiedChinese = "All of these permissions must be granted (SC)",
                            TraditionalChinese = "All of these permissions must be granted (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.notAllowScope",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Scope is not allowed",
                            SimplifiedChinese = "Scope is not allowed (SC)",
                            TraditionalChinese = "Scope is not allowed (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.oneOfThesePermissionsRequired",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "At least one of these permissions must be granted",
                            SimplifiedChinese = "At least one of these permissions must be granted (SC)",
                            TraditionalChinese = "At least one of these permissions must be granted (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.image",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Image",
                            SimplifiedChinese = "Image (SC)",
                            TraditionalChinese = "Image (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "save.failureExternalApproveGuest",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Role must be not Guest",
                            SimplifiedChinese = "Role must be not Guest (SC)",
                            TraditionalChinese = "Role must be not Guest (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "save.failureOrganizationId",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Organization is invalid",
                            SimplifiedChinese = "Organization is invalid (SC)",
                            TraditionalChinese = "Organization is invalid (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "save.failureInternalApproveGuest",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Role must be not Pending",
                            SimplifiedChinese = "Role must be not Pending (SC)",
                            TraditionalChinese = "Role must be not Pending (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.save",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Save",
                            SimplifiedChinese = "Save (SC)",
                            TraditionalChinese = "Save (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.updatedDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Updated Date",
                            SimplifiedChinese = "Updated Date (SC)",
                            TraditionalChinese = "Updated Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.description",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Description",
                            SimplifiedChinese = "Description (SC)",
                            TraditionalChinese = "Description (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfRoles",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Roles",
                            SimplifiedChinese = "List of Roles (SC)",
                            TraditionalChinese = "List of Roles (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.invalid",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Invalid {{fieldName}}",
                            SimplifiedChinese = "Invalid {{fieldName}} (SC)",
                            TraditionalChinese = "Invalid {{fieldName}} (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.fieldNameInvalid",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "{{fieldName}} is invalid",
                            SimplifiedChinese = "{{fieldName}} is invalid (SC)",
                            TraditionalChinese = "{{fieldName}} is invalid (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.maxValue",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "The max value is {{value}}.",
                            SimplifiedChinese = "The max value is {{value}}. (SC)",
                            TraditionalChinese = "The max value is {{value}}. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.identityType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Identity Type",
                            SimplifiedChinese = "Identity Type (SC)",
                            TraditionalChinese = "Identity Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.identityTenant",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Identity Tenant",
                            SimplifiedChinese = "Identity Tenant (SC)",
                            TraditionalChinese = "Identity Tenant (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "edit.saveConfirmation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Do you want to save the changes?",
                            SimplifiedChinese = "Do you want to save the changes ? (SC)",
                            TraditionalChinese = "Do you want to save the changes ? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.organizationInactive",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "The {{organizationName}} is being inactive",
                            SimplifiedChinese = "The {{organizationName}} is being inactive (SC)",
                            TraditionalChinese = "The {{organizationName}} is being inactive (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.cannotActiveOrganization",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cannot activate this user under inactive organization",
                            SimplifiedChinese = "Cannot activate this user under inactive organization (SC)",
                            TraditionalChinese = "Cannot activate this user under inactive organization (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.cannotCancelLoadedShipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Not allow to cancel the shipment because its container is already loaded.",
                            SimplifiedChinese = "Not allow to cancel the shipment because its container is already loaded. (SC)",
                            TraditionalChinese = "Not allow to cancel the shipment because its container is already loaded. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.cannotCancelShipmentHasBLLinked",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "In order to cancel the shipment, you have to unlink the House / the Master.",
                            SimplifiedChinese = "In order to cancel the shipment, you have to unlink the House / the Master. (SC)",
                            TraditionalChinese = "In order to cancel the shipment, you have to unlink the House / the Master. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.confirmItineraryBeforeConsolidating",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Please confirm the shipment itinerary before consolidating.",
                            SimplifiedChinese = "Please confirm the shipment itinerary before consolidating. (SC)",
                            TraditionalChinese = "Please confirm the shipment itinerary before consolidating. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.invalidExecutionAgent",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Execution Agent is invalid",
                            SimplifiedChinese = "Execution Agent is invalid (SC)",
                            TraditionalChinese = "Execution Agent is invalid (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.invalidShipmentNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment No. is invalid",
                            SimplifiedChinese = "Shipment No. is invalid (SC)",
                            TraditionalChinese = "Shipment No. is invalid (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.createConsignmentHouseBL",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Please create consignment before assigning the House.",
                            SimplifiedChinese = "Please create consignment before assigning the House. (SC)",
                            TraditionalChinese = "Please create consignment before assigning the House.",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.confirmContainerHouseBL",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Please confirm container before assigning the House.",
                            SimplifiedChinese = "Please confirm container before assigning the House. (SC)",
                            TraditionalChinese = "Please confirm container before assigning the House. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.confirmConsolidationHouseBL",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Please confirm consolidation before assigning the House.",
                            SimplifiedChinese = "Please confirm consolidation before assigning the House. (SC)",
                            TraditionalChinese = "Please confirm consolidation before assigning the House. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "confirmation.unlinkMaster",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to unlink the Master?",
                            SimplifiedChinese = "Are you sure you want to unlink the Master? (SC)",
                            TraditionalChinese = "Are you sure you want to unlink the Master? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.unlinkMaster",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Unlink Master",
                            SimplifiedChinese = "Unlink Master (SC)",
                            TraditionalChinese = "Unlink Master (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "confirmation.unlinkHouseBL",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure to remove this House BL?",
                            SimplifiedChinese = "Are you sure to remove this House BL? (SC)",
                            TraditionalChinese = "Are you sure to remove this House BL? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.backToList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Back to list",
                            SimplifiedChinese = "Back to list (SC)",
                            TraditionalChinese = "Back to list (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.delete",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Delete",
                            SimplifiedChinese = "Delete (SC)",
                            TraditionalChinese = "Delete (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.edit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit",
                            SimplifiedChinese = "Edit (SC)",
                            TraditionalChinese = "Edit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.approve",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Approve",
                            SimplifiedChinese = "Approve (SC)",
                            TraditionalChinese = "Approve (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.reject",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Reject",
                            SimplifiedChinese = "Reject (SC)",
                            TraditionalChinese = "Reject (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.refresh",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Refresh",
                            SimplifiedChinese = "Refresh (SC)",
                            TraditionalChinese = "Refresh (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.preview",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Preview",
                            SimplifiedChinese = "Preview (SC)",
                            TraditionalChinese = "Preview (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.unpreview",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Unpreview",
                            SimplifiedChinese = "Unpreview (SC)",
                            TraditionalChinese = "Unpreview (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.moreActions",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "More actions",
                            SimplifiedChinese = "More actions (SC)",
                            TraditionalChinese = "More actions (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.defaultAgent",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Change back to the default agent.",
                            SimplifiedChinese = "Change back to the default agent. (SC)",
                            TraditionalChinese = "Change back to the default agent. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.changeAgent",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Change the default agent and create shipment in system.",
                            SimplifiedChinese = "Change the default agent and create shipment in system. (SC)",
                            TraditionalChinese = "Change the default agent and create shipment in system. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.defaultAgent",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Default Agent",
                            SimplifiedChinese = "Default Agent (SC)",
                            TraditionalChinese = "Default Agent (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.changeAgent",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Change Agent",
                            SimplifiedChinese = "Change Agent (SC)",
                            TraditionalChinese = "Change Agent (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.unloadAll",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Unload All",
                            SimplifiedChinese = "Unload All (SC)",
                            TraditionalChinese = "Unload All (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.unload",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Unload",
                            SimplifiedChinese = "Unload (SC)",
                            TraditionalChinese = "Unload (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.collapseAll",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Collapse All",
                            SimplifiedChinese = "Collapse All (SC)",
                            TraditionalChinese = "Collapse All (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.addConsolidationMissingCargoDetails",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cannot consolidate due to missing cargo details.",
                            SimplifiedChinese = "Cannot consolidate due to missing cargo details. (SC)",
                            TraditionalChinese = "Cannot consolidate due to missing cargo details. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.resendActivationEmail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Resend Activation Email",
                            SimplifiedChinese = "Resend Activation Email (SC)",
                            TraditionalChinese = "Resend Activation Email (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.type",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Type",
                            SimplifiedChinese = "Type (SC)",
                            TraditionalChinese = "Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.zero",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "zero",
                            SimplifiedChinese = "zero (SC)",
                            TraditionalChinese = "zero (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfMasterBill",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Master Bill",
                            SimplifiedChinese = "List of Master Bill (SC)",
                            TraditionalChinese = "List of Master Bill (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.carrier",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Carrier",
                            SimplifiedChinese = "Carrier (SC)",
                            TraditionalChinese = "Carrier (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.vesselVoyage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Vessel Voyage",
                            SimplifiedChinese = "Vessel Voyage (SC)",
                            TraditionalChinese = "Vessel Voyage (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.portOfDischarge",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Port of Discharge",
                            SimplifiedChinese = "Port of Discharge (SC)",
                            TraditionalChinese = "Port of Discharge (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfInvoice",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Invoice",
                            SimplifiedChinese = "Invoice (SC)",
                            TraditionalChinese = "Invoice (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.invoiceNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Invoice No.",
                            SimplifiedChinese = "Invoice No. (SC)",
                            TraditionalChinese = "Invoice No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.invoiceDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Invoice Date",
                            SimplifiedChinese = "Invoice Date (SC)",
                            TraditionalChinese = "Invoice Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.vessel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Vessel",
                            SimplifiedChinese = "Vessel (SC)",
                            TraditionalChinese = "Vessel (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.realVessel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Real Vessel",
                            SimplifiedChinese = "Real Vessel (SC)",
                            TraditionalChinese = "Real Vessel (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.etdDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "ETD",
                            SimplifiedChinese = "ETD (SC)",
                            TraditionalChinese = "ETD (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.etaDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "ETA",
                            SimplifiedChinese = "ETA (SC)",
                            TraditionalChinese = "ETA (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.atdDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "ATD",
                            SimplifiedChinese = "ATD (SC)",
                            TraditionalChinese = "ATD (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.ataDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "ATA",
                            SimplifiedChinese = "ATA (SC)",
                            TraditionalChinese = "ATA (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.vesselArrival",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Vessel Arrival",
                            SimplifiedChinese = "Vessel Arrival (SC)",
                            TraditionalChinese = "Vessel Arrival (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfVesselArrival",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Vessel Arrival",
                            SimplifiedChinese = "List of Vessel Arrival (SC)",
                            TraditionalChinese = "List of Vessel Arrival (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cyOpenDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CY Open Date",
                            SimplifiedChinese = "CY Open Date (SC)",
                            TraditionalChinese = "CY Open Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cyClosingDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CY Closing Date",
                            SimplifiedChinese = "CY Closing Date (SC)",
                            TraditionalChinese = "CY Closing Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cfsClosingDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CFS Closing Date",
                            SimplifiedChinese = "CFS Closing Date (SC)",
                            TraditionalChinese = "CFS Closing Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.BOLNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "House BL No.",
                            SimplifiedChinese = "House BL No. (SC)",
                            TraditionalChinese = "House BL No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.jobNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Job No.",
                            SimplifiedChinese = "Job No. (SC)",
                            TraditionalChinese = "Job No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.billTo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Bill To",
                            SimplifiedChinese = "Bill To (SC)",
                            TraditionalChinese = "Bill To (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.billBy",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Bill By",
                            SimplifiedChinese = "Bill By (SC)",
                            TraditionalChinese = "Bill By (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfShipments",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Shipments",
                            SimplifiedChinese = "List of Shipments (SC)",
                            TraditionalChinese = "List of Shipments (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipFrom",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ship From",
                            SimplifiedChinese = "Ship From (SC)",
                            TraditionalChinese = "Ship From (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cargoReadyDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ex-work Date",
                            SimplifiedChinese = "Ex-work Date (SC)",
                            TraditionalChinese = "Ex-work Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookingCargoReadyDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cargo Ready Date",
                            SimplifiedChinese = "Cargo Ready Date (SC)",
                            TraditionalChinese = "Cargo Ready Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookingDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Date",
                            SimplifiedChinese = "Booking Date (SC)",
                            TraditionalChinese = "Booking Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipTo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ship To",
                            SimplifiedChinese = "Ship To (SC)",
                            TraditionalChinese = "Ship To (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.receiptPort",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Receipt Port",
                            SimplifiedChinese = "Receipt Port (SC)",
                            TraditionalChinese = "Receipt Port (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.deliveryPort",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Delivery Port",
                            SimplifiedChinese = "Delivery Port (SC)",
                            TraditionalChinese = "Delivery Port (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.placeOfReceipt",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Place of Receipt",
                            SimplifiedChinese = "Place of Receipt (SC)",
                            TraditionalChinese = "Place of Receipt (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.placeOfDelivery",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Place of Delivery",
                            SimplifiedChinese = "Place of Delivery (SC)",
                            TraditionalChinese = "Place of Delivery (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.generalInfo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "General Info",
                            SimplifiedChinese = "General Info (SC)",
                            TraditionalChinese = "General Info (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.permission",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Permission",
                            SimplifiedChinese = "Permission (SC)",
                            TraditionalChinese = "Permission (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.masterBillOfLading",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Master BL",
                            SimplifiedChinese = "Master BL (SC)",
                            TraditionalChinese = "Master BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.masterBill",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Master Bill",
                            SimplifiedChinese = "Master Bill (SC)",
                            TraditionalChinese = "Master Bill (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.consignment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Consignment",
                            SimplifiedChinese = "Consignment (SC)",
                            TraditionalChinese = "Consignment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipmentVolume",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment Volume",
                            SimplifiedChinese = "Shipment Volume (SC)",
                            TraditionalChinese = "Shipment Volume (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poIssued",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO issued",
                            SimplifiedChinese = "PO issued (SC)",
                            TraditionalChinese = "PO issued (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.top10Consignee",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Top 10 Consignee",
                            SimplifiedChinese = "Top 10 Consignee (SC)",
                            TraditionalChinese = "Top 10 Consignee (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.top10Shipper",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Top 10 Shipper",
                            SimplifiedChinese = "Top 10 Shipper (SC)",
                            TraditionalChinese = "Top 10 Shipper (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.top10Carrier",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Top 10 Carrier",
                            SimplifiedChinese = "Top 10 Carrier (SC)",
                            TraditionalChinese = "Top 10 Carrier (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.thisWeek",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "This week",
                            SimplifiedChinese = "This week (SC)",
                            TraditionalChinese = "This week (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.next14Days",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Next 14 days",
                            SimplifiedChinese = "Next 14 days (SC)",
                            TraditionalChinese = "Next 14 days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.thisMonth",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "This month",
                            SimplifiedChinese = "This month (SC)",
                            TraditionalChinese = "This month (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.thisYear",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "This year",
                            SimplifiedChinese = "This year (SC)",
                            TraditionalChinese = "This year (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.lastYear",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Last year",
                            SimplifiedChinese = "Last year (SC)",
                            TraditionalChinese = "Last year (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.last7Days",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Last 7 days",
                            SimplifiedChinese = "Last 7 days (SC)",
                            TraditionalChinese = "Last 7 days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.last14Days",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Last 14 days",
                            SimplifiedChinese = "Last 14 days (SC)",
                            TraditionalChinese = "Last 14 days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.last30Days",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Last 30 days",
                            SimplifiedChinese = "Last 30 days (SC)",
                            TraditionalChinese = "Last 30 days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.next3Days",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Next 3 days",
                            SimplifiedChinese = "Next 3 days (SC)",
                            TraditionalChinese = "Next 3 days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.next4Days",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Next 4 days",
                            SimplifiedChinese = "Next 4 days (SC)",
                            TraditionalChinese = "Next 4 days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.next5Days",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Next 5 days",
                            SimplifiedChinese = "Next 5 days (SC)",
                            TraditionalChinese = "Next 5 days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.next6Days",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Next 6 days",
                            SimplifiedChinese = "Next 6 days (SC)",
                            TraditionalChinese = "Next 6 days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.next7Days",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Next 7 days",
                            SimplifiedChinese = "Next 7 days (SC)",
                            TraditionalChinese = "Next 7 days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipmentBooked",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment Booked",
                            SimplifiedChinese = "Shipment Booked (SC)",
                            TraditionalChinese = "Shipment Booked (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.handoverFromShipper",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Handover from Shipper",
                            SimplifiedChinese = "Handover from Shipper (SC)",
                            TraditionalChinese = "Handover from Shipper (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.departureFromPort",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Departure from Port",
                            SimplifiedChinese = "Departure from Port (SC)",
                            TraditionalChinese = "Departure from Port (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.inTransit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "In Transit",
                            SimplifiedChinese = "In Transit (SC)",
                            TraditionalChinese = "In Transit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.inOriginDC",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "In Origin DC",
                            SimplifiedChinese = "In Origin DC (SC)",
                            TraditionalChinese = "In Origin DC (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.customsCleared",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Customs Cleared",
                            SimplifiedChinese = "Customs Cleared (SC)",
                            TraditionalChinese = "Customs Cleared (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.pendingDCDelivery",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Pending DC Delivery",
                            SimplifiedChinese = "Pending DC Delivery (SC)",
                            TraditionalChinese = "Pending DC Delivery (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.dcDeliveryPending",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "DC Delivery Pending",
                            SimplifiedChinese = "DC Delivery Pending (SC)",
                            TraditionalChinese = "DC Delivery Pending (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.totalDCPending",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Total Pending",
                            SimplifiedChinese = "Total Pending (SC)",
                            TraditionalChinese = "Total Pending (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.dcDeliveryConfirmed",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "DC Delivery Confirmed",
                            SimplifiedChinese = "DC Delivery Confirmed (SC)",
                            TraditionalChinese = "DC Delivery Confirmed (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.arrivalAtPort",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Arrival at Port",
                            SimplifiedChinese = "Arrival at Port (SC)",
                            TraditionalChinese = "Arrival at Port (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.handoverToConsignee",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Handover to Consignee",
                            SimplifiedChinese = "Handover to Consignee (SC)",
                            TraditionalChinese = "Handover to Consignee (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.billOfLadingNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "House BL No.",
                            SimplifiedChinese = "House BL No. (SC)",
                            TraditionalChinese = "House BL No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.billOfLadingDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "House BL Detail",
                            SimplifiedChinese = "House BL Detail (SC)",
                            TraditionalChinese = "House BL Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.modeOfTransport",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Mode of Transport",
                            SimplifiedChinese = "Mode of Transport (SC)",
                            TraditionalChinese = "Mode of Transport (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.mode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Mode",
                            SimplifiedChinese = "Mode (SC)",
                            TraditionalChinese = "Mode (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.billOfLadingType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Bill of Lading Type",
                            SimplifiedChinese = "Bill of Lading Type (SC)",
                            TraditionalChinese = "Bill of Lading Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.jobNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Job Number",
                            SimplifiedChinese = "Job Number (SC)",
                            TraditionalChinese = "Job Number (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.issueDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Issue Date",
                            SimplifiedChinese = "Issue Date (SC)",
                            TraditionalChinese = "Issue Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.movement",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Movement",
                            SimplifiedChinese = "Movement (SC)",
                            TraditionalChinese = "Movement (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.incoterm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Incoterm",
                            SimplifiedChinese = "Incoterm (SC)",
                            TraditionalChinese = "Incoterm (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.nominationPrincipal",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Nomination Principal",
                            SimplifiedChinese = "Nomination Principal (SC)",
                            TraditionalChinese = "Nomination Principal (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.itinerary",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Itinerary",
                            SimplifiedChinese = "Itinerary (SC)",
                            TraditionalChinese = "Itinerary (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.vesselFlight",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Vessel/Flight",
                            SimplifiedChinese = "Vessel/Flight (SC)",
                            TraditionalChinese = "Vessel/Flight (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.loadingPort",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Loading Port",
                            SimplifiedChinese = "Loading Port (SC)",
                            TraditionalChinese = "Loading Port (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.dischargePort",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Discharge Port",
                            SimplifiedChinese = "Discharge Port (SC)",
                            TraditionalChinese = "Discharge Port (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.totalVolume",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Total Volume",
                            SimplifiedChinese = "Total Volume (SC)",
                            TraditionalChinese = "Total Volume (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.totalPackage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Total Package",
                            SimplifiedChinese = "Total Package (SC)",
                            TraditionalChinese = "Total Package (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.latestMilestone",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Latest Milestone",
                            SimplifiedChinese = "Latest Milestone (SC)",
                            TraditionalChinese = "Latest Milestone (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.milestone",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Milestone",
                            SimplifiedChinese = "Milestone (SC)",
                            TraditionalChinese = "Milestone (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.containerType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Container Type",
                            SimplifiedChinese = "Container Type (SC)",
                            TraditionalChinese = "Container Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.sealNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Seal No.",
                            SimplifiedChinese = "Seal No. (SC)",
                            TraditionalChinese = "Seal No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.sealNo2",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Seal No. 2",
                            SimplifiedChinese = "Seal No. 2 (SC)",
                            TraditionalChinese = "Seal No. 2 (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.loadingDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Loading Date",
                            SimplifiedChinese = "Loading Date (SC)",
                            TraditionalChinese = "Loading Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.gateInDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Gate In Date",
                            SimplifiedChinese = "Gate In Date (SC)",
                            TraditionalChinese = "Gate In Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.grossWeight",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Gross Weight",
                            SimplifiedChinese = "Gross Weight (SC)",
                            TraditionalChinese = "Gross Weight (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.volume",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Volume",
                            SimplifiedChinese = "Volume (SC)",
                            TraditionalChinese = "Volume (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.latestActivity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Latest Activity",
                            SimplifiedChinese = "Latest Activity (SC)",
                            TraditionalChinese = "Latest Activity (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.company",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Company",
                            SimplifiedChinese = "Company (SC)",
                            TraditionalChinese = "Company (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.contactNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Contact Number",
                            SimplifiedChinese = "Contact Number (SC)",
                            TraditionalChinese = "Contact Number (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.attachmentType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Attachment Type",
                            SimplifiedChinese = "Attachment Type (SC)",
                            TraditionalChinese = "Attachment Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.file",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "File",
                            SimplifiedChinese = "File (SC)",
                            TraditionalChinese = "File (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.referenceNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Reference No.",
                            SimplifiedChinese = "Reference No. (SC)",
                            TraditionalChinese = "Reference No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.uploadedBy",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Uploaded By",
                            SimplifiedChinese = "Uploaded By (SC)",
                            TraditionalChinese = "Uploaded By (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.uploadedAt",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Uploaded At",
                            SimplifiedChinese = "Uploaded At (SC)",
                            TraditionalChinese = "Uploaded At (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.documentLevel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Document Level",
                            SimplifiedChinese = "Document Level (SC)",
                            TraditionalChinese = "Document Level (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.documentType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Document Type",
                            SimplifiedChinese = "Document Type (SC)",
                            TraditionalChinese = "Document Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.houseBLNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "House BL Number",
                            SimplifiedChinese = "House BL Number (SC)",
                            TraditionalChinese = "House BL Number (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.lastVesselVoyage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Last Vessel Voyage",
                            SimplifiedChinese = "Last Vessel Voyage (SC)",
                            TraditionalChinese = "Last Vessel Voyage (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.container",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Container",
                            SimplifiedChinese = "Container (SC)",
                            TraditionalChinese = "Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.containers",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Container(s)",
                            SimplifiedChinese = "Container(s) (SC)",
                            TraditionalChinese = "Container(s) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addNewItem",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add New Item",
                            SimplifiedChinese = "Add New Item (SC)",
                            TraditionalChinese = "Add New Item (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addItem",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add Item",
                            SimplifiedChinese = "Add Item (SC)",
                            TraditionalChinese = "Add Item (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addContainer",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add Container",
                            SimplifiedChinese = "Add Container (SC)",
                            TraditionalChinese = "Add Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.serviceType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Service Type",
                            SimplifiedChinese = "Service Type (SC)",
                            TraditionalChinese = "Service Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipmentType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment Type",
                            SimplifiedChinese = "Shipment Type (SC)",
                            TraditionalChinese = "Shipment Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.nominee",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Nominee",
                            SimplifiedChinese = "Nominee (SC)",
                            TraditionalChinese = "Nominee (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.totalGrossWeight",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Total Gross Weight",
                            SimplifiedChinese = "Total Gross Weight (SC)",
                            TraditionalChinese = "Total Gross Weight (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.totalNetWeight",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Total Net Weight",
                            SimplifiedChinese = "Total Net Weight (SC)",
                            TraditionalChinese = "Total Net Weight (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.activity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Activity",
                            SimplifiedChinese = "Activity (SC)",
                            TraditionalChinese = "Activity (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.activityCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Event Code",
                            SimplifiedChinese = "Event Code (SC)",
                            TraditionalChinese = "Event Code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.activityDescription",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Activity Description",
                            SimplifiedChinese = "Activity Description (SC)",
                            TraditionalChinese = "Activity Description (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.activityDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Activity Date",
                            SimplifiedChinese = "Activity Date (SC)",
                            TraditionalChinese = "Activity Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.location",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Location",
                            SimplifiedChinese = "Location (SC)",
                            TraditionalChinese = "Location (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.remark",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Remark",
                            SimplifiedChinese = "Remark (SC)",
                            TraditionalChinese = "Remark (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.sequence",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Sequence",
                            SimplifiedChinese = "Sequence (SC)",
                            TraditionalChinese = "Sequence (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.consignmentType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Consignment Type",
                            SimplifiedChinese = "Consignment Type (SC)",
                            TraditionalChinese = "Consignment Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.consignmentDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Consignment Date",
                            SimplifiedChinese = "Consignment Date (SC)",
                            TraditionalChinese = "Consignment Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.executionAgent",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Execution Agent",
                            SimplifiedChinese = "Execution Agent (SC)",
                            TraditionalChinese = "Execution Agent (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cargoDetails",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cargo Details",
                            SimplifiedChinese = "Cargo Details (SC)",
                            TraditionalChinese = "Cargo Details (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.consolidation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Consolidation",
                            SimplifiedChinese = "Consolidation (SC)",
                            TraditionalChinese = "Consolidation (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.consolidations",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Consolidations",
                            SimplifiedChinese = "Consolidations (SC)",
                            TraditionalChinese = "Consolidations (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.loadPlanId",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Load Plan ID",
                            SimplifiedChinese = "Load Plan ID (SC)",
                            TraditionalChinese = "Load Plan ID (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.originCFS",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Origin CFS",
                            SimplifiedChinese = "Origin CFS (SC)",
                            TraditionalChinese = "Origin CFS (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cfsCutoffDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CFS Cutoff Date",
                            SimplifiedChinese = "CFS Cutoff Date (SC)",
                            TraditionalChinese = "CFS Cutoff Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shippingMarks",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipping Marks",
                            SimplifiedChinese = "Shipping Marks (SC)",
                            TraditionalChinese = "Shipping Marks (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cargoDescription",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cargo Description",
                            SimplifiedChinese = "Cargo Description (SC)",
                            TraditionalChinese = "Cargo Description (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.commodity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Commodity",
                            SimplifiedChinese = "Commodity (SC)",
                            TraditionalChinese = "Commodity (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.seq",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Seq.",
                            SimplifiedChinese = "Seq. (SC)",
                            TraditionalChinese = "Seq. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reload",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Re-load",
                            SimplifiedChinese = "Re-load (SC)",
                            TraditionalChinese = "Re-load (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.confirm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Confirm",
                            SimplifiedChinese = "Confirm (SC)",
                            TraditionalChinese = "Confirm (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.unconfirm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Unconfirm",
                            SimplifiedChinese = "Unconfirm (SC)",
                            TraditionalChinese = "Unconfirm (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.attachment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Attachment",
                            SimplifiedChinese = "Attachment (SC)",
                            TraditionalChinese = "Attachment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fileName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "File Name",
                            SimplifiedChinese = "File Name (SC)",
                            TraditionalChinese = "File Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.uploadedDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Updated At",
                            SimplifiedChinese = "Updated At (SC)",
                            TraditionalChinese = "Updated At (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.hsCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "HS Code",
                            SimplifiedChinese = "HS Code (SC)",
                            TraditionalChinese = "HS Code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.netWeight",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Net Weight",
                            SimplifiedChinese = "Net Weight (SC)",
                            TraditionalChinese = "Net Weight (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.gateIn",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Gate In",
                            SimplifiedChinese = "Gate In (SC)",
                            TraditionalChinese = "Gate In (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.vesselLoad",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Vessel Load",
                            SimplifiedChinese = "Vessel Load (SC)",
                            TraditionalChinese = "Vessel Load (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.portDeparture",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Port Departure",
                            SimplifiedChinese = "Port Departure (SC)",
                            TraditionalChinese = "Port Departure (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.portArrival",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Port Arrival",
                            SimplifiedChinese = "Port Arrival (SC)",
                            TraditionalChinese = "Port Arrival (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.vesselUnload",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Vessel Unload",
                            SimplifiedChinese = "Vessel Unload (SC)",
                            TraditionalChinese = "Vessel Unload (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.gateOut",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Gate Out",
                            SimplifiedChinese = "Gate Out (SC)",
                            TraditionalChinese = "Gate Out (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.share",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Share",
                            SimplifiedChinese = "Share (SC)",
                            TraditionalChinese = "Share (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.titleUnauthorized",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Unauthorized Access!",
                            SimplifiedChinese = "Unauthorized Access! (SC)",
                            TraditionalChinese = "Unauthorized Access! (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.descriptionUnauthorized",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Oops! You don't have permission to access this page.",
                            SimplifiedChinese = "Oops! You don't have permission to access this page. (SC)",
                            TraditionalChinese = "Oops! You don't have permission to access this page. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.titleNotFound",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Sorry! Page Not Found.",
                            SimplifiedChinese = "Sorry! Page Not Found. (SC)",
                            TraditionalChinese = "Sorry! Page Not Found. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.descriptionNotFound",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Nothing to see here.",
                            SimplifiedChinese = "Nothing to see here. (SC)",
                            TraditionalChinese = "Nothing to see here. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.titleNoResult",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Sorry! No Result Found.",
                            SimplifiedChinese = "Sorry! No Result Found. (SC)",
                            TraditionalChinese = "Sorry! No Result Found. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.descriptionNoResult",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Please modify your search criteria and you will find results matching your needs.",
                            SimplifiedChinese = "Please modify your search criteria and you will find results matching your needs. (SC)",
                            TraditionalChinese = "Please modify your search criteria and you will find results matching your needs. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.titleMaintenance",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Sorry, we’re under maintenance!",
                            SimplifiedChinese = "Sorry, we’re under maintenance! (SC)",
                            TraditionalChinese = "Sorry, we’re under maintenance! (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.descriptionMaintenance1",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Hang on till we get the error fixed.",
                            SimplifiedChinese = "Hang on till we get the error fixed. (SC)",
                            TraditionalChinese = "Hang on till we get the error fixed. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.descriptionMaintenance2",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "You may also refresh the page or try again later.",
                            SimplifiedChinese = "You may also refresh the page or try again later. (SC)",
                            TraditionalChinese = "You may also refresh the page or try again later. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shareFile",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Share files",
                            SimplifiedChinese = "Share files (SC)",
                            TraditionalChinese = "Share files (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.emptyFileList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "At least one file is needed for share.",
                            SimplifiedChinese = "At least one file is needed for share. (SC)",
                            TraditionalChinese = "At least one file is needed for share. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.send",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Send",
                            SimplifiedChinese = "Send to (SC)",
                            TraditionalChinese = "Send (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.masterBillOfLadingDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Master BL Detail",
                            SimplifiedChinese = "Master BL Detail (SC)",
                            TraditionalChinese = "Master BL Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.houseBillOfLading",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "House BL",
                            SimplifiedChinese = "House BL (SC)",
                            TraditionalChinese = "House BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.lastDischarge",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Last Discharge",
                            SimplifiedChinese = "Last Discharge (SC)",
                            TraditionalChinese = "Last Discharge (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.lastLoadingPort",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Last Loading Port",
                            SimplifiedChinese = "Last Loading Port (SC)",
                            TraditionalChinese = "Last Loading Port (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.customerReferenceNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Customer Reference No.",
                            SimplifiedChinese = "Customer Reference No. (SC)",
                            TraditionalChinese = "Customer Reference No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.agentReferenceNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Agent Reference No.",
                            SimplifiedChinese = "Agent Reference No. (SC)",
                            TraditionalChinese = "Agent Reference No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipperReferenceNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipper Reference No.",
                            SimplifiedChinese = "Shipper Reference No. (SC)",
                            TraditionalChinese = "Shipper Reference No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shareFileTo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Input the email and press ENTER",
                            SimplifiedChinese = "Input the email and press ENTER (SC)",
                            TraditionalChinese = "Input the email and press ENTER (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.invalidEmail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Please enter a valid email",
                            SimplifiedChinese = "Please enter a valid email (SC)",
                            TraditionalChinese = "Please enter a valid email (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.invalidMultipleEmails",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Please input valid email, separated by a comma",
                            SimplifiedChinese = "Please input valid email, separated by a comma (SC)",
                            TraditionalChinese = "Please input valid email, separated by a comma (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.houseBLNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "House BL No.",
                            SimplifiedChinese = "House BL No. (SC)",
                            TraditionalChinese = "House BL No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.assignHouseBL",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Assign House BL",
                            SimplifiedChinese = "Assign House BL (SC)",
                            TraditionalChinese = "Assign House BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectExecutionAgent",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Select Execution Agent",
                            SimplifiedChinese = "Select Execution Agent (SC)",
                            TraditionalChinese = "Select Execution Agent (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectHouseBLNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Select House BL No.",
                            SimplifiedChinese = "Select House BL No. (SC)",
                            TraditionalChinese = "Select House BL No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.newHouseBL",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "New House BL",
                            SimplifiedChinese = "New House BL (SC)",
                            TraditionalChinese = "New House BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectedHouseBL",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Selected House BL",
                            SimplifiedChinese = "Selected House BL (SC)",
                            TraditionalChinese = "Selected House BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.removeShipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure to remove this shipment?",
                            SimplifiedChinese = "Are you sure to remove this shipment? (SC)",
                            TraditionalChinese = "Are you sure to remove this shipment? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addShipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add Shipment",
                            SimplifiedChinese = "Add Shipment (SC)",
                            TraditionalChinese = "Add Shipment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectShipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Select Shipment No.",
                            SimplifiedChinese = "Select Shipment No. (SC)",
                            TraditionalChinese = "Select Shipment No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.houseBLDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "House BL Detail",
                            SimplifiedChinese = "House BL Detail (SC)",
                            TraditionalChinese = "House BL Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.billOfLadings",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Bill Of Lading",
                            SimplifiedChinese = "Bill Of Lading (SC)",
                            TraditionalChinese = "Bill Of Lading (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.houseBL",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "House BL",
                            SimplifiedChinese = "House BL (SC)",
                            TraditionalChinese = "House BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listHouseBL",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of House BL",
                            SimplifiedChinese = "List of House BL (SC)",
                            TraditionalChinese = "List of House BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.masterBL",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Master BL",
                            SimplifiedChinese = "Master BL (SC)",
                            TraditionalChinese = "Master BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.linkToShipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Link to Shipment",
                            SimplifiedChinese = "Link to Shipment (SC)",
                            TraditionalChinese = "Link to Shipment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectedShipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Selected Shipment",
                            SimplifiedChinese = "Selected Shipment (SC)",
                            TraditionalChinese = "Selected Shipment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectAShipmentNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Select a Shipment No.",
                            SimplifiedChinese = "Select a Shipment No. (SC)",
                            TraditionalChinese = "Select a Shipment No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.titleExpired",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Expired",
                            SimplifiedChinese = "Expired (SC)",
                            TraditionalChinese = "Expired (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shareZipExpired",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Your shared zip has expired!",
                            SimplifiedChinese = "Your shared zip has expired! (SC)",
                            TraditionalChinese = "Your shared zip has expired! (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.backToHome",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Back To Home",
                            SimplifiedChinese = "Back To Home (SC)",
                            TraditionalChinese = "Back To Home (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.quicktrackAPIMessage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No Search Result",
                            SimplifiedChinese = "No Search Result (SC)",
                            TraditionalChinese = "No Search Result (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.titleInvalidSearch",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Oops! Invalid Search",
                            SimplifiedChinese = "Oops! Invalid Search (SC)",
                            TraditionalChinese = "Oops! Invalid Search (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.surveys",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Surveys",
                            SimplifiedChinese = "Surveys (SC)",
                            TraditionalChinese = "Surveys (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.survey",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Survey",
                            SimplifiedChinese = "Survey (SC)",
                            TraditionalChinese = "Survey (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfSurvey",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Surveys",
                            SimplifiedChinese = "List of Surveys (SC)",
                            TraditionalChinese = "List of Surveys (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.participants",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Participants",
                            SimplifiedChinese = "Participants (SC)",
                            TraditionalChinese = "Participants (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.publishedDate",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Published Date",
                            SimplifiedChinese = "Published Date (SC)",
                            TraditionalChinese = "Published Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.publish",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Publish",
                            SimplifiedChinese = "Publish (SC)",
                            TraditionalChinese = "Publish (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.thankYou",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Thank you",
                            SimplifiedChinese = "Thank you (SC)",
                            TraditionalChinese = "Thank you (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.backToDashboard",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Back to Dashboard",
                            SimplifiedChinese = "Back to Dashboard (SC)",
                            TraditionalChinese = "Back to Dashboard (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.thankForSubmission",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "We really appreciate your feedback. Your responses are valuable to us.",
                            SimplifiedChinese = "We really appreciate your feedback. Your responses are valuable to us. (SC)",
                            TraditionalChinese = "We really appreciate your feedback. Your responses are valuable to us. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.isSentToYou",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "is sent to you.",
                            SimplifiedChinese = "is sent to you. (SC)",
                            TraditionalChinese = "is sent to you. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.areSentToYou",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "are sent to you.",
                            SimplifiedChinese = "are sent to you. (SC)",
                            TraditionalChinese = "are sent to you. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.invalidSearch",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Invalid Search",
                            SimplifiedChinese = "Invalid Search (SC)",
                            TraditionalChinese = "Invalid Search (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.noResult",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No Result",
                            SimplifiedChinese = "No Result (SC)",
                            TraditionalChinese = "No Result (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.result",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Result",
                            SimplifiedChinese = "Result (SC)",
                            TraditionalChinese = "Result (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.billOfLading",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "House BL",
                            SimplifiedChinese = "House BL (SC)",
                            TraditionalChinese = "House BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipmentDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment Detail",
                            SimplifiedChinese = "Shipment Detail (SC)",
                            TraditionalChinese = "Shipment Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipmentActivity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment Activity",
                            SimplifiedChinese = "Shipment Activity (SC)",
                            TraditionalChinese = "Shipment Activity (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.containerDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Container Detail",
                            SimplifiedChinese = "Container Detail (SC)",
                            TraditionalChinese = "Container Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.containerActivity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Container Activity",
                            SimplifiedChinese = "Container Activity (SC)",
                            TraditionalChinese = "Container Activity (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.carrierSONo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Carrier SO No.",
                            SimplifiedChinese = "Carrier SO No. (SC)",
                            TraditionalChinese = "Carrier SO No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.carrierBLNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Carrier BL No.",
                            SimplifiedChinese = "Carrier BL No. (SC)",
                            TraditionalChinese = "Carrier BL No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.dates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Date",
                            SimplifiedChinese = "Date (SC)",
                            TraditionalChinese = "Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.appAccountResubmit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "If you wish to re-submit the request, please click Resubmit button. An email notification will be sent to you when the account opening process is completed.",
                            SimplifiedChinese = "If you wish to re-submit the request, please click Resubmit button. An email notification will be sent to you when the account opening process is completed. (SC)",
                            TraditionalChinese = "If you wish to re-submit the request, please click Resubmit button. An email notification will be sent to you when the account opening process is completed. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.resubmit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Resubmit",
                            SimplifiedChinese = "Resubmit (SC)",
                            TraditionalChinese = "Resubmit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cannotReject",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cannot reject this user",
                            SimplifiedChinese = "Cannot reject this user (SC)",
                            TraditionalChinese = "Cannot reject this user (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cannotResubmit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cannot re-submit this user",
                            SimplifiedChinese = "Cannot re-submit this user (SC)",
                            TraditionalChinese = "Cannot re-submit this user (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.emailSent",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Email has been sent",
                            SimplifiedChinese = "Email has been sent (SC)",
                            TraditionalChinese = "Email has been sent (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.emailNotSent",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Email has not been sent",
                            SimplifiedChinese = "Email has not been sent (SC)",
                            TraditionalChinese = "Email has not been sent (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipmentPortal",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment Portal",
                            SimplifiedChinese = "Shipment Portal (SC)",
                            TraditionalChinese = "Shipment Portal (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.signedOut",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Signed Out",
                            SimplifiedChinese = "Signed Out (SC)",
                            TraditionalChinese = "Signed Out (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.signedIn",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Signed In",
                            SimplifiedChinese = "Signed In (SC)",
                            TraditionalChinese = "Signed In (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.login",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Login",
                            SimplifiedChinese = "Login (SC)",
                            TraditionalChinese = "Login (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.inactiveAccount",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Inactive Account",
                            SimplifiedChinese = "Inactive Account (SC)",
                            TraditionalChinese = "Inactive Account (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.inactiveRole",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Inactive Role",
                            SimplifiedChinese = "Inactive Role (SC)",
                            TraditionalChinese = "Inactive Role (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.quickTrack",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Quick Track",
                            SimplifiedChinese = "Quick Track (SC)",
                            TraditionalChinese = "Quick Track (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.maintenance",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Maintenance",
                            SimplifiedChinese = "Maintenance (SC)",
                            TraditionalChinese = "Maintenance (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.unauthorized",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Unauthorized",
                            SimplifiedChinese = "Unauthorized (SC)",
                            TraditionalChinese = "Unauthorized (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.notFound",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Not Found",
                            SimplifiedChinese = "Not Found (SC)",
                            TraditionalChinese = "Not Found (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipFromETDDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ship From ETD Date",
                            SimplifiedChinese = "Ship From ETD Date (SC)",
                            TraditionalChinese = "Ship From ETD Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipToETADates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ship To ETA Date",
                            SimplifiedChinese = "Ship To ETA Date (SC)",
                            TraditionalChinese = "Ship To ETA Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.onBoardDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "On Board Date",
                            SimplifiedChinese = "On Board Date (SC)",
                            TraditionalChinese = "On Board Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.integrationLogs",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Integration Logs",
                            SimplifiedChinese = "Integration Logs (SC)",
                            TraditionalChinese = "Integration Logs (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfIntegrationLogs",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List Of Integration Logs",
                            SimplifiedChinese = "List Of Integration Logs (SC)",
                            TraditionalChinese = "List Of Integration Logs (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.profile",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Profile",
                            SimplifiedChinese = "Profile (SC)",
                            TraditionalChinese = "Profile (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.ediMessageType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "EDI Message Type",
                            SimplifiedChinese = "EDI Message Type (SC)",
                            TraditionalChinese = "EDI Message Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.ediMessageRef",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "EDI Message Ref",
                            SimplifiedChinese = "EDI Message Ref (SC)",
                            TraditionalChinese = "EDI Message Ref (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.postingDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Posting Date",
                            SimplifiedChinese = "Posting Date (SC)",
                            TraditionalChinese = "Posting Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.succeed",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Succeed",
                            SimplifiedChinese = "Succeed (SC)",
                            TraditionalChinese = "Succeed (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.failed",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Failed",
                            SimplifiedChinese = "Failed (SC)",
                            TraditionalChinese = "Failed (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.close",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Close",
                            SimplifiedChinese = "Close (SC)",
                            TraditionalChinese = "Close (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.response",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Response",
                            SimplifiedChinese = "Response (SC)",
                            TraditionalChinese = "Response (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.apiName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "API Name",
                            SimplifiedChinese = "API Name (SC)",
                            TraditionalChinese = "API Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.apiMessage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "API Message",
                            SimplifiedChinese = "API Message (SC)",
                            TraditionalChinese = "API Message (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.ediMessageReference",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "EDI Message Reference",
                            SimplifiedChinese = "EDI Message Reference (SC)",
                            TraditionalChinese = "EDI Message Reference (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.integrationLogDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Integration Log Detail",
                            SimplifiedChinese = "Integration Log Detail (SC)",
                            TraditionalChinese = "Integration Log Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.success",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Success",
                            SimplifiedChinese = "Success (SC)",
                            TraditionalChinese = "Success (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.copy",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Copy",
                            SimplifiedChinese = "Copy (SC)",
                            TraditionalChinese = "Copy (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.copyFrom",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Copy From",
                            SimplifiedChinese = "Copy From (SC)",
                            TraditionalChinese = "Copy From (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.copyFromBooking",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Copy From Booking",
                            SimplifiedChinese = "Copy From Booking (SC)",
                            TraditionalChinese = "Copy From Booking (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.copyItem",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Copy Item",
                            SimplifiedChinese = "Copy Item (SC)",
                            TraditionalChinese = "Copy Item (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.error",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Error",
                            SimplifiedChinese = "Error (SC)",
                            TraditionalChinese = "Error (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.copyToClipboardSuccess",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Copied to clipboard",
                            SimplifiedChinese = "Copied to clipboard (SC)",
                            TraditionalChinese = "Copied to clipboard (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.copyToClipboardError",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Copy to clipboard failed",
                            SimplifiedChinese = "Copy to clipboard failed (SC)",
                            TraditionalChinese = "Copy to clipboard failed (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.products",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Products",
                            SimplifiedChinese = "Products (SC)",
                            TraditionalChinese = "Products (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.orders",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Orders",
                            SimplifiedChinese = "Orders (SC)",
                            TraditionalChinese = "Orders (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruiseOrders",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cruise Orders",
                            SimplifiedChinese = "Cruise Orders (SC)",
                            TraditionalChinese = "Cruise Orders (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruiseOrderDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cruise Order Detail",
                            SimplifiedChinese = "Cruise Order Detail (SC)",
                            TraditionalChinese = "Cruise Order Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.deleteCruiseItemConfirm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to delete this item?",
                            SimplifiedChinese = "Are you sure you want to delete this item? (SC)",
                            TraditionalChinese = "Are you sure you want to delete this item? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.pos",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO(s)",
                            SimplifiedChinese = "PO(s) (SC)",
                            TraditionalChinese = "PO(s) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poFulfillments",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Bookings",
                            SimplifiedChinese = "Bookings (SC)",
                            TraditionalChinese = "Bookings (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bulkBooking",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Bulk Booking",
                            SimplifiedChinese = "Bulk Booking (SC)",
                            TraditionalChinese = "Bulk Booking (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.pendingApprovals",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Pending Approvals",
                            SimplifiedChinese = "Pending Approvals (SC)",
                            TraditionalChinese = "Pending Approvals (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.approvalDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Approval Detail",
                            SimplifiedChinese = "Approval Detail (SC)",
                            TraditionalChinese = "Approval Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.compliances",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Compliances",
                            SimplifiedChinese = "Compliances (SC)",
                            TraditionalChinese = "Compliances (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.purchaseOrders",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Purchase Orders",
                            SimplifiedChinese = "Purchase Orders (SC)",
                            TraditionalChinese = "Purchase Orders (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.released",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Released",
                            SimplifiedChinese = "Released (SC)",
                            TraditionalChinese = "Released (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.forwarderBookingConfirmed",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Confirmed",
                            SimplifiedChinese = "Booking Confirmed (SC)",
                            TraditionalChinese = "Booking Confirmed (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookingConfirmed",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Confirmed",
                            SimplifiedChinese = "Booking Confirmed (SC)",
                            TraditionalChinese = "Booking Confirmed (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipmentDispatch",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment Dispatch",
                            SimplifiedChinese = "Shipment Dispatch (SC)",
                            TraditionalChinese = "Shipment Dispatch (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.closed",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Closed",
                            SimplifiedChinese = "Closed (SC)",
                            TraditionalChinese = "Closed (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfPurchaseOrders",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Purchase Orders",
                            SimplifiedChinese = "List of Purchase Orders (SC)",
                            TraditionalChinese = "List of Purchase Orders (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.product",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Product",
                            SimplifiedChinese = "Product (SC)",
                            TraditionalChinese = "Product (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.party",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Party",
                            SimplifiedChinese = "Party (SC)",
                            TraditionalChinese = "Party (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.termsAndInstructions",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Terms And Instructions",
                            SimplifiedChinese = "Terms And Instructions (SC)",
                            TraditionalChinese = "Terms And Instructions (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.terms",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Terms",
                            SimplifiedChinese = "Terms (SC)",
                            TraditionalChinese = "Terms (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.handingInstructions",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Handing Instructions",
                            SimplifiedChinese = "Handing Instructions (SC)",
                            TraditionalChinese = "Handing Instructions (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.createdOn",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Created On",
                            SimplifiedChinese = "Created On (SC)",
                            TraditionalChinese = "Created On (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Number",
                            SimplifiedChinese = "PO Number (SC)",
                            TraditionalChinese = "PO Number (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Date",
                            SimplifiedChinese = "PO Date (SC)",
                            TraditionalChinese = "PO Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.owner",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Owner",
                            SimplifiedChinese = "Owner (SC)",
                            TraditionalChinese = "Owner (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.supplier",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Supplier",
                            SimplifiedChinese = "Supplier (SC)",
                            TraditionalChinese = "Supplier (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.stage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Stage",
                            SimplifiedChinese = "Stage (SC)",
                            TraditionalChinese = "Stage (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.stages",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Stages",
                            SimplifiedChinese = "Stages (SC)",
                            TraditionalChinese = "Stages (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.numberOfLineItems",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Number of Line Items",
                            SimplifiedChinese = "Number of Line Items (SC)",
                            TraditionalChinese = "Number of Line Items (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.customer",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Customer",
                            SimplifiedChinese = "Customer (SC)",
                            TraditionalChinese = "Customer (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.customerReferences",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Customer References",
                            SimplifiedChinese = "Customer References (SC)",
                            TraditionalChinese = "Customer References (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.earliestShipDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Earliest Ship Date",
                            SimplifiedChinese = "Earliest Ship Date (SC)",
                            TraditionalChinese = "Earliest Ship Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.earliestDeliveryDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Earliest Delivery Date",
                            SimplifiedChinese = "Earliest Delivery Date (SC)",
                            TraditionalChinese = "Earliest Delivery Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poIssueDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Issue Date",
                            SimplifiedChinese = "PO Issue Date (SC)",
                            TraditionalChinese = "PO Issue Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.season",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Season",
                            SimplifiedChinese = "Season (SC)",
                            TraditionalChinese = "Season (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.gateway",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Gateway",
                            SimplifiedChinese = "Gateway (SC)",
                            TraditionalChinese = "Gateway (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.expectedShipDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Expected Ship Date",
                            SimplifiedChinese = "Expected Ship Date (SC)",
                            TraditionalChinese = "Expected Ship Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.expectedDeliveryDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Expected Delivery Date",
                            SimplifiedChinese = "Expected Delivery Date (SC)",
                            TraditionalChinese = "Expected Delivery Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.latestShipDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Latest Ship Date",
                            SimplifiedChinese = "Latest Ship Date (SC)",
                            TraditionalChinese = "Latest Ship Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.latestDeliveryDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Latest Delivery Date",
                            SimplifiedChinese = "Latest Delivery Date (SC)",
                            TraditionalChinese = "Latest Delivery Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poTerms",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Terms",
                            SimplifiedChinese = "PO Terms (SC)",
                            TraditionalChinese = "PO Terms (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.carrierName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Carrier Name",
                            SimplifiedChinese = "Carrier Name (SC)",
                            TraditionalChinese = "Carrier Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.airlineName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Airline Name",
                            SimplifiedChinese = "Airline Name (SC)",
                            TraditionalChinese = "Airline Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.scacCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "SCAC Code",
                            SimplifiedChinese = "SCAC Code (SC)",
                            TraditionalChinese = "SCAC Code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.airlineCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Airline Code",
                            SimplifiedChinese = "Airline Code (SC)",
                            TraditionalChinese = "Airline Code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.mawbNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "MAWB Number",
                            SimplifiedChinese = "MAWB Number (SC)",
                            TraditionalChinese = "MAWB Number (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.theMAWBNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "The MAWB No.",
                            SimplifiedChinese = "The MAWB No. (SC)",
                            TraditionalChinese = "The MAWB No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.mawbNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "MAWB No.",
                            SimplifiedChinese = "MAWB No. (SC)",
                            TraditionalChinese = "MAWB No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.mawb",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "MAWB",
                            SimplifiedChinese = "MAWB (SC)",
                            TraditionalChinese = "MAWB (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.mawbDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "MAWB Detail",
                            SimplifiedChinese = "MAWB Detail (SC)",
                            TraditionalChinese = "MAWB Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.awb",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "AWB",
                            SimplifiedChinese = "AWB (SC)",
                            TraditionalChinese = "AWB (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.houseBillNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "House Bill No.",
                            SimplifiedChinese = "House Bill No. (SC)",
                            TraditionalChinese = "House Bill No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.uld",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "ULD",
                            SimplifiedChinese = "ULD (SC)",
                            TraditionalChinese = "ULD (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.hawb",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "HAWB",
                            SimplifiedChinese = "HAWB (SC)",
                            TraditionalChinese = "HAWB (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.hawbDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "HAWB Detail",
                            SimplifiedChinese = "HAWB Detail (SC)",
                            TraditionalChinese = "HAWB Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.houseBillDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "House Bill Detail",
                            SimplifiedChinese = "House Bill Detail (SC)",
                            TraditionalChinese = "House Bill Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfHouseBill",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of House Bill",
                            SimplifiedChinese = "List of House Bill (SC)",
                            TraditionalChinese = "List of House Bill (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.gatewayName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Gateway Name",
                            SimplifiedChinese = "Gateway Name (SC)",
                            TraditionalChinese = "Gateway Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poRemark",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Remark",
                            SimplifiedChinese = "PO Remark (SC)",
                            TraditionalChinese = "PO Remark (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipFromName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ship From Name",
                            SimplifiedChinese = "Ship From Name (SC)",
                            TraditionalChinese = "Ship From Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipToName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ship To Name",
                            SimplifiedChinese = "Ship To Name (SC)",
                            TraditionalChinese = "Ship To Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.specialHandlingInstruction",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Special Handling Instruction",
                            SimplifiedChinese = "Special Handling Instruction (SC)",
                            TraditionalChinese = "Special Handling Instruction (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.hazardousMaterialsInstruction",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Hazardous Materials Instruction",
                            SimplifiedChinese = "Hazardous Materials Instruction (SC)",
                            TraditionalChinese = "Hazardous Materials Instruction (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.lineOrder",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Line Order",
                            SimplifiedChinese = "Line Order (SC)",
                            TraditionalChinese = "Line Order (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.productCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Product Code",
                            SimplifiedChinese = "Product Code (SC)",
                            TraditionalChinese = "Product Code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.productName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Product Name",
                            SimplifiedChinese = "Product Name (SC)",
                            TraditionalChinese = "Product Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.productNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Product No.",
                            SimplifiedChinese = "Product No. (SC)",
                            TraditionalChinese = "Product No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.orderedQty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ordered Qty",
                            SimplifiedChinese = "Ordered Qty (SC)",
                            TraditionalChinese = "Ordered Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.unitUOM",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Unit UOM",
                            SimplifiedChinese = "Unit UOM (SC)",
                            TraditionalChinese = "Unit UOM (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookedQty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booked Qty",
                            SimplifiedChinese = "Booked Qty (SC)",
                            TraditionalChinese = "Booked Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.balanceQty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Balance Qty",
                            SimplifiedChinese = "Balance Qty (SC)",
                            TraditionalChinese = "Balance Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.totalUnit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Total Unit",
                            SimplifiedChinese = "Total Unit (SC)",
                            TraditionalChinese = "Total Unit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.unitQuantity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Unit Quantity",
                            SimplifiedChinese = "Unit Quantity (SC)",
                            TraditionalChinese = "Unit Quantity (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.export",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Export",
                            SimplifiedChinese = "Export (SC)",
                            TraditionalChinese = "Export (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.purchaseOrderImport",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Purchase Order Import",
                            SimplifiedChinese = "Purchase Order Import (SC)",
                            TraditionalChinese = "Purchase Order Import (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.import",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Import",
                            SimplifiedChinese = "Import (SC)",
                            TraditionalChinese = "Import (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poImportTemplate",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Import Template",
                            SimplifiedChinese = "PO Import Template (SC)",
                            TraditionalChinese = "PO Import Template (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.download",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Download",
                            SimplifiedChinese = "Download (SC)",
                            TraditionalChinese = "Download (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectImportFile",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Select Import File",
                            SimplifiedChinese = "Select Import File (SC)",
                            TraditionalChinese = "Select Import File (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poDelegation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Delegation",
                            SimplifiedChinese = "PO Delegation (SC)",
                            TraditionalChinese = "PO Delegation (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.delegate",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Delegate",
                            SimplifiedChinese = "Delegate (SC)",
                            TraditionalChinese = "Delegate (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.delegatePOSuccessfully",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Delegation is saved successfully.",
                            SimplifiedChinese = "PO Delegation is saved successfully. (SC)",
                            TraditionalChinese = "PO Delegation is saved successfully. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fulfillment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking",
                            SimplifiedChinese = "Booking (SC)",
                            TraditionalChinese = "Booking (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.purchaseOrder",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Purchase Order",
                            SimplifiedChinese = "Purchase Order (SC)",
                            TraditionalChinese = "Purchase Order (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.sheetName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Sheet Name",
                            SimplifiedChinese = "Sheet Name (SC)",
                            TraditionalChinese = "Sheet Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.row",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Row",
                            SimplifiedChinese = "Row (SC)",
                            TraditionalChinese = "Row (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.column",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Column",
                            SimplifiedChinese = "Column (SC)",
                            TraditionalChinese = "Column (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.timeout",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Timeout",
                            SimplifiedChinese = "Timeout (SC)",
                            TraditionalChinese = "Timeout (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.rows",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "row(s)",
                            SimplifiedChinese = "row(s) (SC)",
                            TraditionalChinese = "row(s) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.processing",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Processing ...",
                            SimplifiedChinese = "Processing ... (SC)",
                            TraditionalChinese = "Processing ... (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfBuyerCompliances",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Buyer Compliance",
                            SimplifiedChinese = "List of Buyer Compliance (SC)",
                            TraditionalChinese = "List of Buyer Compliance (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.complianceName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Compliance Name",
                            SimplifiedChinese = "Compliance Name (SC)",
                            TraditionalChinese = "Compliance Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.createdBy",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Created By",
                            SimplifiedChinese = "Created By (SC)",
                            TraditionalChinese = "Created By (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.complianceDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Compliance Detail",
                            SimplifiedChinese = "Compliance Detail (SC)",
                            TraditionalChinese = "Compliance Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.purchaseOrderDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Purchase Order Detail",
                            SimplifiedChinese = "Purchase Order Detail (SC)",
                            TraditionalChinese = "Purchase Order Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poProgressCheckCargoReadyDate",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Progress check Cargo Ready Date",
                            SimplifiedChinese = "PO Progress check Cargo Ready Date (SC)",
                            TraditionalChinese = "PO Progress check Cargo Ready Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.enableProgress",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Enable progress",
                            SimplifiedChinese = "Enable progress (SC)",
                            TraditionalChinese = "Enable progress (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.enable",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Enable",
                            SimplifiedChinese = "Enable (SC)",
                            TraditionalChinese = "Enable (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.notify",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Notify",
                            SimplifiedChinese = "Notify (SC)",
                            TraditionalChinese = "Notify (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.daysBeforeCargoReadyDate",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "day(s) before Ex-work Date",
                            SimplifiedChinese = "day(s) before Ex-work Date (SC)",
                            TraditionalChinese = "day(s) before Ex-work Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.pendingForProgressCheck",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Pending for progress check",
                            SimplifiedChinese = "Pending for progress check (SC)",
                            TraditionalChinese = "Pending for progress check (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.readyToBook",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ready to book",
                            SimplifiedChinese = "Ready to book (SC)",
                            TraditionalChinese = "Ready to book (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.productionStarted",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Production Started",
                            SimplifiedChinese = "Production Started (SC)",
                            TraditionalChinese = "Production Started (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.proposeDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Propose Date",
                            SimplifiedChinese = "Propose Date (SC)",
                            TraditionalChinese = "Propose Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.qcRequired",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "QC Required",
                            SimplifiedChinese = "QC Required (SC)",
                            TraditionalChinese = "QC Required (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shortShip",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Short-Ship",
                            SimplifiedChinese = "Short-Ship (SC)",
                            TraditionalChinese = "Short-Ship (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shortShips",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "shortships",
                            SimplifiedChinese = "shortships (SC)",
                            TraditionalChinese = "shortships (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.withAutoApproved",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "with auto approved.",
                            SimplifiedChinese = "with auto approved. (SC)",
                            TraditionalChinese = "with auto approved. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.splitShipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Split Shipment",
                            SimplifiedChinese = "Split Shipment (SC)",
                            TraditionalChinese = "Split Shipment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectValueToApplyAll",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Select value to apply all",
                            SimplifiedChinese = "Select value to apply all (SC)",
                            TraditionalChinese = "Select value to apply all (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.apply",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Apply",
                            SimplifiedChinese = "Apply (SC)",
                            TraditionalChinese = "Apply (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poListing",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO list",
                            SimplifiedChinese = "PO list (SC)",
                            TraditionalChinese = "PO list (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.progressCheckCargoReadyDate",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Progress Check Cargo Ready Date",
                            SimplifiedChinese = "Progress Check Cargo Ready Date (SC)",
                            TraditionalChinese = "Progress Check Cargo Ready Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.search",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Search",
                            SimplifiedChinese = "Search (SC)",
                            TraditionalChinese = "Search (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.progressCheck",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Progress Check",
                            SimplifiedChinese = "Progress Check (SC)",
                            TraditionalChinese = "Progress Check (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.compulsory",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Compulsory",
                            SimplifiedChinese = "Compulsory (SC)",
                            TraditionalChinese = "Compulsory (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.emailNotificationToSupplier",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Email notification to Supplier daily at",
                            SimplifiedChinese = "Email notification to Supplier daily at (SC)",
                            TraditionalChinese = "Email notification to Supplier daily at (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.utc8",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "UTC +8",
                            SimplifiedChinese = "UTC +8 (SC)",
                            TraditionalChinese = "UTC +8 (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addNew",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add New",
                            SimplifiedChinese = "Add New (SC)",
                            TraditionalChinese = "Add New (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poManagement",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Management",
                            SimplifiedChinese = "PO Management (SC)",
                            TraditionalChinese = "PO Management (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.generalSetting",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "General Setting",
                            SimplifiedChinese = "General Setting (SC)",
                            TraditionalChinese = "General Setting (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.effectiveDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Effective Date",
                            SimplifiedChinese = "Effective Date (SC)",
                            TraditionalChinese = "Effective Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.approvalAlertFrequency",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Approval Alert Frequency",
                            SimplifiedChinese = "Approval Alert Frequency (SC)",
                            TraditionalChinese = "Approval Alert Frequency (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.enforceCommercialInvoiceFormat",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Enforce Commercial Invoice Format",
                            SimplifiedChinese = "Enforce Commercial Invoice Format (SC)",
                            TraditionalChinese = "Enforce Commercial Invoice Format (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.enforceParkingListFormat",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Enforce Parking List Format",
                            SimplifiedChinese = "Enforce Parking List Format (SC)",
                            TraditionalChinese = "Enforce Parking List Format (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poAssignedOriginAndDestinationAgent",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Assigned Origin And Destination Agent",
                            SimplifiedChinese = "PO Assigned Origin And Destination Agent (SC)",
                            TraditionalChinese = "PO Assigned Origin And Destination Agent (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shortShipTolerancePercentage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Short-Ship Tolerance Percentage",
                            SimplifiedChinese = "Short-Ship Tolerance Percentage (SC)",
                            TraditionalChinese = "Short-Ship Tolerance Percentage (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.overShipTolerancePercentage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Over-ship Tolerance Percentage",
                            SimplifiedChinese = "Over-ship Tolerance Percentage (SC)",
                            TraditionalChinese = "Over-ship Tolerance Percentage (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poTransmissionMethod",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Transmission Method",
                            SimplifiedChinese = "PO Transmission Method (SC)",
                            TraditionalChinese = "PO Transmission Method (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poTransmissionFrequency",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Transmission Frequency",
                            SimplifiedChinese = "PO Transmission Frequency (SC)",
                            TraditionalChinese = "PO Transmission Frequency (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poTransmissionNotes",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Transmission Notes",
                            SimplifiedChinese = "PO Transmission Notes (SC)",
                            TraditionalChinese = "PO Transmission Notes (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poVerificationSetting",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Verification Setting",
                            SimplifiedChinese = "PO Verification Setting (SC)",
                            TraditionalChinese = "PO Verification Setting (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.expectedShipDateVerification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Expected Ship Date Verification",
                            SimplifiedChinese = "Expected Ship Date Verification (SC)",
                            TraditionalChinese = "Expected Ship Date Verification (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.expectedDeliveryDateVerification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Expected Delivery Date Verification",
                            SimplifiedChinese = "Expected Delivery Date Verification (SC)",
                            TraditionalChinese = "Expected Delivery Date Verification (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipperVerification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipper Verification",
                            SimplifiedChinese = "Shipper Verification (SC)",
                            TraditionalChinese = "Shipper Verification (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.consigneeVerification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Consignee Verification",
                            SimplifiedChinese = "Consignee Verification (SC)",
                            TraditionalChinese = "Consignee Verification (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipFromLocationVerification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ship From Location Verification",
                            SimplifiedChinese = "Ship From Location Verification (SC)",
                            TraditionalChinese = "Ship From Location Verification (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipToLocationVerification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ship To Location Verification",
                            SimplifiedChinese = "Ship To Location Verification (SC)",
                            TraditionalChinese = "Ship To Location Verification (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.paymentTermsVerification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Payment Terms Verification",
                            SimplifiedChinese = "Payment Terms Verification (SC)",
                            TraditionalChinese = "Payment Terms Verification (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.paymentCurrencyVerification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Payment Currency Verification",
                            SimplifiedChinese = "Payment Currency Verification (SC)",
                            TraditionalChinese = "Payment Currency Verification (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.modeOfTransportVerification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Mode Of Transport Verification",
                            SimplifiedChinese = "Mode Of Transport Verification (SC)",
                            TraditionalChinese = "Mode Of Transport Verification (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.incotermVerification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Incoterm Verification",
                            SimplifiedChinese = "Incoterm Verification (SC)",
                            TraditionalChinese = "Incoterm Verification (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.movementTypeVerification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Movement Type Verification",
                            SimplifiedChinese = "Movement Type Verification (SC)",
                            TraditionalChinese = "Movement Type Verification (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.preferredCarrierVerification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Preferred Carrier Verification",
                            SimplifiedChinese = "Preferred Carrier Verification (SC)",
                            TraditionalChinese = "Preferred Carrier Verification (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.productVerificationSetting",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Product Verification Setting",
                            SimplifiedChinese = "Product Verification Setting (SC)",
                            TraditionalChinese = "Product Verification Setting (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.productCodeVerification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Product Code Verification",
                            SimplifiedChinese = "Product Code Verification (SC)",
                            TraditionalChinese = "Product Code Verification (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.commodityVerification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Commodity Verification",
                            SimplifiedChinese = "Commodity Verification (SC)",
                            TraditionalChinese = "Commodity Verification (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.hsCodeVerification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "HS Code Verification",
                            SimplifiedChinese = "HS Code Verification (SC)",
                            TraditionalChinese = "HS Code Verification (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.countryOfOriginVerification",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Country Of Origin Verification",
                            SimplifiedChinese = "Country Of Origin Verification (SC)",
                            TraditionalChinese = "Country Of Origin Verification (TC)"
                        },
                        new
                        {
                            Key = "label.daily",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Daily",
                            SimplifiedChinese = "Daily (SC)",
                            TraditionalChinese = "Daily (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.every12Hours",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Every 12 Hours",
                            SimplifiedChinese = "Every 12 Hours (SC)",
                            TraditionalChinese = "Every 12 Hours (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.every6Hours",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Every 6 Hours",
                            SimplifiedChinese = "Every 6 Hours (SC)",
                            TraditionalChinese = "Every 6 Hours (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.every3Hours",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Every 3 Hours",
                            SimplifiedChinese = "Every 3 Hours (SC)",
                            TraditionalChinese = "Every 3 Hours (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.hourly",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Hourly",
                            SimplifiedChinese = "Hourly (SC)",
                            TraditionalChinese = "Hourly (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.noExpiration",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No Expiration",
                            SimplifiedChinese = "No Expiration (SC)",
                            TraditionalChinese = "No Expiration (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.edi",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "EDI",
                            SimplifiedChinese = "EDI (SC)",
                            TraditionalChinese = "EDI (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.excelUpload",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Excel Upload",
                            SimplifiedChinese = "Excel Upload (SC)",
                            TraditionalChinese = "Excel Upload (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.weekly",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Weekly",
                            SimplifiedChinese = "Weekly (SC)",
                            TraditionalChinese = "Weekly (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.other",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Other",
                            SimplifiedChinese = "Other (SC)",
                            TraditionalChinese = "Other (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.asPerPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "As Per PO",
                            SimplifiedChinese = "As Per PO (SC)",
                            TraditionalChinese = "As Per PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.asPerPONotAllowOverride",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "As Per PO (Not Allow Override)",
                            SimplifiedChinese = "As Per PO (Not Allow Override) (SC)",
                            TraditionalChinese = "As Per PO (Not Allow Override) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.asPerPOAllowOverride",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "As Per PO (Allow Override)",
                            SimplifiedChinese = "As Per PO (Allow Override) (SC)",
                            TraditionalChinese = "As Per PO (Allow Override) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.manualInput",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Manual Input",
                            SimplifiedChinese = "Manual Input (SC)",
                            TraditionalChinese = "Manual Input (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.asPerPODefault",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "As Per PO (Default)",
                            SimplifiedChinese = "As Per PO (Default) (SC)",
                            TraditionalChinese = "As Per PO (Default) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cargoLoadability",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cargo Loadability",
                            SimplifiedChinese = "Cargo Loadability (SC)",
                            TraditionalChinese = "Cargo Loadability (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookingTimeline",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Timeline",
                            SimplifiedChinese = "Booking Timeline (SC)",
                            TraditionalChinese = "Booking Timeline (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookingPeriod",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Period",
                            SimplifiedChinese = "Booking Period (SC)",
                            TraditionalChinese = "Booking Period (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cyEarlyBookingPeriod",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CY Early Booking Period",
                            SimplifiedChinese = "CY Early Booking Period (SC)",
                            TraditionalChinese = "CY Early Booking Period (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cyLateBookingPeriod",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CY Late Booking Period",
                            SimplifiedChinese = "CY Late Booking Period (SC)",
                            TraditionalChinese = "CY Late Booking Period (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cfsEarlyBookingPeriod",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CFS Early Booking Period",
                            SimplifiedChinese = "CFS Early Booking Period (SC)",
                            TraditionalChinese = "CFS Early Booking Period (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cfsLateBookingPeriod",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CFS Late Booking Period",
                            SimplifiedChinese = "CFS Late Booking Period (SC)",
                            TraditionalChinese = "CFS Late Booking Period (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.airEarlyBookingPeriod",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Air Early Booking Period",
                            SimplifiedChinese = "Air Early Booking Period (SC)",
                            TraditionalChinese = "Air Early Booking Period (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.airLateBookingPeriod",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Air Late Booking Period",
                            SimplifiedChinese = "Air Late Booking Period (SC)",
                            TraditionalChinese = "Air Late Booking Period (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cyEarlyBookingTimeless",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CY Early Booking Timeless",
                            SimplifiedChinese = "CY Early Booking Timeless (SC)",
                            TraditionalChinese = "CY Early Booking Timeless (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cyLateBookingTimeless",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CY Late Booking Timeless",
                            SimplifiedChinese = "CY Late Booking Timeless (SC)",
                            TraditionalChinese = "CY Late Booking Timeless (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cfsEarlyBookingTimeless",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CFS Early Booking Timeless",
                            SimplifiedChinese = "CFS Early Booking Timeless (SC)",
                            TraditionalChinese = "CFS Early Booking Timeless (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cfsLateBookingTimeless",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CFS Late Booking Timeless",
                            SimplifiedChinese = "CFS Late Booking Timeless (SC)",
                            TraditionalChinese = "CFS Late Booking Timeless (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.loadability",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Loadability",
                            SimplifiedChinese = "Loadability (SC)",
                            TraditionalChinese = "Loadability (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.equipmentType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Equipment Type",
                            SimplifiedChinese = "Equipment Type (SC)",
                            TraditionalChinese = "Equipment Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cyMinimumCBM",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CY Minimum CBM",
                            SimplifiedChinese = "CY Minimum CBM (SC)",
                            TraditionalChinese = "CY Minimum CBM (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cyMaximumCBM",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CY Maximum CBM",
                            SimplifiedChinese = "CY Maximum CBM (SC)",
                            TraditionalChinese = "CY Maximum CBM (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cfsMinimumCBM",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CFS Minimum CBM",
                            SimplifiedChinese = "CFS Minimum CBM (SC)",
                            TraditionalChinese = "CFS Minimum CBM (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cfsMaximumCBM",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CFS Maximum CBM",
                            SimplifiedChinese = "CFS Maximum CBM (SC)",
                            TraditionalChinese = "CFS Maximum CBM (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.twentyDG",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "20' Dangerous Container",
                            SimplifiedChinese = "20' Dangerous Container (SC)",
                            TraditionalChinese = "20' Dangerous Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.twentyFR",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "20' Flat Rack",
                            SimplifiedChinese = "20' Flat Rack (SC)",
                            TraditionalChinese = "20' Flat Rack (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.twentyGH",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "20' GOH Container",
                            SimplifiedChinese = "20' GOH Container (SC)",
                            TraditionalChinese = "20' GOH Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.twentyGP",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "20' Container",
                            SimplifiedChinese = "20' Container (SC)",
                            TraditionalChinese = "20' Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.twentyHC",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "20' High Cube",
                            SimplifiedChinese = "20' High Cube (SC)",
                            TraditionalChinese = "20' High Cube (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.twentyHT",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "20' HT Container",
                            SimplifiedChinese = "20' HT Container (SC)",
                            TraditionalChinese = "20' HT Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.twentyHW",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "20' High Wide",
                            SimplifiedChinese = "20' High Wide (SC)",
                            TraditionalChinese = "20' High Wide (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.twentyNOR",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "20' Reefer Dry",
                            SimplifiedChinese = "20' Reefer Dry (SC)",
                            TraditionalChinese = "20' Reefer Dry (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.twentyOS",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "20' Both Full Side Door Opening Container",
                            SimplifiedChinese = "20' Both Full Side Door Opening Container (SC)",
                            TraditionalChinese = "20' Both Full Side Door Opening Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.twentyOT",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "20' Open Top Container",
                            SimplifiedChinese = "20' Open Top Container (SC)",
                            TraditionalChinese = "20' Open Top Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.twentyRF",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "20' Reefer",
                            SimplifiedChinese = "20' Reefer (SC)",
                            TraditionalChinese = "20' Reefer (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.twentyTK",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "20' Tank Container",
                            SimplifiedChinese = "20' Tank Container (SC)",
                            TraditionalChinese = "20' Tank Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.twentyVH",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "20' Ventilated Container",
                            SimplifiedChinese = "20' Ventilated Container (SC)",
                            TraditionalChinese = "20' Ventilated Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyDG",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "40' Dangerous Conatiner",
                            SimplifiedChinese = "40' Dangerous Conatiner (SC)",
                            TraditionalChinese = "40' Dangerous Conatiner (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyFQ",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "40' High Cube Flat Rack",
                            SimplifiedChinese = "40' High Cube Flat Rack (SC)",
                            TraditionalChinese = "40' High Cube Flat Rack (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyFR",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "40' Flat Rack",
                            SimplifiedChinese = "40' Flat Rack (SC)",
                            TraditionalChinese = "40' Flat Rack (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyGH",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "40' GOH Container",
                            SimplifiedChinese = "40' GOH Container (SC)",
                            TraditionalChinese = "40' GOH Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyGP",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "40' Container",
                            SimplifiedChinese = "40' Container (SC)",
                            TraditionalChinese = "40' Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyHC",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "40' High Cube",
                            SimplifiedChinese = "40' High Cube (SC)",
                            TraditionalChinese = "40' High Cube (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyHG",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "40' HC GOH Container",
                            SimplifiedChinese = "40' HC GOH Container (SC)",
                            TraditionalChinese = "40' HC GOH Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyHNOR",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "40' HC Reefer Dry Container",
                            SimplifiedChinese = "40' HC Reefer Dry Container (SC)",
                            TraditionalChinese = "40' HC Reefer Dry Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyHO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "40' HC Open Top Container",
                            SimplifiedChinese = "40' HC Open Top Container (SC)",
                            TraditionalChinese = "40' HC Open Top Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyHQDG",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "40' HQ DG Container",
                            SimplifiedChinese = "40' HQ DG Container (SC)",
                            TraditionalChinese = "40' HQ DG Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyHR",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "40' HC Reefer Container",
                            SimplifiedChinese = "40' HC Reefer Container (SC)",
                            TraditionalChinese = "40' HC Reefer Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyHW",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "40' High Cube Pallet Wide",
                            SimplifiedChinese = "40' High Cube Pallet Wide (SC)",
                            TraditionalChinese = "40' High Cube Pallet Wide (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyNOR",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "40' Reefer Dry",
                            SimplifiedChinese = "40' Reefer Dry (SC)",
                            TraditionalChinese = "40' Reefer Dry (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyOT",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "40' Open Top Container",
                            SimplifiedChinese = "40' Open Top Container (SC)",
                            TraditionalChinese = "40' Open Top Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyPS",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "40' Plus",
                            SimplifiedChinese = "40' Plus (SC)",
                            TraditionalChinese = "40' Plus (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyRF",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "40' Reefer",
                            SimplifiedChinese = "40' Reefer (SC)",
                            TraditionalChinese = "40' Reefer (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyTK",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "40' Tank",
                            SimplifiedChinese = "40' Tank (SC)",
                            TraditionalChinese = "40' Tank (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyFiveGO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "45' GOH",
                            SimplifiedChinese = "45' GOH (SC)",
                            TraditionalChinese = "45' GOH (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyFiveHC",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "45' High Cube",
                            SimplifiedChinese = "45' High Cube (SC)",
                            TraditionalChinese = "45' High Cube (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyFiveHG",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "45' HC GOH Container",
                            SimplifiedChinese = "45' HC GOH Container (SC)",
                            TraditionalChinese = "45' HC GOH Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyFiveHT",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "45' Hard Top Container",
                            SimplifiedChinese = "45' Hard Top Container (SC)",
                            TraditionalChinese = "45' Hard Top Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyFiveHW",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "45' HC Pallet Wide",
                            SimplifiedChinese = "45' HC Pallet Wide (SC)",
                            TraditionalChinese = "45' HC Pallet Wide (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyFiveRF",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "45' Reefer Container",
                            SimplifiedChinese = "45' Reefer Container (SC)",
                            TraditionalChinese = "45' Reefer Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fourtyEightHC",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "48' HC Container",
                            SimplifiedChinese = "48' HC Container (SC)",
                            TraditionalChinese = "48' HC Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.airShipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Air Shipment",
                            SimplifiedChinese = "Air Shipment (SC)",
                            TraditionalChinese = "Air Shipment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.lclShipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "LCL",
                            SimplifiedChinese = "LCL (SC)",
                            TraditionalChinese = "LCL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.truck",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Truck",
                            SimplifiedChinese = "Truck (SC)",
                            TraditionalChinese = "Truck (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.activated",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Activated",
                            SimplifiedChinese = "Activated (SC)",
                            TraditionalChinese = "Activated (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.laterThanOrEqualTo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Value must be later than or equal to {{fieldName}}",
                            SimplifiedChinese = "Value must be later than or equal to {{fieldName}} (SC)",
                            TraditionalChinese = "Value must be later than or equal to {{fieldName}} (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.earlierThanOrEqualTo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Value must be earlier than or equal to {{fieldName}}",
                            SimplifiedChinese = "Value must be earlier than or equal to {{fieldName}} (SC)",
                            TraditionalChinese = "Value must be earlier than or equal to {{fieldName}} (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.notEarlierThan",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "{{currentFieldName}} must not earlier than the {{fieldName}}",
                            SimplifiedChinese = "{{currentFieldName}} must not earlier than the {{fieldName}} (SC)",
                            TraditionalChinese = "{{currentFieldName}} must not earlier than the {{fieldName}} (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.notLaterThan",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "{{currentFieldName}} must not later than the {{fieldName}}",
                            SimplifiedChinese = "{{currentFieldName}} must not later than the {{fieldName}} (SC)",
                            TraditionalChinese = "{{currentFieldName}} must not later than the {{fieldName}} (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.lessThan",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Value must be less than {{fieldName}}",
                            SimplifiedChinese = "Value must be less than {{fieldName}} (SC)",
                            TraditionalChinese = "Value must be less than {{fieldName}} (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.greaterThan",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Value must be greater than {{fieldName}}",
                            SimplifiedChinese = "Value must be greater than {{fieldName}} (SC)",
                            TraditionalChinese = "Value must be greater than {{fieldName}} (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.lessThanOrEqualTo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Value must not greater than {{fieldName}}",
                            SimplifiedChinese = "Value must not greater than {{fieldName}} (SC)",
                            TraditionalChinese = "Value must not greater than {{fieldName}} (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.mustNotGreaterThan",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "{{currentFieldName}} must not greater than {{fieldName}}",
                            SimplifiedChinese = "{{currentFieldName}} must not greater than {{fieldName}} (SC)",
                            TraditionalChinese = "{{currentFieldName}} must not greater than {{fieldName}} (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.mustGreaterThan",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "{{currentFieldName}} must be greater than {{fieldName}}",
                            SimplifiedChinese = "{{currentFieldName}} must be greater than {{fieldName}} (SC)",
                            TraditionalChinese = "{{currentFieldName}} must be greater than {{fieldName}} (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.alreadyExists",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "{{fieldName}} already exists",
                            SimplifiedChinese = "{{fieldName}} already exists (SC)",
                            TraditionalChinese = "{{fieldName}} already exists (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.maxLengthInput",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Max length is {{maxValue}} characters.",
                            SimplifiedChinese = "Max length is {{maxValue}} characters.",
                            TraditionalChinese = "Max length is {{maxValue}} characters.",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.fieldLessThan",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "{{fieldName}} must be less than {{maxLength}} chars.",
                            SimplifiedChinese = "Max length is {{maxValue}} characters.",
                            TraditionalChinese = "Max length is {{maxValue}} characters.",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.notTheSameNotifyParty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Company should not be the same as Notify party",
                            SimplifiedChinese = "Company should not be the same as Notify party (SC)",
                            TraditionalChinese = "Company should not be the same as Notify party (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.addressLineMustNotGreaterThan50Chars",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Address Line {{lineNumber}} must not greater than 50 characters",
                            SimplifiedChinese = "Address Line {{lineNumber}} must not greater than 50 characters (SC)",
                            TraditionalChinese = "Address Line {{lineNumber}} must not greater than 50 characters (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.contactNameMustNotGreaterThan30Chars",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Contact Name must not greater than 30 characters",
                            SimplifiedChinese = "Contact Name must not greater than 30 characters (SC)",
                            TraditionalChinese = "Contact Name must not greater than 30 characters (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.contractActivation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Contract Valid Date Range is not valid for activation.",
                            SimplifiedChinese = "Contract Valid Date Range is not valid for activation. (SC)",
                            TraditionalChinese = "Contract Valid Date Range is not valid for activation. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.cannotBeDuplicated",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "{{fieldName}} cannot be duplicated",
                            SimplifiedChinese = "{{fieldName}} cannot be duplicated (SC)",
                            TraditionalChinese = "{{fieldName}} cannot be duplicated (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shippingCompliance",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipping Compliance",
                            SimplifiedChinese = "Shipping Compliance (SC)",
                            TraditionalChinese = "Shipping Compliance (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.allowPartialShipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Allow Partial Shipment",
                            SimplifiedChinese = "Allow Partial Shipment (SC)",
                            TraditionalChinese = "Allow Partial Shipment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.allowMixedPack",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Allow Mixed Pack",
                            SimplifiedChinese = "Allow Mixed Pack (SC)",
                            TraditionalChinese = "Allow Mixed Pack (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.allowMultiplePOPerFulfillment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Allow Multiple PO Per Booking",
                            SimplifiedChinese = "Allow Multiple PO Per Booking (SC)",
                            TraditionalChinese = "Allow Multiple PO Per Booking (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.noMixedPack",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No Mixed Pack Allowed",
                            SimplifiedChinese = "No Mixed Pack Allowed (SC)",
                            TraditionalChinese = "No Mixed Pack Allowed (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.withMixedPurchaseOrder",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Mixed Pack with Mixed PO",
                            SimplifiedChinese = "Mixed Pack with Mixed PO (SC)",
                            TraditionalChinese = "Mixed Pack with Mixed PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.withMixedProduct",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Mixed Pack with Mix Product",
                            SimplifiedChinese = "Mixed Pack with Mix Product (SC)",
                            TraditionalChinese = "Mixed Pack with Mix Product (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.withMixedPurchaseOrderAndProduct",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Mixed Pack with Mixed PO and Product",
                            SimplifiedChinese = "Mixed Pack with Mixed PO and Product (SC)",
                            TraditionalChinese = "Mixed Pack with Mixed PO and Product (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.complianceSelections",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Compliance Selections",
                            SimplifiedChinese = "Compliance Selections (SC)",
                            TraditionalChinese = "Compliance Selections (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.modeOfTransportSelections",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Mode Of Transport Selections",
                            SimplifiedChinese = "Mode Of Transport Selections (SC)",
                            TraditionalChinese = "Mode Of Transport Selections (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.commoditySelections",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Commodity Selections",
                            SimplifiedChinese = "Commodity Selections (SC)",
                            TraditionalChinese = "Commodity Selections (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipFromLocationSelections",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ship From Location Selections",
                            SimplifiedChinese = "Ship From Location Selections (SC)",
                            TraditionalChinese = "Ship From Location Selections (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipToLocationSelections",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ship To Location Selections",
                            SimplifiedChinese = "Ship To Location Selections (SC)",
                            TraditionalChinese = "Ship To Location Selections (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.movementTypeSelections",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Movement Type Selections",
                            SimplifiedChinese = "Movement Type Selections (SC)",
                            TraditionalChinese = "Movement Type Selections (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.incotermSelections",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Incoterm Selections",
                            SimplifiedChinese = "Incoterm Selections (SC)",
                            TraditionalChinese = "Incoterm Selections (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.carrierSelections",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Carrier Selections",
                            SimplifiedChinese = "Carrier Selections (SC)",
                            TraditionalChinese = "Carrier Selections (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.carrierSelectionNotes",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Carrier Selection Notes",
                            SimplifiedChinese = "Carrier Selection Notes (SC)",
                            TraditionalChinese = "Carrier Selection Notes (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.sea",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Sea",
                            SimplifiedChinese = "Sea (SC)",
                            TraditionalChinese = "Sea (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.air",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Air",
                            SimplifiedChinese = "Air (SC)",
                            TraditionalChinese = "Air (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.road",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Road",
                            SimplifiedChinese = "Road (SC)",
                            TraditionalChinese = "Road (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.railway",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Railway",
                            SimplifiedChinese = "Railway (SC)",
                            TraditionalChinese = "Railway (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.multiModal",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Multi-modal",
                            SimplifiedChinese = "Multi-modal (SC)",
                            TraditionalChinese = "Multi-modal (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.generalGoods",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "General Goods",
                            SimplifiedChinese = "General Goods (SC)",
                            TraditionalChinese = "General Goods (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.garments",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Garments",
                            SimplifiedChinese = "Garments (SC)",
                            TraditionalChinese = "Garments (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.accessories",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Accessories",
                            SimplifiedChinese = "Accessories (SC)",
                            TraditionalChinese = "Accessories (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.toys",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Toys",
                            SimplifiedChinese = "Toys (SC)",
                            TraditionalChinese = "Toys (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.plasticGoods",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Plastic Goods",
                            SimplifiedChinese = "Plastic Goods (SC)",
                            TraditionalChinese = "Plastic Goods (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.household",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Household",
                            SimplifiedChinese = "Household (SC)",
                            TraditionalChinese = "Household (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.textiles",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Textiles",
                            SimplifiedChinese = "Textiles (SC)",
                            TraditionalChinese = "Textiles (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.hardware",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Hardware",
                            SimplifiedChinese = "Hardware (SC)",
                            TraditionalChinese = "Hardware (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.stationery",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Stationery",
                            SimplifiedChinese = "Stationery (SC)",
                            TraditionalChinese = "Stationery (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.houseware",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Houseware",
                            SimplifiedChinese = "Houseware (SC)",
                            TraditionalChinese = "Houseware (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.kitchenware",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Kitchenware",
                            SimplifiedChinese = "Kitchenware (SC)",
                            TraditionalChinese = "Kitchenware (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.footwear",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Footwear",
                            SimplifiedChinese = "Footwear (SC)",
                            TraditionalChinese = "Footwear (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.furniture",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Furniture",
                            SimplifiedChinese = "Furniture (SC)",
                            TraditionalChinese = "Furniture (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.electionics",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Electronics",
                            SimplifiedChinese = "Electronics (SC)",
                            TraditionalChinese = "Electronics (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.electricalGoods",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Electrical Goods",
                            SimplifiedChinese = "Electrical Goods (SC)",
                            TraditionalChinese = "Electrical Goods (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.nonPerishableGroceries",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Non-perishable Groceries",
                            SimplifiedChinese = "Non-perishable Groceries (SC)",
                            TraditionalChinese = "Non-perishable Groceries (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.internationalPortToPort",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Port-to-Port",
                            SimplifiedChinese = "Port-to-Port (SC)",
                            TraditionalChinese = "Port-to-Port (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.internationalPortToDoor",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Port-to-Door",
                            SimplifiedChinese = "Port-to-Door (SC)",
                            TraditionalChinese = "Port-to-Door (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.internationalDoorToPort",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Door-to-Port",
                            SimplifiedChinese = "Door-to-Port (SC)",
                            TraditionalChinese = "Door-to-Port (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.internationalAirportToDoor",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Airport-to-Door",
                            SimplifiedChinese = "Airport-to-Door (SC)",
                            TraditionalChinese = "Airport-to-Door (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.internationalAirportToAirport",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Airport-to-Airport",
                            SimplifiedChinese = "Airport-to-Airport (SC)",
                            TraditionalChinese = "Airport-to-Airport (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.internationalDoorToAirport",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Door-to-Airport",
                            SimplifiedChinese = "Door-to-Airport (SC)",
                            TraditionalChinese = "Door-to-Airport (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.internationalDoorToDoor",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Door-to-Door",
                            SimplifiedChinese = "Door-to-Door (SC)",
                            TraditionalChinese = "Door-to-Door (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookingValidationPolicy",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Validation Policy",
                            SimplifiedChinese = "Booking Validation Policy (SC)",
                            TraditionalChinese = "Booking Validation Policy (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookingValidationLogs",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Validation Logs",
                            SimplifiedChinese = "Booking Validation Logs (SC)",
                            TraditionalChinese = "Booking Validation Logs (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addPolicy",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add Policy",
                            SimplifiedChinese = "Add Policy (SC)",
                            TraditionalChinese = "Add Policy (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.order",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Order",
                            SimplifiedChinese = "Order (SC)",
                            TraditionalChinese = "Order (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fulfillmentAccuracy",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Accuracy",
                            SimplifiedChinese = "Booking Accuracy (SC)",
                            TraditionalChinese = "Booking Accuracy (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookingTimeless",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Timeless",
                            SimplifiedChinese = "Booking Timeless (SC)",
                            TraditionalChinese = "Booking Timeless (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.validationResult",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Validation Result",
                            SimplifiedChinese = "Validation Result (SC)",
                            TraditionalChinese = "Validation Result (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.defaultBookingValidationAction",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Default Booking Validation Action",
                            SimplifiedChinese = "Default Booking Validation Action (SC)",
                            TraditionalChinese = "Default Booking Validation Action (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.pendingForApproval",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Pending For Approval",
                            SimplifiedChinese = "Pending For Approval (SC)",
                            TraditionalChinese = "Pending For Approval (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookingAccepted",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Accepted",
                            SimplifiedChinese = "Booking Accepted (SC)",
                            TraditionalChinese = "Booking Accepted (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookingRejected",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Rejected",
                            SimplifiedChinese = "Booking Rejected (SC)",
                            TraditionalChinese = "Booking Rejected (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addNewPolicy",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add New Policy",
                            SimplifiedChinese = "Add New Policy (SC)",
                            TraditionalChinese = "Add New Policy (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.approverSetting",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Approver Setting",
                            SimplifiedChinese = "Approver Setting (SC)",
                            TraditionalChinese = "Approver Setting (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.approverUser",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Approver User",
                            SimplifiedChinese = "Approver User (SC)",
                            TraditionalChinese = "Approver User (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shortShipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Short Shipment",
                            SimplifiedChinese = "Short Shipment (SC)",
                            TraditionalChinese = "Short Shipment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.normalShipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Normal Shipment",
                            SimplifiedChinese = "Normal Shipment (SC)",
                            TraditionalChinese = "Normal Shipment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.overShipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Over Shipment",
                            SimplifiedChinese = "Over Shipment (SC)",
                            TraditionalChinese = "Over Shipment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.lightLoaded",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Light Loaded",
                            SimplifiedChinese = "Light Loaded (SC)",
                            TraditionalChinese = "Light Loaded (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.normalLoaded",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Normal Loaded",
                            SimplifiedChinese = "Normal Loaded (SC)",
                            TraditionalChinese = "Normal Loaded (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.overLoaded",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Over Loaded",
                            SimplifiedChinese = "Over Loaded (SC)",
                            TraditionalChinese = "Over Loaded (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.earlyBooking",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Early Booking",
                            SimplifiedChinese = "Early Booking (SC)",
                            TraditionalChinese = "Early Booking (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.ontimeBooking",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ontime Booking",
                            SimplifiedChinese = "Ontime Booking (SC)",
                            TraditionalChinese = "Ontime Booking (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.lateBooking",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Late Booking",
                            SimplifiedChinese = "Late Booking (SC)",
                            TraditionalChinese = "Late Booking (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.anyoneInOrganization",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Anyone in Organization",
                            SimplifiedChinese = "Anyone in Organization (SC)",
                            TraditionalChinese = "Anyone in Organization (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.specifiedApprover",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Specified Approver",
                            SimplifiedChinese = "Specified Approver (SC)",
                            TraditionalChinese = "Specified Approver (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.movementType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Movement Type",
                            SimplifiedChinese = "Movement Type (SC)",
                            TraditionalChinese = "Movement Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.logisticsServiceType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Logistics Service Type",
                            SimplifiedChinese = "Logistics Service Type (SC)",
                            TraditionalChinese = "Logistics Service Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.draft",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Draft",
                            SimplifiedChinese = "Draft (SC)",
                            TraditionalChinese = "Draft (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.customerPrefixExists",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "This Customer Prefix is already taken!",
                            SimplifiedChinese = "This Customer Prefix is already taken! (SC)",
                            TraditionalChinese = "This Customer Prefix is already taken! (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addNewCompliance",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add New Compliance",
                            SimplifiedChinese = "Add New Compliance (SC)",
                            TraditionalChinese = "Add New Compliance (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "edit.activateComplianceConfirmation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Do you want to activate status of compliance?",
                            SimplifiedChinese = "Do you want to activate status of compliance? (SC)",
                            TraditionalChinese = "Do you want to activate status of compliance? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.activate",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Activate",
                            SimplifiedChinese = "Activate (SC)",
                            TraditionalChinese = "Activate (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.deactivate",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Deactivate",
                            SimplifiedChinese = "Deactivate (SC)",
                            TraditionalChinese = "Deactivate (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.activateComplianceFailed",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "To activate Buyer Compliance, you must setup all mandatory compliance {{failedSection}}",
                            SimplifiedChinese = "To activate Buyer Compliance, you must setup all mandatory compliance {{failedSection}} (SC)",
                            TraditionalChinese = "To activate Buyer Compliance, you must setup all mandatory compliance {{failedSection}} (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cancelled",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cancelled",
                            SimplifiedChinese = "Cancelled (SC)",
                            TraditionalChinese = "Cancelled (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.itineraryIsEmpty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Itinerary is empty",
                            SimplifiedChinese = "Itinerary is empty (SC)",
                            TraditionalChinese = "Itinerary is empty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.missingCustomerPrefix",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Customer is missing Customer Prefix",
                            SimplifiedChinese = "Customer is missing Customer Prefix (SC)",
                            TraditionalChinese = "Customer is missing Customer Prefix (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.mandatoryBuyerCompliance",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "You must provide Organization and Compliance Name before saving.",
                            SimplifiedChinese = "You must provide Organization and Compliance Name before saving. (SC)",
                            TraditionalChinese = "You must provide Organization and Compliance Name before saving. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.duplicateCompliance",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Customer Compliance already exists",
                            SimplifiedChinese = "Customer Compliance already exists (SC)",
                            TraditionalChinese = "Customer Compliance already exists (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.highlightedRowsWithError",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Highlighted rows with error in {{fieldList}}.",
                            SimplifiedChinese = "Highlighted rows with error in {{fieldList}}. (SC)",
                            TraditionalChinese = "Highlighted rows with error in {{fieldList}}. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poFulfillmentDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Detail",
                            SimplifiedChinese = "Booking Detail (SC)",
                            TraditionalChinese = "Booking Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfPOFulfillments",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Booking",
                            SimplifiedChinese = "List of Booking (SC)",
                            TraditionalChinese = "List of Booking (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fulfillmentNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking No.",
                            SimplifiedChinese = "Booking No. (SC)",
                            TraditionalChinese = "Booking No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addNewPOFulfillment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add New Booking",
                            SimplifiedChinese = "Add New Booking (SC)",
                            TraditionalChinese = "Add New Booking (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.basicInfo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Basic Information",
                            SimplifiedChinese = "Basic Information (SC)",
                            TraditionalChinese = "Basic Information (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipmentInfo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment Information",
                            SimplifiedChinese = "Shipment Information (SC)",
                            TraditionalChinese = "Shipment Information (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookedBy",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booked By",
                            SimplifiedChinese = "Booked By (SC)",
                            TraditionalChinese = "Booked By (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.remarks",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Remarks",
                            SimplifiedChinese = "Remarks (SC)",
                            TraditionalChinese = "Remarks (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.isPartialShipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Is Partial Shipment",
                            SimplifiedChinese = "Is Partial Shipment (SC)",
                            TraditionalChinese = "Is Partial Shipment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.isContainDangerousGoods",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Dangerous Goods",
                            SimplifiedChinese = "Dangerous Goods (SC)",
                            TraditionalChinese = "Dangerous Goods (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.isShipperPickup",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Require Pickup?",
                            SimplifiedChinese = "Require Pickup? (SC)",
                            TraditionalChinese = "Require Pickup? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.isNotifyPartyAsConsignee",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Notify Party same as Consignee?",
                            SimplifiedChinese = "Notify Party same as Consignee? (SC)",
                            TraditionalChinese = "Notify Party same as Consignee? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.forwarderBookingRequest",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booked",
                            SimplifiedChinese = "Booked (SC)",
                            TraditionalChinese = "Booked (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cargoReceived",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cargo Received",
                            SimplifiedChinese = "Cargo Received (SC)",
                            TraditionalChinese = "Cargo Received (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.tooltipAddressLine",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Enter to input a new Address line.",
                            SimplifiedChinese = "Enter to input a new Address line. (SC)",
                            TraditionalChinese = "Enter to input a new Address line. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.customerPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Customer PO",
                            SimplifiedChinese = "Customer PO (SC)",
                            TraditionalChinese = "Customer PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addCustomerPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add Customer PO",
                            SimplifiedChinese = "Add Customer PO (SC)",
                            TraditionalChinese = "Add Customer PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.editCustomerPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit Customer PO",
                            SimplifiedChinese = "Edit Customer PO (SC)",
                            TraditionalChinese = "Edit Customer PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectCustomerProduct",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Select Customer Product",
                            SimplifiedChinese = "Select Customer Product (SC)",
                            TraditionalChinese = "Select Customer Product (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.inputRequiredInformation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Input Required Information",
                            SimplifiedChinese = "Input Required Information (SC)",
                            TraditionalChinese = "Input Required Information (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.dragAndDrop",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Drag and drop",
                            SimplifiedChinese = "Drag and drop (SC)",
                            TraditionalChinese = "Drag and drop (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.enterValueToFilter",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Enter a value to filter",
                            SimplifiedChinese = "Enter a value to filter(SC)",
                            TraditionalChinese = "Enter a value to filter(TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.enterPONumberToSearch",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Enter PO number to search",
                            SimplifiedChinese = "Enter PO number to search (SC)",
                            TraditionalChinese = "Enter PO number to search (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.enterTextToSearch",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Enter text to search",
                            SimplifiedChinese = "Enter text to search (SC)",
                            TraditionalChinese = "Enter text to search (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.countryOfOrigin",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Country Of Origin",
                            SimplifiedChinese = "Country Of Origin (SC)",
                            TraditionalChinese = "Country Of Origin (TC)"
                        },
                        new
                        {
                            Key = "label.packageUOM",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Package UOM",
                            SimplifiedChinese = "Package UOM (SC)",
                            TraditionalChinese = "Package UOM (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.each",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Each",
                            SimplifiedChinese = "Each (SC)",
                            TraditionalChinese = "Each (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.each(plural)",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Eaches",
                            SimplifiedChinese = "Eaches (SC)",
                            TraditionalChinese = "Eaches (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.pair",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Pair",
                            SimplifiedChinese = "Pair (SC)",
                            TraditionalChinese = "Pair (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.pair(plural)",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Pairs",
                            SimplifiedChinese = "Pairs (SC)",
                            TraditionalChinese = "Pairs (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.carton",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Carton",
                            SimplifiedChinese = "Carton (SC)",
                            TraditionalChinese = "Carton (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cartons",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cartons",
                            SimplifiedChinese = "Cartons (SC)",
                            TraditionalChinese = "Cartons (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.carton(plural)",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cartons",
                            SimplifiedChinese = "Cartons (SC)",
                            TraditionalChinese = "Cartons (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.package",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Package",
                            SimplifiedChinese = "Package (SC)",
                            TraditionalChinese = "Package (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.packages",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Packages",
                            SimplifiedChinese = "Packages (SC)",
                            TraditionalChinese = "Packages (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.package(plural)",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Packages",
                            SimplifiedChinese = "Packages (SC)",
                            TraditionalChinese = "Packages (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.piece",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Piece",
                            SimplifiedChinese = "Piece (SC)",
                            TraditionalChinese = "Piece (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.pieces",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Pieces",
                            SimplifiedChinese = "Pieces (SC)",
                            TraditionalChinese = "Pieces (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.piece(plural)",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Pieces",
                            SimplifiedChinese = "Pieces (SC)",
                            TraditionalChinese = "Pieces (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.pallet",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Pallet",
                            SimplifiedChinese = "Pallet (SC)",
                            TraditionalChinese = "Pallet (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.pallet(plural)",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Pallets",
                            SimplifiedChinese = "Pallets (SC)",
                            TraditionalChinese = "Pallets (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bag",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Bag",
                            SimplifiedChinese = "Bag (SC)",
                            TraditionalChinese = "Bag (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bag(plural)",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Bags",
                            SimplifiedChinese = "Bags (SC)",
                            TraditionalChinese = "Bags (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.box",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Box",
                            SimplifiedChinese = "Box (SC)",
                            TraditionalChinese = "Box (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.box(plural)",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Boxes",
                            SimplifiedChinese = "Boxes (SC)",
                            TraditionalChinese = "Boxes (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.tube",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Tube",
                            SimplifiedChinese = "Tube (SC)",
                            TraditionalChinese = "Tube (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.tube(plural)",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Tubes",
                            SimplifiedChinese = "Tubes (SC)",
                            TraditionalChinese = "Tubes (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.roll",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Roll",
                            SimplifiedChinese = "Roll (SC)",
                            TraditionalChinese = "Roll (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.roll(plural)",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Rolls",
                            SimplifiedChinese = "Rolls (SC)",
                            TraditionalChinese = "Rolls (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bundle",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Bundle",
                            SimplifiedChinese = "Bundle (SC)",
                            TraditionalChinese = "Bundle (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bundle(plural)",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Bundles",
                            SimplifiedChinese = "Bundles (SC)",
                            TraditionalChinese = "Bundles (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.set",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Set",
                            SimplifiedChinese = "Set (SC)",
                            TraditionalChinese = "Set (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.set(plural)",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Sets",
                            SimplifiedChinese = "Sets (SC)",
                            TraditionalChinese = "Sets (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.can",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Can",
                            SimplifiedChinese = "Can (SC)",
                            TraditionalChinese = "Can (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.can(plural)",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cans",
                            SimplifiedChinese = "Cans (SC)",
                            TraditionalChinese = "Cans (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.case",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Case",
                            SimplifiedChinese = "Case (SC)",
                            TraditionalChinese = "Case (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.case(plural)",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cases",
                            SimplifiedChinese = "Cases (SC)",
                            TraditionalChinese = "Cases (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.crate",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Crate",
                            SimplifiedChinese = "Crate (SC)",
                            TraditionalChinese = "Crate (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.crate(plural)",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Crates",
                            SimplifiedChinese = "Crates (SC)",
                            TraditionalChinese = "Crates (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cylinder",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cylinder",
                            SimplifiedChinese = "Cylinder (SC)",
                            TraditionalChinese = "Cylinder (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cylinder(plural)",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cylinders",
                            SimplifiedChinese = "Cylinders (SC)",
                            TraditionalChinese = "Cylinders (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.drum",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Drum",
                            SimplifiedChinese = "Drum (SC)",
                            TraditionalChinese = "Drum (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.drum(plural)",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Drums",
                            SimplifiedChinese = "Drums (SC)",
                            TraditionalChinese = "Drums (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.pipe",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Pipe",
                            SimplifiedChinese = "Pipe (SC)",
                            TraditionalChinese = "Pipe (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.pipe(plural)",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Pipes",
                            SimplifiedChinese = "Pipes (SC)",
                            TraditionalChinese = "Pipes (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.loadRefNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Load Ref. No.",
                            SimplifiedChinese = "Load Ref. No. (SC)",
                            TraditionalChinese = "Load Ref. No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.plannedVolumeCBM",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Planned Volume (CBM)",
                            SimplifiedChinese = "Planned Volume (CBM) (SC)",
                            TraditionalChinese = "Planned Volume (CBM) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.plannedNetWeightKGS",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Planned Net Weight (KGS)",
                            SimplifiedChinese = "Planned Net Weight (KGS) (SC)",
                            TraditionalChinese = "Planned Net Weight (KGS) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.plannedGrossWeightKGS",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Planned Gross Weight (KGS)",
                            SimplifiedChinese = "Planned Gross Weight (KGS) (SC)",
                            TraditionalChinese = "Planned Gross Weight (KGS) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.plannedPackageQty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Planned Package Qty",
                            SimplifiedChinese = "Planned Package Qty (SC)",
                            TraditionalChinese = "Planned Package Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.load",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Load",
                            SimplifiedChinese = "Load (SC)",
                            TraditionalChinese = "Load (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add",
                            SimplifiedChinese = "Add (SC)",
                            TraditionalChinese = "Add (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addCargoDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add Cargo Details",
                            SimplifiedChinese = "Add Cargo Details (SC)",
                            TraditionalChinese = "Add Cargo Details (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.viewCargoDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "View Cargo Details",
                            SimplifiedChinese = "View Cargo Details (SC)",
                            TraditionalChinese = "View Cargo Details (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.packageDescription",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Package Description",
                            SimplifiedChinese = "Package Description (SC)",
                            TraditionalChinese = "Package Description (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.packageQty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Package Qty",
                            SimplifiedChinese = "Package Qty (SC)",
                            TraditionalChinese = "Package Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.totalUnitQty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Total Unit Qty",
                            SimplifiedChinese = "Total Unit Qty (SC)",
                            TraditionalChinese = "Total Unit Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.packageDimension",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Package Dimension",
                            SimplifiedChinese = "Package Dimension (SC)",
                            TraditionalChinese = "Package Dimension (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.packageDimensionInCm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Package Dimension (CM)",
                            SimplifiedChinese = "Package Dimension (CM) (SC)",
                            TraditionalChinese = "Package Dimension (CM) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.height",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Height",
                            SimplifiedChinese = "Height (SC)",
                            TraditionalChinese = "Height (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.width",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Width",
                            SimplifiedChinese = "Width (SC)",
                            TraditionalChinese = "Width (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.length",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Length",
                            SimplifiedChinese = "Length (SC)",
                            TraditionalChinese = "Length (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.unit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Unit",
                            SimplifiedChinese = "Unit (SC)",
                            TraditionalChinese = "Unit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.loadedQty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Loaded Qty",
                            SimplifiedChinese = "Loaded Qty (SC)",
                            TraditionalChinese = "Loaded Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.openQty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Open Qty",
                            SimplifiedChinese = "Open Qty (SC)",
                            TraditionalChinese = "Open Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.loads",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Loads",
                            SimplifiedChinese = "Loads (SC)",
                            TraditionalChinese = "Loads (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.loadPlan",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Load Plan",
                            SimplifiedChinese = "Load Plan (SC)",
                            TraditionalChinese = "Load Plan (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.po",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO",
                            SimplifiedChinese = "PO (SC)",
                            TraditionalChinese = "PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.start",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Start",
                            SimplifiedChinese = "Start (SC)",
                            TraditionalChinese = "Start (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.end",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "End",
                            SimplifiedChinese = "End (SC)",
                            TraditionalChinese = "End (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.qtyPerCarton",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Qty per Carton",
                            SimplifiedChinese = "Qty per Carton (SC)",
                            TraditionalChinese = "Qty per Carton (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.startCarton",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Start Carton",
                            SimplifiedChinese = "Start Carton (SC)",
                            TraditionalChinese = "Start Carton (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.endCarton",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "End Carton",
                            SimplifiedChinese = "End Carton (SC)",
                            TraditionalChinese = "End Carton (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.unitQty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Unit Qty",
                            SimplifiedChinese = "Unit Qty (SC)",
                            TraditionalChinese = "Unit Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.netWeightPerCarton",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Net Weight per Carton",
                            SimplifiedChinese = "Net Weight per Carton (SC)",
                            TraditionalChinese = "Net Weight per Carton (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.grossWeightPerCarton",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Gross Weight per Carton",
                            SimplifiedChinese = "Gross Weight per Carton (SC)",
                            TraditionalChinese = "Gross Weight per Carton (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addLoadDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add Load Details",
                            SimplifiedChinese = "Add Load Details (SC)",
                            TraditionalChinese = "Add Load Details (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.loadDetails",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Load Details",
                            SimplifiedChinese = "Load Details (SC)",
                            TraditionalChinese = "Load Details (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.amend",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Amend",
                            SimplifiedChinese = "Amend (SC)",
                            TraditionalChinese = "Amend (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.book",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Book",
                            SimplifiedChinese = "Book (SC)",
                            TraditionalChinese = "Book (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.submit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Submit",
                            SimplifiedChinese = "Submit (SC)",
                            TraditionalChinese = "Submit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "confirmation.cancelPOFulfillment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to cancel Booking?",
                            SimplifiedChinese = "Are you sure you want to cancel Booking? (SC)",
                            TraditionalChinese = "Are you sure you want to cancel Booking? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "confirmation.cancelSuccessfully",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cancel successfully!",
                            SimplifiedChinese = "Cancel successfully! (SC)",
                            TraditionalChinese = "Cancel successfully! (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "confirmation.cancelUnsuccessfully",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cancel unsuccessfully, please try again!",
                            SimplifiedChinese = "Cancel unsuccessfully, please try again! (SC)",
                            TraditionalChinese = "Cancel unsuccessfully, please try again! (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "confirmation.organizationNameLongerThan50",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Organization Name should be less than 50 characters to submit the booking successfully. Are you sure to save this long name?",
                            SimplifiedChinese = "Organization Name should be less than 50 characters to submit the booking successfully. Are you sure to save this long name? (SC)",
                            TraditionalChinese = "Organization Name should be less than 50 characters to submit the booking successfully. Are you sure to save this long name? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "confirmation.activateUser",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to activate this user {{email}}?",
                            SimplifiedChinese = "Are you sure you want to activate this user {{email}}? (SC)",
                            TraditionalChinese = "Are you sure you want to activate this user {{email}}? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "confirmation.deactivateUser",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to deactivate this user {{email}}?",
                            SimplifiedChinese = "Are you sure you want to deactivate this user {{email}}? (SC)",
                            TraditionalChinese = "Are you sure you want to deactivate this user {{email}}? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "confirmation.deleteUser",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to delete this user {{email}}?",
                            SimplifiedChinese = "Are you sure you want to delete this user {{email}}? (SC)",
                            TraditionalChinese = "Are you sure you want to delete this user {{email}}? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.createBookingRequestSuccessfully",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Send Booking successfully!",
                            SimplifiedChinese = "Send Booking successfully! (SC)",
                            TraditionalChinese = "Send Booking successfully! (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.validateCreateBookingRequestFailed",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "You must provide all mandatory data in General, Contact, Customer PO and Load before booking.",
                            SimplifiedChinese = "You must provide all mandatory data in General, Contact, Customer PO and Load before booking. (SC)",
                            TraditionalChinese = "You must provide all mandatory data in General, Contact, Customer PO and Load before booking. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.validateCreateBulkBookingRequestFailed",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "You must provide all mandatory data in General, Contact and Cargo Details before booking.",
                            SimplifiedChinese = "You must provide all mandatory data in General, Contact and Cargo Details before booking. (SC)",
                            TraditionalChinese = "You must provide all mandatory data in General, Contact and Cargo Details before booking. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.createBookingRequestFailed",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Send Booking unsuccessfully, please try again!",
                            SimplifiedChinese = "Send Booking unsuccessfully, please try again! (SC)",
                            TraditionalChinese = "Send Booking unsuccessfully, please try again! (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.createBookingRequestFailed.pOBookedFully",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO has been fully booked.",
                            SimplifiedChinese = "PO has been fully booked. (SC)",
                            TraditionalChinese = "PO has been fully booked. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.createBookingRequestFailed.unauthorized",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "You are not authorized to book the PO.",
                            SimplifiedChinese = "You are not authorized to book the PO. (SC)",
                            TraditionalChinese = "You are not authorized to book the PO. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.createBookingRequestFailed.allocatedPOQtyIncorrect",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Allocated PO quantity is incorrect for booking.",
                            SimplifiedChinese = "Allocated PO quantity is incorrect for booking. (SC)",
                            TraditionalChinese = "Allocated PO quantity is incorrect for booking. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.poBeingRevised",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO being revised.",
                            SimplifiedChinese = "PO being revised. (SC)",
                            TraditionalChinese = "PO being revised. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.poBeingRevisedLevel1",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO being revised, you need to cancel the booking and place a new one.",
                            SimplifiedChinese = "PO being revised, you need to cancel the booking and place a new one. (SC)",
                            TraditionalChinese = "PO being revised, you need to cancel the booking and place a new one. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.poBeingRevisedLevel2",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO being revised, you need to refresh the PO items.",
                            SimplifiedChinese = "PO being revised, you need to refresh the PO items. (SC)",
                            TraditionalChinese = "PO being revised, you need to refresh the PO items. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.poBeingRevisedLevel3",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO being revised, you may wish to amend the booking.",
                            SimplifiedChinese = "PO being revised, you may wish to amend the booking. (SC)",
                            TraditionalChinese = "PO being revised, you may wish to amend the booking. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.pendingForApprovalResult",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Your Booking needs approval from Customer.",
                            SimplifiedChinese = "Your Booking needs approval from Customer. (SC)",
                            TraditionalChinese = "Your Booking needs approval from Customer. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.bookingRejectedResult",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Your Booking has been rejected.",
                            SimplifiedChinese = "Your Booking has been rejected. (SC)",
                            TraditionalChinese = "Your Booking has been rejected. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.bookingAcceptedResult",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Your Booking has been accepted.",
                            SimplifiedChinese = "Your Booking has been accepted. (SC)",
                            TraditionalChinese = "Your Booking has been accepted. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.oneCargoDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "You must provide cargo detail line for all loads before generating documents.",
                            SimplifiedChinese = "You must provide cargo detail line for all loads before generating documents. (SC)",
                            TraditionalChinese = "You must provide cargo detail line for all loads before generating documents. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.cargoDetailNotEqualQty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "In cargo details, total unit quantity and total package quantity are not matched with planning. Do you want to override load planning?",
                            SimplifiedChinese = "In cargo details, total unit quantity and total package quantity are not matched with planning. Do you want to override load planning? (SC)",
                            TraditionalChinese = "In cargo details, total unit quantity and total package quantity are not matched with planning. Do you want to override load planning? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.drapCustomerProductToLeft",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Drag customer product into the left equipment.",
                            SimplifiedChinese = "Drag customer product into the left equipment. (SC)",
                            TraditionalChinese = "Drag customer product into the left equipment. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.oneLoadDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "You must provide load detail line for all loads before Plan To Ship.",
                            SimplifiedChinese = "You must provide load detail line for all loads before Plan To Ship. (SC)",
                            TraditionalChinese = "You must provide load detail line for all loads before Plan To Ship. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.loadDetailNotEqualQty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "The container loaded quantity is not match with the booking.",
                            SimplifiedChinese = "The container loaded quantity is not match with the booking. (SC)",
                            TraditionalChinese = "The container loaded quantity is not match with the booking. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.provideContainerNoBeforeeSI",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "You must provide Container Number before Plan To Ship.",
                            SimplifiedChinese = "You must provide Container Number before Plan To Ship. (SC)",
                            TraditionalChinese = "You must provide Container Number before Plan To Ship. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.productDetails",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Product Details",
                            SimplifiedChinese = "Product Details (SC)",
                            TraditionalChinese = "Product Details (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.minOrderQty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Min. Order Qty",
                            SimplifiedChinese = "Min. Order Qty (SC)",
                            TraditionalChinese = "Min. Order Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.unitPrice",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Unit Price",
                            SimplifiedChinese = "Unit Price (SC)",
                            TraditionalChinese = "Unit Price (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.productFamily",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Product Family",
                            SimplifiedChinese = "Product Family (SC)",
                            TraditionalChinese = "Product Family (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.referenceNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Reference Number",
                            SimplifiedChinese = "Reference Number (SC)",
                            TraditionalChinese = "Reference Number (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.productRemark",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Product Remark",
                            SimplifiedChinese = "Product Remark (SC)",
                            TraditionalChinese = "Product Remark (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.minPackageQty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Min. Package Qty",
                            SimplifiedChinese = "Min. Package Qty (SC)",
                            TraditionalChinese = "Min. Package Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.currency",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Currency",
                            SimplifiedChinese = "Currency (SC)",
                            TraditionalChinese = "Currency (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.supplierProductCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Supplier Product Code",
                            SimplifiedChinese = "Supplier Product Code (SC)",
                            TraditionalChinese = "Supplier Product Code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.descriptionOfGoods",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Description Of Goods",
                            SimplifiedChinese = "Description Of Goods (SC)",
                            TraditionalChinese = "Description Of Goods (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.packagingInstruction",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Packaging Instruction",
                            SimplifiedChinese = "Packaging Instruction (SC)",
                            TraditionalChinese = "Packaging Instruction (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poFulfillmentException",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Exception",
                            SimplifiedChinese = "Booking Exception (SC)",
                            TraditionalChinese = "Booking Exception (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipmentException",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment Exception",
                            SimplifiedChinese = "Shipment Exception (SC)",
                            TraditionalChinese = "Shipment Exception (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.consignmentException",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Consignment Exception",
                            SimplifiedChinese = "Consignment Exception (SC)",
                            TraditionalChinese = "Consignment Exception (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.containerException",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Container Exception",
                            SimplifiedChinese = "Container Exception (SC)",
                            TraditionalChinese = "Container Exception (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.consolidationException",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Consolidation Exception",
                            SimplifiedChinese = "Consolidation Exception (SC)",
                            TraditionalChinese = "Consolidation Exception (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.transaction",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Transaction",
                            SimplifiedChinese = "Transaction (SC)",
                            TraditionalChinese = "Transaction (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reference",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Reference",
                            SimplifiedChinese = "Reference (SC)",
                            TraditionalChinese = "Reference (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.exceptionType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Exception Type",
                            SimplifiedChinese = "Exception Type (SC)",
                            TraditionalChinese = "Exception Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.requestBy",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Request By",
                            SimplifiedChinese = "Request By (SC)",
                            TraditionalChinese = "Request By (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.dueOn",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Due On",
                            SimplifiedChinese = "Due On (SC)",
                            TraditionalChinese = "Due On (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.approved",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Approved",
                            SimplifiedChinese = "Approved (SC)",
                            TraditionalChinese = "Approved (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.overdue",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Overdue",
                            SimplifiedChinese = "Overdue (SC)",
                            TraditionalChinese = "Overdue (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfApprovals",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List Of Approvals",
                            SimplifiedChinese = "List Of Approvals (SC)",
                            TraditionalChinese = "List Of Approvals (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.respondBy",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Respond By",
                            SimplifiedChinese = "Respond By (SC)",
                            TraditionalChinese = "Respond By (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.buyerApprovals",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Buyer Approvals",
                            SimplifiedChinese = "Buyer Approvals (SC)",
                            TraditionalChinese = "Buyer Approvals (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.buyerApprovalsDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Buyer Approval Detail",
                            SimplifiedChinese = "Buyer Approval Detail (SC)",
                            TraditionalChinese = "Buyer Approval Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reject",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Reject",
                            SimplifiedChinese = "Reject (SC)",
                            TraditionalChinese = "Reject (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.approve",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Approve",
                            SimplifiedChinese = "Approve (SC)",
                            TraditionalChinese = "Approve (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.exceptionActivity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Exception Activity",
                            SimplifiedChinese = "Exception Activity (SC)",
                            TraditionalChinese = "Exception Activity (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.severity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Severity",
                            SimplifiedChinese = "Severity (SC)",
                            TraditionalChinese = "Severity (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.approver",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Approver",
                            SimplifiedChinese = "Approver (SC)",
                            TraditionalChinese = "Approver (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.responseOn",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Response On",
                            SimplifiedChinese = "Response On (SC)",
                            TraditionalChinese = "Response On (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.requester",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Requester",
                            SimplifiedChinese = "Requester (SC)",
                            TraditionalChinese = "Requester (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poFulfillmentSummary",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Summary",
                            SimplifiedChinese = "Booking Summary (SC)",
                            TraditionalChinese = "Booking Summary (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poFulfillmentNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Number",
                            SimplifiedChinese = "Booking Number (SC)",
                            TraditionalChinese = "Booking Number (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookBy",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Book By",
                            SimplifiedChinese = "Book By (SC)",
                            TraditionalChinese = "Book By (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.confirmApprovePOFF",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to approve this Booking?",
                            SimplifiedChinese = "Are you sure you want to approve this Booking? (SC)",
                            TraditionalChinese = "Are you sure you want to approve this Booking? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.cannotApprovePOFF",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "There is a data issue, you cannot approve this Booking",
                            SimplifiedChinese = "There is a data issue, you cannot approve this Booking (SC)",
                            TraditionalChinese = "There is a data issue, you cannot approve this Booking (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.bookingHasApproved",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking has been approved successfully",
                            SimplifiedChinese = "Booking has been approved successfully (SC)",
                            TraditionalChinese = "Booking has been approved successfully (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.deleteLoadDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to delete this Load Details?",
                            SimplifiedChinese = "Are you sure you want to delete this Load Details? (SC)",
                            TraditionalChinese = "Are you sure you want to delete this Load Details? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.invalidRejectPOFF",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Exception Detail is required for rejection",
                            SimplifiedChinese = "Exception Detail is required for rejection (SC)",
                            TraditionalChinese = "Exception Detail is required for rejection (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.confirmRejectPOFF",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to reject this Booking?",
                            SimplifiedChinese = "Are you sure you want to reject this Booking? (SC)",
                            TraditionalChinese = "Are you sure you want to reject this Booking? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.bookingHasRejected",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking has been rejected successfully",
                            SimplifiedChinese = "Booking has been rejected successfully (SC)",
                            TraditionalChinese = "Booking has been rejected successfully (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.exceptionDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Exception Detail",
                            SimplifiedChinese = "Exception Detail (SC)",
                            TraditionalChinese = "Exception Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.confirmed",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Confirmed",
                            SimplifiedChinese = "Confirmed (SC)",
                            TraditionalChinese = "Confirmed (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.savePOFulfillmentItineraryFailed",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "You should provide at least one Itinerary record for saving.",
                            SimplifiedChinese = "You should provide at least one Itinerary record for saving. (SC)",
                            TraditionalChinese = "You should provide at least one Itinerary record for saving. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.amendPOFulfillmentFailed",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Amend unsuccessfully, please try again!",
                            SimplifiedChinese = "You should provide at least one Itinerary record for saving. (SC)",
                            TraditionalChinese = "You should provide at least one Itinerary record for saving. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.amendPOFulfillmentSuccessfully",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Amend successfully!",
                            SimplifiedChinese = "Amend successfully! (SC)",
                            TraditionalChinese = "Amend successfully! (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "confirmation.amendPOFulfillment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to amend Booking?",
                            SimplifiedChinese = "Are you sure you want to amend Booking? (SC)",
                            TraditionalChinese = "Are you sure you want to amend Booking? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "confirmation.amendPOFulfillmentHasPendingApproval",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "This booking has pending approval and it will be cancelled after your amendment. Are you sure you want to amend?",
                            SimplifiedChinese = "This booking has pending approval and it will be cancelled after your amendment. Are you sure you want to amend? (SC)",
                            TraditionalChinese = "This booking has pending approval and it will be cancelled after your amendment. Are you sure you want to amend? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.planToShip",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Plan To Ship",
                            SimplifiedChinese = "Plan To Ship (SC)",
                            TraditionalChinese = "Plan To Ship (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.readyToShip",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ready To Ship",
                            SimplifiedChinese = "Ready To Ship (SC)",
                            TraditionalChinese = "Ready To Ship (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.planToShip",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "You must provide Cargo Details and Load Details info before Plan to Ship",
                            SimplifiedChinese = "You must provide Cargo Details and Load Details info before Plan to Ship (SC)",
                            TraditionalChinese = "You must provide Cargo Details and Load Details info before Plan to Ship (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fulfillmentNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking No.",
                            SimplifiedChinese = "Booking No. (SC)",
                            TraditionalChinese = "Booking No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipFromLocation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ship From Location",
                            SimplifiedChinese = "Ship From Location (SC)",
                            TraditionalChinese = "Ship From Location (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipToLocation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ship To Location",
                            SimplifiedChinese = "Ship To Location (SC)",
                            TraditionalChinese = "Ship To Location (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.dispatch",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Dispatch",
                            SimplifiedChinese = "Dispatch (SC)",
                            TraditionalChinese = "Dispatch (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.delivered",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Delivered",
                            SimplifiedChinese = "Delivered (SC)",
                            TraditionalChinese = "Delivered (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.confirmDispatchPOFF",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to close this booking?",
                            SimplifiedChinese = "Are you sure you want to close this booking? (SC)",
                            TraditionalChinese = "Are you sure you want to close this booking? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.upload",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Upload",
                            SimplifiedChinese = "Upload (SC)",
                            TraditionalChinese = "Upload (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.uploadFile",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Upload File",
                            SimplifiedChinese = "Upload File (SC)",
                            TraditionalChinese = "Upload File(TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shippingOrderForm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipping Order Form",
                            SimplifiedChinese = "Shipping Order Form (SC)",
                            TraditionalChinese = "Shipping Order Form (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.commercialInvoice",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Commercial Invoice",
                            SimplifiedChinese = "Commercial Invoice (SC)",
                            TraditionalChinese = "Commercial Invoice (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.packingList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Packing List",
                            SimplifiedChinese = "Packing List (SC)",
                            TraditionalChinese = "Packing List (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.oceanBillOfLading",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ocean BL",
                            SimplifiedChinese = "Ocean BL (SC)",
                            TraditionalChinese = "Ocean BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.billOfLadingDocType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "House BL",
                            SimplifiedChinese = "House BL (SC)",
                            TraditionalChinese = "House BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.manifest",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Manifest",
                            SimplifiedChinese = "Manifest (SC)",
                            TraditionalChinese = "Manifest (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.others",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Others",
                            SimplifiedChinese = "Others (SC)",
                            TraditionalChinese = "Others (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.msds",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "MSDS",
                            SimplifiedChinese = "MSDS (SC)",
                            TraditionalChinese = "MSDS (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.deleteAttachmentConfirmation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to delete this attachment?",
                            SimplifiedChinese = "Are you sure you want to delete this attachment? (SC)",
                            TraditionalChinese = "Are you sure you want to delete this attachment? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.sort",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Sort",
                            SimplifiedChinese = "Sort (SC)",
                            TraditionalChinese = "Sort (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.loadMoreActivities",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Load more activities",
                            SimplifiedChinese = "Load more activities (SC)",
                            TraditionalChinese = "Load more activities (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.filterBy",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Filter by",
                            SimplifiedChinese = "Filter by (SC)",
                            TraditionalChinese = "Filter by (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.noActivity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No activities available.",
                            SimplifiedChinese = "No activities available. (SC)",
                            TraditionalChinese = "No activities available. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfBookingValidationLogs",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Booking Validation Logs",
                            SimplifiedChinese = "List of Booking Validation Logs (SC)",
                            TraditionalChinese = "List of Booking Validation Logs (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poFulfillment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking",
                            SimplifiedChinese = "Booking (SC)",
                            TraditionalChinese = "Booking (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.submittedBy",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Submitted By",
                            SimplifiedChinese = "Submitted By (SC)",
                            TraditionalChinese = "Submitted By (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.submissionDatetime",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Submission Datetime",
                            SimplifiedChinese = "Submission Datetime (SC)",
                            TraditionalChinese = "Submission Datetime (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.notAddNewShipperConsigneeAsPerPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "You cannot add Shipper or Consignee as it comes from Customer PO.",
                            SimplifiedChinese = "You cannot add Shipper or Consignee as it comes from Customer PO. (SC)",
                            TraditionalChinese = "You cannot add Shipper or Consignee as it comes from Customer PO. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.delegation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Delegation",
                            SimplifiedChinese = "Delegation (SC)",
                            TraditionalChinese = "Delegation (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.needToPlanToShipAgain",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Plan to ship again to update your documents.",
                            SimplifiedChinese = "Plan to ship again to update your documents. (SC)",
                            TraditionalChinese = "Plan to ship again to update your documents. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.planToShipSuccessfully",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Data has been saved successfully.",
                            SimplifiedChinese = "Data has been saved successfully. (SC)",
                            TraditionalChinese = "Data has been saved successfully. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.shareFileSuccessfully",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "You have shared documents successfully.",
                            SimplifiedChinese = "You have shared documents successfully. (SC)",
                            TraditionalChinese = "You have shared documents successfully. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.shareFileUnsuccessfully",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Share documents unsuccessfully, please try again!",
                            SimplifiedChinese = "Share documents unsuccessfully, please try again! (SC)",
                            TraditionalChinese = "Share documents unsuccessfully, please try again! (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.every24Hours",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Every 24 Hours",
                            SimplifiedChinese = "Every 24 Hours (SC)",
                            TraditionalChinese = "Every 24 Hours (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.every36Hours",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Every 36 Hours",
                            SimplifiedChinese = "Every 36 Hours (SC)",
                            TraditionalChinese = "Every 36 Hours (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.every48Hours",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Every 48 Hours",
                            SimplifiedChinese = "Every 48 Hours (SC)",
                            TraditionalChinese = "Every 48 Hours (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.every72Hours",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Every 72 Hours",
                            SimplifiedChinese = "Every 72 Hours (SC)",
                            TraditionalChinese = "Every 72 Hours (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.approvalDuration",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Approval Duration",
                            SimplifiedChinese = "Approval Duration (SC)",
                            TraditionalChinese = "Approval Duration (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.approvalSetting",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Approval Setting",
                            SimplifiedChinese = "Approval Setting (SC)",
                            TraditionalChinese = "Approval Setting (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.policySetting",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Policy Setting",
                            SimplifiedChinese = "Policy Setting (SC)",
                            TraditionalChinese = "Policy Setting (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poDelationNote",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Please enter the organization to receive the delegation and the user you wish to notify.",
                            SimplifiedChinese = "Please enter the organization to receive the delegation and the user you wish to notify. (SC)",
                            TraditionalChinese = "Please enter the organization to receive the delegation and the user you wish to notify. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.require",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Require",
                            SimplifiedChinese = "Require (SC)",
                            TraditionalChinese = "Require (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.notRequire",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Not Require",
                            SimplifiedChinese = "Not Require (SC)",
                            TraditionalChinese = "Not Require (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.any",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Any",
                            SimplifiedChinese = "Any (SC)",
                            TraditionalChinese = "Any (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.submissionDatetimes",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Submission Datetime",
                            SimplifiedChinese = "Submission Datetime (SC)",
                            TraditionalChinese = "Submission Datetime (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.policyID",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Policy ID",
                            SimplifiedChinese = "Policy ID (SC)",
                            TraditionalChinese = "Policy ID (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.actionType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Action Type",
                            SimplifiedChinese = "Action Type (SC)",
                            TraditionalChinese = "Action Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.failReason",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Fail Reason",
                            SimplifiedChinese = "Fail Reason (SC)",
                            TraditionalChinese = "Fail Reason (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.actionDatetimes",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Action Datetime",
                            SimplifiedChinese = "Action Datetime (SC)",
                            TraditionalChinese = "Action Datetime (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.actionActivity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Action Activity",
                            SimplifiedChinese = "Action Activity (SC)",
                            TraditionalChinese = "Action Activity (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.policyJSON",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Policy JSON",
                            SimplifiedChinese = "Policy JSON (SC)",
                            TraditionalChinese = "Policy JSON (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fulfillmentJSON",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking JSON",
                            SimplifiedChinese = "Booking JSON (SC)",
                            TraditionalChinese = "Booking JSON (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookingValidationLogDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Validation Log Detail",
                            SimplifiedChinese = "Booking Validation Log Detail (SC)",
                            TraditionalChinese = "Booking Validation Log Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "placeholder.cancelPOReason",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Please enter a reason to cancel Booking",
                            SimplifiedChinese = "Please enter a reason to cancel Booking (SC)",
                            TraditionalChinese = "Please enter a reason to cancel Booking (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.fileTypeInvalid",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "File type is invalid",
                            SimplifiedChinese = "File type is invalid (SC)",
                            TraditionalChinese = "File type is invalid (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.deleteCargoDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to delete this Cargo Details?",
                            SimplifiedChinese = "Are you sure you want to delete this Cargo Details? (SC)",
                            TraditionalChinese = "Are you sure you want to delete this Cargo Details? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.creatingPOFFRequiredCustomerNotification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Customer is required for creating Booking.",
                            SimplifiedChinese = "Customer is required for creating Booking. (SC)",
                            TraditionalChinese = "Customer is required for creating Booking. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.attachmentDeleteSuccessfullyNotification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "The attachment has been deleted successfully",
                            SimplifiedChinese = "The attachment has been deleted successfully. (SC)",
                            TraditionalChinese = "The attachment has been deleted successfully. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.consignmentDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Consignment Detail",
                            SimplifiedChinese = "Consignment Detail (SC)",
                            TraditionalChinese = "Consignment Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.consignmentNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Consignment No.",
                            SimplifiedChinese = "Consignment No. (SC)",
                            TraditionalChinese = "Consignment No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.consignmentId",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Consignment ID",
                            SimplifiedChinese = "Consignment ID (SC)",
                            TraditionalChinese = "Consignment ID (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfConsignments",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Consignments",
                            SimplifiedChinese = "List of Consignments (SC)",
                            TraditionalChinese = "List of Consignments (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.agentReferenceNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Agent Reference Number",
                            SimplifiedChinese = "Agent Reference Number (SC)",
                            TraditionalChinese = "Agent Reference Number (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.confirmedDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Confirmed Date",
                            SimplifiedChinese = "Confirmed Date (SC)",
                            TraditionalChinese = "Confirmed Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.consignmentMasterBL",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Consignment Master BL",
                            SimplifiedChinese = "Consignment Master BL (SC)",
                            TraditionalChinese = "Consignment Master BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.consignmentHouseBL",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Consignment House BL",
                            SimplifiedChinese = "Consignment House BL (SC)",
                            TraditionalChinese = "Consignment House BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipperName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipper Name",
                            SimplifiedChinese = "Shipper Name (SC)",
                            TraditionalChinese = "Shipper Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.consigneeName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Consignee Name",
                            SimplifiedChinese = "Consignee Name (SC)",
                            TraditionalChinese = "Consignee Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addItinerary",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add Itinerary",
                            SimplifiedChinese = "Add Itinerary (SC)",
                            TraditionalChinese = "Add Itinerary (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.editItinerary",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit Itinerary",
                            SimplifiedChinese = "Edit Itinerary (SC)",
                            TraditionalChinese = "Edit Itinerary (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.itineraryDetails",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Itinerary Details",
                            SimplifiedChinese = "Itinerary Details (SC)",
                            TraditionalChinese = "Itinerary Details (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.itineraryDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Itinerary Detail",
                            SimplifiedChinese = "Itinerary Detail (SC)",
                            TraditionalChinese = "Itinerary Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.carrierSCAC",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Carrier SCAC",
                            SimplifiedChinese = "Carrier SCAC (SC)",
                            TraditionalChinese = "Carrier SCAC (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.voyage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Voyage",
                            SimplifiedChinese = "Voyage (SC)",
                            TraditionalChinese = "Voyage (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.flightNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Flight No.",
                            SimplifiedChinese = "Flight No. (SC)",
                            TraditionalChinese = "Flight No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.roadFreightRef",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Road Freight Ref.",
                            SimplifiedChinese = "Road Freight Ref. (SC)",
                            TraditionalChinese = "Road Freight Ref. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.oceanFreight",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ocean Freight",
                            SimplifiedChinese = "Ocean Freight (SC)",
                            TraditionalChinese = "Ocean Freight (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.airFreight",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Air Freight",
                            SimplifiedChinese = "Air Freight (SC)",
                            TraditionalChinese = "Air Freight (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.roadFreight",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Road Freight",
                            SimplifiedChinese = "Road Freight (SC)",
                            TraditionalChinese = "Road Freight (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.deleteLastItineraryNotification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "You cannot delete the last itinerary of consignment.",
                            SimplifiedChinese = "You cannot delete the last itinerary of consignment. (SC)",
                            TraditionalChinese = "You cannot delete the last itinerary of consignment. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.deleteItineraryConfirmation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to delete this Itinerary?",
                            SimplifiedChinese = "Are you sure you want to delete this Itinerary? (SC)",
                            TraditionalChinese = "Are you sure you want to delete this Itinerary? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.itineraryDeleteSuccessfullyNotification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Itinerary has been deleted successfully.",
                            SimplifiedChinese = "Itinerary has been deleted successfully. (SC)",
                            TraditionalChinese = "Itinerary has been deleted successfully. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.monthlyTop5OceanVolumeByOrigin",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Top 5 Shipment Volume By Origin",
                            SimplifiedChinese = "Top 5 Shipment Volume By Origin (SC)",
                            TraditionalChinese = "Top 5 Shipment Volume By Origin (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.monthlyTop5OceanVolumeByDestination",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Top 5 Shipment Volume By Destination",
                            SimplifiedChinese = "Top 5 Shipment Volume By Destination (SC)",
                            TraditionalChinese = "Top 5 Shipment Volume By Destination (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.noDataAvailable",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No data available",
                            SimplifiedChinese = "No data available (SC)",
                            TraditionalChinese = "No data available (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.thisWeekShipments",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipments in",
                            SimplifiedChinese = "Shipments in (SC)",
                            TraditionalChinese = "Shipments in (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.thisWeekCustomerPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO issued in",
                            SimplifiedChinese = "PO issued in (SC)",
                            TraditionalChinese = "PO issued in (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.thisWeekOceanVolume",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment Volume in",
                            SimplifiedChinese = "Shipment Volume in (SC)",
                            TraditionalChinese = "Shipment Volume in (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.lastWeek",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Last Week",
                            SimplifiedChinese = "Last Week (SC)",
                            TraditionalChinese = "Last Week (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.monthlyTopOceanVolumeByMovement",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment Volume By Movement",
                            SimplifiedChinese = "Shipment Volume By Movement (SC)",
                            TraditionalChinese = "Shipment Volume By Movement (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.monthlyTopOceanVolumeByServiceType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment Volume By Service Type",
                            SimplifiedChinese = "Shipment Volume By Service Type (SC)",
                            TraditionalChinese = "Shipment Volume By Service Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.lastSevenDays",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Last 7 days",
                            SimplifiedChinese = "Last 7 days (SC)",
                            TraditionalChinese = "Last 7 days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.lastMonth",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Last month",
                            SimplifiedChinese = "Last month (SC)",
                            TraditionalChinese = "Last month (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.to",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "to",
                            SimplifiedChinese = "to (SC)",
                            TraditionalChinese = "to (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.deactivateComplianceConfirmation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to deactivate Compliance?",
                            SimplifiedChinese = "Are you sure you want to deactivate Compliance? (SC)",
                            TraditionalChinese = "Are you sure you want to deactivate Compliance? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.noOfShipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No. of Shipment",
                            SimplifiedChinese = "No. of Shipment (SC)",
                            TraditionalChinese = "No. of Shipment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.volumeCBM",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Volume (CBM)",
                            SimplifiedChinese = "Volume (CBM) (SC)",
                            TraditionalChinese = "Volume (CBM) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.grossWeightKGS",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Gross Weight (KGS)",
                            SimplifiedChinese = "Gross Weight (KGS) (SC)",
                            TraditionalChinese = "Gross Weight (KGS) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.top10ShipperThisWeek",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Top 10 Shipper in",
                            SimplifiedChinese = "Top 10 Shipper in (SC)",
                            TraditionalChinese = "Top 10 Shipper in (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.top10ConsigneeThisWeek",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Top 10 Consignee in",
                            SimplifiedChinese = "Top 10 Consignee in (SC)",
                            TraditionalChinese = "Top 10 Consignee in (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.top10CarrierThisWeek",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Top 10 Carrier in",
                            SimplifiedChinese = "Top 10 Carrier in (SC)",
                            TraditionalChinese = "Top 10 Carrier in (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addConsignment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add Consignment",
                            SimplifiedChinese = "Add Consignment (SC)",
                            TraditionalChinese = "Add Consignment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.agentReference",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Agent Reference",
                            SimplifiedChinese = "Agent Reference (SC)",
                            TraditionalChinese = "Agent Reference (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.agentAssignmentMethod",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Agent Assignment Method",
                            SimplifiedChinese = "Agent Assignment Method (SC)",
                            TraditionalChinese = "Agent Assignment Method (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bySystem",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "By System",
                            SimplifiedChinese = "By System",
                            TraditionalChinese = "By System",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.byPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "By PO",
                            SimplifiedChinese = "By PO",
                            TraditionalChinese = "By PO",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.seaAgents",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Sea Agents",
                            SimplifiedChinese = "Sea Agents",
                            TraditionalChinese = "Sea Agents",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.airAgents",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Air Agents",
                            SimplifiedChinese = "Air Agents",
                            TraditionalChinese = "Air Agents",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.deleteCustomerPOConfirm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to delete this product?",
                            SimplifiedChinese = "Are you sure you want to delete this product? (SC)",
                            TraditionalChinese = "Are you sure you want to delete this product? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.deleteActivityConfirm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to delete this Activity?",
                            SimplifiedChinese = "Are you sure you want to delete this Activity? (SC)",
                            TraditionalChinese = "Are you sure you want to delete this Activity? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.deleteActivitySuccessfully",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Activity has been deleted successfully",
                            SimplifiedChinese = "Activity has been deleted successfully (SC)",
                            TraditionalChinese = "Activity has been deleted successfully (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.eventCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Event Code",
                            SimplifiedChinese = "Event Code (SC)",
                            TraditionalChinese = "Event Code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addActivity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add Activity",
                            SimplifiedChinese = "Add Activity (SC)",
                            TraditionalChinese = "Add Activity (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.editActivity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit Activity",
                            SimplifiedChinese = "Edit Activity (SC)",
                            TraditionalChinese = "Edit Activity (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.activityDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Activity Detail",
                            SimplifiedChinese = "Activity Detail (SC)",
                            TraditionalChinese = "Activity Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.activityType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Activity Type",
                            SimplifiedChinese = "Activity Type (SC)",
                            TraditionalChinese = "Activity Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.exceptionManagement",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Exception Management",
                            SimplifiedChinese = "Exception Management (SC)",
                            TraditionalChinese = "Exception Management (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.resolve",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Resolve",
                            SimplifiedChinese = "Resolve (SC)",
                            TraditionalChinese = "Resolve (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.resolution",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Resolution",
                            SimplifiedChinese = "Resolution (SC)",
                            TraditionalChinese = "Resolution (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.resolveDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Resolved Date",
                            SimplifiedChinese = "Resolved Date (SC)",
                            TraditionalChinese = "Resolved Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.deleteConsignmentConfirm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to delete this consignment?",
                            SimplifiedChinese = "Are you sure you want to delete this consignment? (SC)",
                            TraditionalChinese = "Are you sure you want to delete this consignment? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.deleteConsignmentSuccessfully",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Consignment has been deleted successfully",
                            SimplifiedChinese = "Consignment has been deleted successfully (SC)",
                            TraditionalChinese = "Consignment has been deleted successfully (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.activityHasBeenAddedSuccessfully",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Activity has been added successfully",
                            SimplifiedChinese = "Activity has been added successfully (SC)",
                            TraditionalChinese = "Activity has been added successfully (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.agentAssignment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Agent Assignment",
                            SimplifiedChinese = "Agent Assignment (SC)",
                            TraditionalChinese = "Agent Assignment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.assignment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Assignment",
                            SimplifiedChinese = "Assignment (SC)",
                            TraditionalChinese = "Assignment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.autoCreateShipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Auto-create Shipment",
                            SimplifiedChinese = "Auto-create Shipment (SC)",
                            TraditionalChinese = "Auto-create Shipment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.origin",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Origin",
                            SimplifiedChinese = "Origin (SC)",
                            TraditionalChinese = "Origin (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.destination",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Destination",
                            SimplifiedChinese = "Destination (SC)",
                            TraditionalChinese = "Destination (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.default",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Default",
                            SimplifiedChinese = "Default (SC)",
                            TraditionalChinese = "Default (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.port",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Port",
                            SimplifiedChinese = "Port (SC)",
                            TraditionalChinese = "Port (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.agentType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Agent Type",
                            SimplifiedChinese = "Agent Type (SC)",
                            TraditionalChinese = "Agent Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.assignAgentMissingContactEmail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cannot assign Agent missing Contact Email",
                            SimplifiedChinese = "Cannot assign Agent missing Contact Email (SC)",
                            TraditionalChinese = "Cannot assign Agent missing Contact Email (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.agentDuplicate",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Type, Country and Port cannot be duplicated in Agent assignment",
                            SimplifiedChinese = "Type, Country and Port cannot be duplicated in Agent assignment (SC)",
                            TraditionalChinese = "Type, Country and Port cannot be duplicated in Agent assignment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.moreThanOriginOrDestinationAgent",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Please select only one Origin Agent and one Destination Agent",
                            SimplifiedChinese = "Please select only one Origin Agent and one Destination Agent (SC)",
                            TraditionalChinese = "Please select only one Origin Agent and one Destination Agent (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.moreThanLCLLoad",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CFS booking only allow one LCL Load.",
                            SimplifiedChinese = "CFS booking only allow one LCL Load. (SC)",
                            TraditionalChinese = "CFS booking only allow one LCL Load. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.invalidEquipmentType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Equipment type not align with CFS/CY movement.",
                            SimplifiedChinese = "Equipment type not align with CFS/CY movement. (SC)",
                            TraditionalChinese = "Equipment type not align with CFS/CY movement. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.equipmentTypeNotAlignWithPOContainer",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Equipment type not align with PO container.",
                            SimplifiedChinese = "Equipment type not align with PO container. (SC)",
                            TraditionalChinese = "Equipment type not align with PO container. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.notAllowPartialShipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Not allow partial shipment, please select all items of PO.",
                            SimplifiedChinese = "Not allow partial shipment, please select all items of PO. (SC)",
                            TraditionalChinese = "Not allow partial shipment, please select all items of PO. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.confirmItinerarySuccessfully",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Itinerary has been confirmed successfully.",
                            SimplifiedChinese = "Itinerary has been confirmed successfully. (SC)",
                            TraditionalChinese = "Itinerary has been confirmed successfully. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.loadedPackageQty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Loaded Package Qty",
                            SimplifiedChinese = "Loaded Package Qty (SC)",
                            TraditionalChinese = "Loaded Package Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.containerNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Container Number",
                            SimplifiedChinese = "Container Number (SC)",
                            TraditionalChinese = "Container Number (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.sealNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Seal Number",
                            SimplifiedChinese = "Seal Number (SC)",
                            TraditionalChinese = "Seal Number (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.provideGrossWeight",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Provide Gross Weight",
                            SimplifiedChinese = "Provide Gross Weight (SC)",
                            TraditionalChinese = "Provide Gross Weight (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.containerDetails",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Container Details",
                            SimplifiedChinese = "Container Details (SC)",
                            TraditionalChinese = "Container Details (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.consolidationDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Consolidation Detail",
                            SimplifiedChinese = "Consolidation Detail (SC)",
                            TraditionalChinese = "Consolidation Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addNewConsolidation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add Consolidation",
                            SimplifiedChinese = "Add Consolidation (SC)",
                            TraditionalChinese = "Add Consolidation (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.tareWeight",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Tare Weight",
                            SimplifiedChinese = "Tare Weight (SC)",
                            TraditionalChinese = "Tare Weight (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.duplicateContainer",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Container No. cannot be duplicated.",
                            SimplifiedChinese = "Container No. cannot be duplicated. (SC)",
                            TraditionalChinese = "Container No. cannot be duplicated. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.updateContainer",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Update Container",
                            SimplifiedChinese = "Update Container (SC)",
                            TraditionalChinese = "Update Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.update",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Update",
                            SimplifiedChinese = "Update (SC)",
                            TraditionalChinese = "Update (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.containerNumberInvalid",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Container No. is invalid",
                            SimplifiedChinese = "Container No. is invalid (SC)",
                            TraditionalChinese = "Container No. is invalid (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.newUser",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "New User",
                            SimplifiedChinese = "New User (SC)",
                            TraditionalChinese = "New User (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.userAccountInfo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "User Account Info",
                            SimplifiedChinese = "User Account Info (SC)",
                            TraditionalChinese = "User Account Info (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.emailAddress",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Email Address",
                            SimplifiedChinese = "Email Address (SC)",
                            TraditionalChinese = "Email Address (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.duplicateUser",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Email Address already exists.",
                            SimplifiedChinese = "Email Address already exists. (SC)",
                            TraditionalChinese = "Email Address already exists. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.isAdmin",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Is Admin",
                            SimplifiedChinese = "Is Admin (SC)",
                            TraditionalChinese = "Is Admin (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.addAdminUser",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure to set user {{emailAddress}} as Organization Admin user?",
                            SimplifiedChinese = "Are you sure to set user {{emailAddress}} as Organization Admin user? (SC)",
                            TraditionalChinese = "Are you sure to set user {{emailAddress}} as Organization Admin user? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.oneOrgAdmin",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "There is only one Organization Admin at the same time.",
                            SimplifiedChinese = "There is only one Organization Admin at the same time. (SC)",
                            TraditionalChinese = "There is only one Organization Admin at the same time. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.removeAdminUser",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure to remove Organization Admin of user {{emailAddress}}?",
                            SimplifiedChinese = "Are you sure to remove Organization Admin of user {{emailAddress}}?  (SC)",
                            TraditionalChinese = "Are you sure to remove Organization Admin of user {{emailAddress}}? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.removeUser",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to delete this user?",
                            SimplifiedChinese = "Are you sure you want to delete this user? (SC)",
                            TraditionalChinese = "Are you sure you want to delete this user? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.waitForConfirm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Wait For Confirm",
                            SimplifiedChinese = "Wait For Confirm (SC)",
                            TraditionalChinese = "Wait For Confirm (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.myOrganization",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "My Organization",
                            SimplifiedChinese = "My Organization (SC)",
                            TraditionalChinese = "My Organization (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.bookedPackageGreaterThanZero",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booked Package must be greater than zero.",
                            SimplifiedChinese = "Booked Package must be greater than zero. (SC)",
                            TraditionalChinese = "Booked Package must be greater than zero. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.resend",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Resend",
                            SimplifiedChinese = "Resend (SC)",
                            TraditionalChinese = "Resend (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.connection",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Connection",
                            SimplifiedChinese = "Connection (SC)",
                            TraditionalChinese = "Connection (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.supplierRelationship",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Supplier Relationship",
                            SimplifiedChinese = "Supplier Relationship (SC)",
                            TraditionalChinese = "Supplier Relationship (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.websiteDomain",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Website Domain",
                            SimplifiedChinese = "Website Domain (SC)",
                            TraditionalChinese = "Website Domain (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.resendConnection",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure to resend connection request to {{orgName}}?",
                            SimplifiedChinese = "Are you sure to resend connection request to {{orgName}}? (SC)",
                            TraditionalChinese = "Are you sure to resend connection request to {{orgName}}? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addRelationship",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add Relationship",
                            SimplifiedChinese = "Add Relationship (SC)",
                            TraditionalChinese = "Add Relationship (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reset",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Reset",
                            SimplifiedChinese = "Reset (SC)",
                            TraditionalChinese = "Reset (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.newSupplier",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "New Supplier",
                            SimplifiedChinese = "New Supplier (SC)",
                            TraditionalChinese = "New Supplier (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectSupplier",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Select Supplier",
                            SimplifiedChinese = "Select Supplier (SC)",
                            TraditionalChinese = "Select Supplier (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectSupplierHint",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Search an organization by name or website domain or phone number",
                            SimplifiedChinese = "Search an organization by name or website domain or phone number (SC)",
                            TraditionalChinese = "Search an organization by name or website domain or phone number (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.cannotUpdateEdisonCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "ediSON Instance, ediSON Company Code cannot be updated as Organization is in relationship",
                            SimplifiedChinese = "ediSON Instance, ediSON Company Code cannot be updated as Organization is in relationship (SC)",
                            TraditionalChinese = "ediSON Instance, ediSON Company Code cannot be updated as Organization is in relationship (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectedSupplierDuplicated",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "This Organization is already added to relationship.",
                            SimplifiedChinese = "Typing organization name and select one from suggestion (SC)",
                            TraditionalChinese = "This Organization is already added to relationship. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.confirmAddSupplierToAffiliates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Do you want to add supplier relationship to all affiliate organization?",
                            SimplifiedChinese = "Do you want to add supplier relationship to all affiliate organization? (SC)",
                            TraditionalChinese = "Do you want to add supplier relationship to all affiliate organization? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.acceptConnectPrincipal",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Do you accept to connect with {{principalOrgName}}?",
                            SimplifiedChinese = "Do you accept to connect with {{principalOrgName}}? (SC)",
                            TraditionalChinese = "Do you accept to connect with {{principalOrgName}}? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reports",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Reports",
                            SimplifiedChinese = "Reports (SC)",
                            TraditionalChinese = "Reports (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectedSupplier",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Selected Supplier",
                            SimplifiedChinese = "Selected Supplier (SC)",
                            TraditionalChinese = "Selected Supplier (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectedSupplierHasNoAdmin",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "The selected Supplier has no Admin user yet. We will create new one with",
                            SimplifiedChinese = "The selected Supplier has no Admin user yet. We will create new one with (SC)",
                            TraditionalChinese = "The selected Supplier has no Admin user yet. We will create new one with (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfReports",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Reports",
                            SimplifiedChinese = "List of Reports (SC)",
                            TraditionalChinese = "List of Reports (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reportGroup",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Report Group",
                            SimplifiedChinese = "Report Group (SC)",
                            TraditionalChinese = "Report Group (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reportName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Report Name",
                            SimplifiedChinese = "Report Name (SC)",
                            TraditionalChinese = "Report Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reportDescription",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Report Description",
                            SimplifiedChinese = "Report Description (SC)",
                            TraditionalChinese = "Report Description (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.lastRunTime",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Last Run Time",
                            SimplifiedChinese = "Last Run Time (SC)",
                            TraditionalChinese = "Last Run Time (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reportGrantPermission",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Grant Permission",
                            SimplifiedChinese = "Grant Permission (SC)",
                            TraditionalChinese = "Grant Permission (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reportSelectOrganizations",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Specific Organizations",
                            SimplifiedChinese = "Specific Organizations (SC)",
                            TraditionalChinese = "Specific Organizations (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reportSelectRoles",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "User Role can see the report",
                            SimplifiedChinese = "User Role can see the report (SC)",
                            TraditionalChinese = "User Role can see the report (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reportGrantInternal",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Admin/Internal user",
                            SimplifiedChinese = "Admin/Internal user (SC)",
                            TraditionalChinese = "Admin/Internal user (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reportGrantPrincipal",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Principal user",
                            SimplifiedChinese = "Principal user (SC)",
                            TraditionalChinese = "Principal user (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reportGrantShipper",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipper user",
                            SimplifiedChinese = "Shipper user (SC)",
                            TraditionalChinese = "Shipper user (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reportGrantAgent",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Agent user",
                            SimplifiedChinese = "Agent user (SC)",
                            TraditionalChinese = "Agent user (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reportGrantWarehouse",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Warehouse user",
                            SimplifiedChinese = "Warehouse user (SC)",
                            TraditionalChinese = "Warehouse user (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reportGrantPermissionAction",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Grant permission",
                            SimplifiedChinese = "Grant permission (SC)",
                            TraditionalChinese = "Grant permission (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reportPrincipalSelectionHint",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Please select a customer to view reports.",
                            SimplifiedChinese = "Please select a customer to view reports. (SC)",
                            TraditionalChinese = "Please select a customer to view reports. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.shipFromName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ship From",
                            SimplifiedChinese = "Ship From (SC)",
                            TraditionalChinese = "Ship From (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.shipToName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ship To",
                            SimplifiedChinese = "Ship To (SC)",
                            TraditionalChinese = "Ship To (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.receiptPort",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Receipt Port",
                            SimplifiedChinese = "Receipt Port (SC)",
                            TraditionalChinese = "Receipt Port (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.deliveryPort",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Delivery Port",
                            SimplifiedChinese = "Delivery Port (SC)",
                            TraditionalChinese = "Delivery Port (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.carrier",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Carrier",
                            SimplifiedChinese = "Carrier (SC)",
                            TraditionalChinese = "Carrier (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectPOs",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Select PO",
                            SimplifiedChinese = "Select PO (SC)",
                            TraditionalChinese = "Select PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.pOList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of PO",
                            SimplifiedChinese = "List of PO (SC)",
                            TraditionalChinese = "List of PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectedPOList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Selected PO",
                            SimplifiedChinese = "Selected PO (SC)",
                            TraditionalChinese = "Selected PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.itemsCount",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Item(s)",
                            SimplifiedChinese = "Item(s) (SC)",
                            TraditionalChinese = "Item(s) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.netWeightKGS",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Net Weight (KGS)",
                            SimplifiedChinese = "Net Weight (KGS) (SC)",
                            TraditionalChinese = "Net Weight (KGS) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookedPackage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booked Package",
                            SimplifiedChinese = "Booked Package (SC)",
                            TraditionalChinese = "Booked Package (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.hoverBookedPackageCheckboxHint",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "System will calculate booked package, volume and gross weight",
                            SimplifiedChinese = "System will calculate booked package, volume and gross weight (SC)",
                            TraditionalChinese = "System will calculate booked package, volume and gross weight (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.hoverBookedPackageIconHint",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booked Package is calculated by system automatically",
                            SimplifiedChinese = "Booked Package is calculated by system automatically (SC)",
                            TraditionalChinese = "Booked Package is calculated by system automatically (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.hoverVolumeIconHint",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Volume is calculated by system automatically",
                            SimplifiedChinese = "Volume is calculated by system automatically (SC)",
                            TraditionalChinese = "Volume is calculated by system automatically (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.hoverGrossWeightIconHint",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Gross Weight is calculated by system automatically",
                            SimplifiedChinese = "Gross Weight is calculated by system automatically (SC)",
                            TraditionalChinese = "Gross Weight is calculated by system automatically (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.hoverBookedPackageIconWarning",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "There are cartons with different size.",
                            SimplifiedChinese = "There are cartons with different size. (SC)",
                            TraditionalChinese = "There are cartons with different size. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.totalVolumeNoMatched",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "The total volume of items not match with the total volume of container load.",
                            SimplifiedChinese = "The total volume of items not match with the total volume of container load. (SC)",
                            TraditionalChinese = "The total volume of items not match with the total volume of container load. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.totalGrossWeightNoMatched",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "The total gross weight of items not match with the total gross weight of container load.",
                            SimplifiedChinese = "The total gross weight of items not match with the total gross weight of container load. (SC)",
                            TraditionalChinese = "The total gross weight of items not match with the total gross weight of container load. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.totalNetWeightNoMatched",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "The total net weight of items not match with the total net weight of container load.",
                            SimplifiedChinese = "The total net weight of items not match with the total net weight of container load. (SC)",
                            TraditionalChinese = "The total net weight of items not match with the total net weight of container load. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.totalPackageQtyNoMatched",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "The total package of items not match with the total package of container load.",
                            SimplifiedChinese = "The total package of items not match with the total package of container load. (SC)",
                            TraditionalChinese = "The total package of items not match with the total package of container load. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.atLeastOneRecord",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "There must be at least one record.",
                            SimplifiedChinese = "There must be at least one record. (SC)",
                            TraditionalChinese = "There must be at least one record. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.atLeastContainerLoad",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "There must be container load information.",
                            SimplifiedChinese = "There must be container load information. (SC)",
                            TraditionalChinese = "There must be container load information. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.failureReason",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Failure Reason",
                            SimplifiedChinese = "Failure Reason. (SC)",
                            TraditionalChinese = "Failure Reason. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.innerQuantity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Inner Qty",
                            SimplifiedChinese = "Inner Qty (SC)",
                            TraditionalChinese = "Inner Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.outerQuantity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Outer Qty",
                            SimplifiedChinese = "Outer Qty (SC)",
                            TraditionalChinese = "Outer Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.additionalInformation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Additional Information",
                            SimplifiedChinese = "Additional Information (SC)",
                            TraditionalChinese = "Additional Information (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.ciqOrFumigation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CIQ or Fumigation",
                            SimplifiedChinese = "CIQ or Fumigation (SC)",
                            TraditionalChinese = "CIQ or Fumigation (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.batteryOrChemical",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Battery or Chemical",
                            SimplifiedChinese = "Battery or Chemical (SC)",
                            TraditionalChinese = "Battery or Chemical (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.exportLicence",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Export Licence",
                            SimplifiedChinese = "Export Licence (SC)",
                            TraditionalChinese = "Export Licence (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.chineseDescription",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Chinese Description",
                            SimplifiedChinese = "Chinese Description (SC)",
                            TraditionalChinese = "Chinese Description (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "confirmation.createBooking.questionPFA",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Your booking needs approval from Customer with the reasons below. Are you sure to submit?",
                            SimplifiedChinese = "Your booking needs approval from Customer with the reasons below. Are you sure to submit? (SC)",
                            TraditionalChinese = "Your booking needs approval from Customer with the reasons below. Are you sure to submit? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "confirmation.createBooking.questionRejected",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "You are not allow to submit this booking with below reason.",
                            SimplifiedChinese = "You are not allow to submit this booking with below reason. (SC)",
                            TraditionalChinese = "You are not allow to submit this booking with below reason. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "confirmation.createBooking.asDefaultBookingValidation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "As default booking validation",
                            SimplifiedChinese = "As default booking validation (SC)",
                            TraditionalChinese = "As default booking validation (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "confirmation.resubmittingTheLoadPlan",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Re-submitting the load plan will update container load details accordingly. Are you sure to submit again?",
                            SimplifiedChinese = "Re-submitting the load plan will update container load details accordingly. Are you sure to submit again? (SC)",
                            TraditionalChinese = "Re-submitting the load plan will update container load details accordingly. Are you sure to submit again? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookedStatusReport",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booked Status Report",
                            SimplifiedChinese = "Booked Status Report (SC)",
                            TraditionalChinese = "Booked Status Report (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.notBookedStatusReport",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Not Booked Status Report",
                            SimplifiedChinese = "Not Booked Status Report (SC)",
                            TraditionalChinese = "Not Booked Status Report (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.run",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Run",
                            SimplifiedChinese = "Run (SC)",
                            TraditionalChinese = "Run (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO No.",
                            SimplifiedChinese = "PO No. (SC)",
                            TraditionalChinese = "PO No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poStage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Stage",
                            SimplifiedChinese = "PO Stage (SC)",
                            TraditionalChinese = "PO Stage (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookingStage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Stage",
                            SimplifiedChinese = "Booking Stage (SC)",
                            TraditionalChinese = "Booking Stage (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.includeDraftBooking",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Include Draft Booking",
                            SimplifiedChinese = "Include Draft Booking (SC)",
                            TraditionalChinese = "Include Draft Booking (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.filterCriteria",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Filter Criteria",
                            SimplifiedChinese = "Filter Criteria (SC)",
                            TraditionalChinese = "Filter Criteria (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.poNoRangeInvalid",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO No. To must be greater than From",
                            SimplifiedChinese = "PO No. To must be greater than From (SC)",
                            TraditionalChinese = "PO No. To must be greater than From (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.etdRangeInvalid",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "ETD To must be greater than ETD From",
                            SimplifiedChinese = "ETD To must be greater than ETD From (SC)",
                            TraditionalChinese = "ETD To must be greater than ETD From (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.etaRangeInvalid",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "ETA To must be greater than ETA From",
                            SimplifiedChinese = "ETA To must be greater than ETA From (SC)",
                            TraditionalChinese = "ETA To must be greater than ETA From (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.atdRangeInvalid",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "ATD To must be greater than ATD From",
                            SimplifiedChinese = "ATD To must be greater than ATD From (SC)",
                            TraditionalChinese = "ATD To must be greater than ATD From (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.cargoReadyDateRangeInvalid",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ex-work Date To must be greater than From",
                            SimplifiedChinese = "Ex-work Date To must be greater than From (SC)",
                            TraditionalChinese = "Ex-work Date To must be greater than From (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.exWorkDateRangeInvalid",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ex-work Date To must be greater than Ex-work Date From",
                            SimplifiedChinese = "Ex-work Date To must be greater than Ex-work Date From (SC)",
                            TraditionalChinese = "Ex-work Date To must be greater than Ex-work Date From (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.shipFromPortInvalid",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Port name is invalid",
                            SimplifiedChinese = "Port name is invalid (SC)",
                            TraditionalChinese = "Port name is invalid (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.noPOFound",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No PO found. Please check again.",
                            SimplifiedChinese = "No PO found. Please check again. (SC)",
                            TraditionalChinese = "No PO found. Please check again. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.exportFailed",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Export failed.",
                            SimplifiedChinese = "Export failed. (SC)",
                            TraditionalChinese = "Export failed. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.booked",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booked",
                            SimplifiedChinese = "Booked (SC)",
                            TraditionalChinese = "Booked (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.unbooked",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Unbooked",
                            SimplifiedChinese = "Unbooked (SC)",
                            TraditionalChinese = "Unbooked (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.loaded",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Loaded",
                            SimplifiedChinese = "Loaded (SC)",
                            TraditionalChinese = "Loaded (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.remaining",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Remaining",
                            SimplifiedChinese = "Remaining (SC)",
                            TraditionalChinese = "Remaining (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.loadNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Load No.",
                            SimplifiedChinese = "Load No. (SC)",
                            TraditionalChinese = "Load No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.remainingPkg",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Remaining Pkg.",
                            SimplifiedChinese = "Remaining Pkg. (SC)",
                            TraditionalChinese = "Remaining Pkg. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.loadSequence",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Load Sequence",
                            SimplifiedChinese = "Load Sequence (SC)",
                            TraditionalChinese = "Load Sequence (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.loadedPackage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Loaded Package",
                            SimplifiedChinese = "Loaded Package (SC)",
                            TraditionalChinese = "Loaded Package (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.value",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Value",
                            SimplifiedChinese = "Value (SC)",
                            TraditionalChinese = "Value (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.hsCodeSetting",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "HS Code Setting",
                            SimplifiedChinese = "HS Code Setting (SC)",
                            TraditionalChinese = "HS Code Setting (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookingPort",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Port",
                            SimplifiedChinese = "Booking Port (SC)",
                            TraditionalChinese = "Booking Port (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.requireGrossWeightKGS",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Require Gross Weight (KGS)",
                            SimplifiedChinese = "Require Gross Weight (KGS) (SC)",
                            TraditionalChinese = "Require Gross Weight (KGS) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.requireVolumeCBM",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Require Volume (CBM)",
                            SimplifiedChinese = "Require Volume (SC)",
                            TraditionalChinese = "Require Volume (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.allocatedPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Allocated PO",
                            SimplifiedChinese = "Allocated PO (SC)",
                            TraditionalChinese = "Allocated PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.blanketPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Blanket PO",
                            SimplifiedChinese = "Blanket PO (SC)",
                            TraditionalChinese = "Blanket PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.allocatedPOQty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Allocated Qty",
                            SimplifiedChinese = "Allocated Qty (SC)",
                            TraditionalChinese = "Allocated Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.blanketPOQty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Blanket PO Qty",
                            SimplifiedChinese = "Blanket PO Qty (SC)",
                            TraditionalChinese = "Blanket PO Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.line",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Line",
                            SimplifiedChinese = "Line (SC)",
                            TraditionalChinese = "Line (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.warehouse",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Warehouse",
                            SimplifiedChinese = "Warehouse (SC)",
                            TraditionalChinese = "Warehouse (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfCruiseOrders",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Cruise Orders",
                            SimplifiedChinese = "List of Cruise Orders (SC)",
                            TraditionalChinese = "List of Cruise Orders (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.itemId",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Item ID",
                            SimplifiedChinese = "Item ID (SC)",
                            TraditionalChinese = "Item ID (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poLine",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Line",
                            SimplifiedChinese = "PO Line (SC)",
                            TraditionalChinese = "PO Line (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.requestedQty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Requested Qty",
                            SimplifiedChinese = "Requested Qty (SC)",
                            TraditionalChinese = "Requested Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.quantityDelivered",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Quantity Delivered",
                            SimplifiedChinese = "Quantity Delivered (SC)",
                            TraditionalChinese = "Quantity Delivered (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.markerRefOfItemName2",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Marker Ref. Of Item Name 2",
                            SimplifiedChinese = "Marker Ref. Of Item Name 2 (SC)",
                            TraditionalChinese = "Marker Ref. Of Item Name 2 (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reqNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "REQ Number",
                            SimplifiedChinese = "REQ Number (SC)",
                            TraditionalChinese = "REQ Number (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reqLine",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "REQ Line",
                            SimplifiedChinese = "REQ Line (SC)",
                            TraditionalChinese = "REQ Line (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reqLineShoreNotes",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "REQ Line Shore Notes",
                            SimplifiedChinese = "REQ Line Shore Notes (SC)",
                            TraditionalChinese = "REQ Line Shore Notes (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipREQLineNotes",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ship REQ Line Notes",
                            SimplifiedChinese = "Ship REQ Line Notes (SC)",
                            TraditionalChinese = "Ship REQ Line Notes (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.lineEstimatedDeliveryDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Line Estimated Delivery Date",
                            SimplifiedChinese = "Line Estimated Delivery Date (SC)",
                            TraditionalChinese = "Line Estimated Delivery Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.itemName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Item Name",
                            SimplifiedChinese = "Item Name (SC)",
                            TraditionalChinese = "Item Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.netUnitPrice",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Net Unit Price",
                            SimplifiedChinese = "Net Unit Price (SC)",
                            TraditionalChinese = "Net Unit Price (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.netUnitPriceUSD",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Net Unit Price USD",
                            SimplifiedChinese = "Net Unit Price USD (SC)",
                            TraditionalChinese = "Net Unit Price USD (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.totalOrderPrice",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Total Order Price",
                            SimplifiedChinese = "Total Order Price (SC)",
                            TraditionalChinese = "Total Order Price (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.firstReceivedDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "1st Receiving Point Date",
                            SimplifiedChinese = "1st Receiving Point Date (SC)",
                            TraditionalChinese = "1st Receiving Point Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.itemDetails",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Item Details",
                            SimplifiedChinese = "Item Details (SC)",
                            TraditionalChinese = "Item Details (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.itemDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Item Detail",
                            SimplifiedChinese = "Item Detail (SC)",
                            TraditionalChinese = "Item Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.customerRefId",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Customer Ref. Id",
                            SimplifiedChinese = "Customer Ref. Id (SC)",
                            TraditionalChinese = "Customer Ref. Id (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.generalInformation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "General Information",
                            SimplifiedChinese = "General Information (SC)",
                            TraditionalChinese = "General Information (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.ship",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ship",
                            SimplifiedChinese = "Ship (SC)",
                            TraditionalChinese = "Ship (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poSubject",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Subject",
                            SimplifiedChinese = "PO Subject (SC)",
                            TraditionalChinese = "PO Subject (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poCause",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Cause",
                            SimplifiedChinese = "PO Cause (SC)",
                            TraditionalChinese = "PO Cause (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.maintenanceObject",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Maintenance Object",
                            SimplifiedChinese = "Maintenance Object (SC)",
                            TraditionalChinese = "Maintenance Object (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.firstReceivingPoint",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "First Receiving Point",
                            SimplifiedChinese = "First Receiving Point (SC)",
                            TraditionalChinese = "First Receiving Point (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cerNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CER Number",
                            SimplifiedChinese = "CER Number (SC)",
                            TraditionalChinese = "CER Number (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cerId",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CER ID",
                            SimplifiedChinese = "CER ID (SC)",
                            TraditionalChinese = "CER ID (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.deliveryMeans",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Delivery Means",
                            SimplifiedChinese = "Delivery Means (SC)",
                            TraditionalChinese = "Delivery Means (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poId",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO ID",
                            SimplifiedChinese = "PO ID (SC)",
                            TraditionalChinese = "PO ID (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Type",
                            SimplifiedChinese = "PO Type (SC)",
                            TraditionalChinese = "PO Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.priority",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Priority",
                            SimplifiedChinese = "Priority (SC)",
                            TraditionalChinese = "Priority (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poPriority",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Priority",
                            SimplifiedChinese = "PO Priority (SC)",
                            TraditionalChinese = "PO Priority (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.approvalPOStatus",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Approval PO Status",
                            SimplifiedChinese = "Approval PO Status (SC)",
                            TraditionalChinese = "Approval PO Status (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.approvedDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Approved Date",
                            SimplifiedChinese = "Approved Date (SC)",
                            TraditionalChinese = "Approved Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.maker",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Maker",
                            SimplifiedChinese = "Maker (SC)",
                            TraditionalChinese = "Maker (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.withWO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "With WO",
                            SimplifiedChinese = "With WO (SC)",
                            TraditionalChinese = "With WO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.creationUser",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Creation User",
                            SimplifiedChinese = "Creation User (SC)",
                            TraditionalChinese = "Creation User (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reqInformation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "REQ Information",
                            SimplifiedChinese = "REQ Information (SC)",
                            TraditionalChinese = "REQ Information (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reqRequestor",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "REQ Requestor",
                            SimplifiedChinese = "REQ Requestor (SC)",
                            TraditionalChinese = "REQ Requestor (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reqPriority",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "REQ Priority",
                            SimplifiedChinese = "REQ Priority (SC)",
                            TraditionalChinese = "REQ Priority (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reqApprovalDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "REQ Approval Date",
                            SimplifiedChinese = "REQ Approval Date (SC)",
                            TraditionalChinese = "REQ Approval Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reqDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "REQ Date",
                            SimplifiedChinese = "REQ Date (SC)",
                            TraditionalChinese = "REQ Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reqType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "REQ Type",
                            SimplifiedChinese = "REQ Type (SC)",
                            TraditionalChinese = "REQ Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reqType2",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "REQ Type 2",
                            SimplifiedChinese = "REQ Type 2 (SC)",
                            TraditionalChinese = "REQ Type 2 (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reqType3",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "REQ Type 3",
                            SimplifiedChinese = "REQ Type 3 (SC)",
                            TraditionalChinese = "REQ Type 3 (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.budgetInformation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Budget Information",
                            SimplifiedChinese = "Budget Information (SC)",
                            TraditionalChinese = "Budget Information (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.budgetAccount",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Budget Account",
                            SimplifiedChinese = "Budget Account (SC)",
                            TraditionalChinese = "Budget Account (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.budgetId",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Budget ID",
                            SimplifiedChinese = "Budget ID (SC)",
                            TraditionalChinese = "Budget ID (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.invoice",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Invoice",
                            SimplifiedChinese = "Invoice (SC)",
                            TraditionalChinese = "Invoice (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.invoiceType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Invoice Type",
                            SimplifiedChinese = "Invoice Type (SC)",
                            TraditionalChinese = "Invoice Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.normalInvoice",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Invoice",
                            SimplifiedChinese = "Invoice (SC)",
                            TraditionalChinese = "Invoice (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.statementInvoice",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Statement",
                            SimplifiedChinese = "Statement (SC)",
                            TraditionalChinese = "Statement (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.manualInvoice",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Manual",
                            SimplifiedChinese = "Manual (SC)",
                            TraditionalChinese = "Manual (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.budgetYear",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Budget Year",
                            SimplifiedChinese = "Budget Year (SC)",
                            TraditionalChinese = "Budget Year (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.budgetPeriod",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Budget Period",
                            SimplifiedChinese = "Budget Period (SC)",
                            TraditionalChinese = "Budget Period (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.nowarehouse",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No warehouse info available.",
                            SimplifiedChinese = "No warehouse info available (SC).",
                            TraditionalChinese = "No warehouse info available (TC).",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.noShipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No shipment info available.",
                            SimplifiedChinese = "No shipment info available (SC).",
                            TraditionalChinese = "No shipment info available (TC).",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruiseOrder.booked",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booked For Vendor",
                            SimplifiedChinese = "Booked For Vendor (SC)",
                            TraditionalChinese = "Booked For Vendor (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruiseOrder.deliveredOrigin",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Delivered Origin",
                            SimplifiedChinese = "Delivered Origin (SC)",
                            TraditionalChinese = "Delivered Origin (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruiseOrder.confirm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Confirm On Board",
                            SimplifiedChinese = "Confirm On Board (SC)",
                            TraditionalChinese = "Confirm On Board (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruiseOrder.shipped",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipped",
                            SimplifiedChinese = "Shipped (SC)",
                            TraditionalChinese = "Shipped (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruiseOrder.arrived",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Arrived At Destination",
                            SimplifiedChinese = "Arrived At Destination (SC)",
                            TraditionalChinese = "Arrived At Destination (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruiseOrder.deliveredToShipyard",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Delivered To Shipyard",
                            SimplifiedChinese = "Delivered To Shipyard (SC)",
                            TraditionalChinese = "Delivered To Shipyard (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.estimatedDeliveryDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Estimated Delivery Date",
                            SimplifiedChinese = "Estimated Delivery Date (SC)",
                            TraditionalChinese = "Estimated Delivery Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.deliveryDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Delivery Date",
                            SimplifiedChinese = "Delivery Date (SC)",
                            TraditionalChinese = "Delivery Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.contract",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Contract",
                            SimplifiedChinese = "Contract (SC)",
                            TraditionalChinese = "Contract (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.contracts",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Contracts",
                            SimplifiedChinese = "Contracts (SC)",
                            TraditionalChinese = "Contracts (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addNewContract",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add New Contract",
                            SimplifiedChinese = "Add New Contract (SC)",
                            TraditionalChinese = "Add New Contract (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.contractDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Contract Detail",
                            SimplifiedChinese = "Contract Detail (SC)",
                            TraditionalChinese = "Contract Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.contractKey",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Contract Key",
                            SimplifiedChinese = "Contract Key (SC)",
                            TraditionalChinese = "Contract Key (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.coloader",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Coloader",
                            SimplifiedChinese = "Coloader (SC)",
                            TraditionalChinese = "Coloader (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.isVip",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "VIP",
                            SimplifiedChinese = "VIP (SC)",
                            TraditionalChinese = "VIP (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.ccl",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CCL",
                            SimplifiedChinese = "CCL (SC)",
                            TraditionalChinese = "CCL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.forwarderContract",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Forwarder Contract",
                            SimplifiedChinese = "Forwarder Contract (SC)",
                            TraditionalChinese = "Forwarder Contract (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipboardLoadingLocation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipboard Loading Location",
                            SimplifiedChinese = "Shipboard Loading Location (SC)",
                            TraditionalChinese = "Shipboard Loading Location (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.portOrLocation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Port / Location",
                            SimplifiedChinese = "Port / Location (SC)",
                            TraditionalChinese = "Port / Location (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.comments",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Comments",
                            SimplifiedChinese = "Comments (SC)",
                            TraditionalChinese = "Comments (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.quotedCost",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Quoted Cost",
                            SimplifiedChinese = "Quoted Cost (SC)",
                            TraditionalChinese = "Quoted Cost (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.delayCause",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Delay Cause",
                            SimplifiedChinese = "Delay Cause (SC)",
                            TraditionalChinese = "Delay Cause (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.deliveryTicket",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Delivery Ticket",
                            SimplifiedChinese = "Delivery Ticket (SC)",
                            TraditionalChinese = "Delivery Ticket (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.destinationCountry",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Destination Country",
                            SimplifiedChinese = "Destination Country (SC)",
                            TraditionalChinese = "Destination Country (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.buyerName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Buyer Name",
                            SimplifiedChinese = "Buyer Name (SC)",
                            TraditionalChinese = "Buyer Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.sub1",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "SUB 1",
                            SimplifiedChinese = "SUB 1 (SC)",
                            TraditionalChinese = "SUB 1 (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.sub2",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "SUB 2",
                            SimplifiedChinese = "SUB 2 (SC)",
                            TraditionalChinese = "SUB 2 (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruiseOrder",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cruise Order",
                            SimplifiedChinese = "Cruise Order (SC)",
                            TraditionalChinese = "Cruise Order (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.approvedBy",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Approved By",
                            SimplifiedChinese = "Approved By (SC)",
                            TraditionalChinese = "Approved By (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.miscellaneous",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Miscellaneous",
                            SimplifiedChinese = "Miscellaneous (SC)",
                            TraditionalChinese = "Miscellaneous (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.event",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Event",
                            SimplifiedChinese = "Event (SC)",
                            TraditionalChinese = "Event (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.companyLogo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Company Logo (Extension: *.png, *.jpg)",
                            SimplifiedChinese = "Company Logo (Extension: *.png, *.jpg) (SC)",
                            TraditionalChinese = "Company Logo (Extension: *.png, *.jpg) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.dialog",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Dialog",
                            SimplifiedChinese = "Dialog",
                            TraditionalChinese = "Dialog",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.messageDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Message Date",
                            SimplifiedChinese = "Message Date",
                            TraditionalChinese = "Message Date",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.from",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "From",
                            SimplifiedChinese = "From",
                            TraditionalChinese = "From",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.category",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Category",
                            SimplifiedChinese = "Category",
                            TraditionalChinese = "Category",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.item",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Item",
                            SimplifiedChinese = "Item",
                            TraditionalChinese = "Item",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.message",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Message",
                            SimplifiedChinese = "Message",
                            TraditionalChinese = "Message",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poItem",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Item",
                            SimplifiedChinese = "PO Item",
                            TraditionalChinese = "PO Item",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addNewMessage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add new message",
                            SimplifiedChinese = "Add new message",
                            TraditionalChinese = "Add new message",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.editMessage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit Message",
                            SimplifiedChinese = "Edit Message",
                            TraditionalChinese = "Edit Message",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.deleteNoteConfirm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to delete this message?",
                            SimplifiedChinese = "Are you sure you want to delete this message? (SC)",
                            TraditionalChinese = "Are you sure you want to delete this message? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.deleteNoteSuccessfully",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Message has been deleted successfully",
                            SimplifiedChinese = "Message has been deleted successfully (SC)",
                            TraditionalChinese = "Message has been deleted successfully (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.inDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "In Date",
                            SimplifiedChinese = "In Date (SC)",
                            TraditionalChinese = "In Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.receivedQty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Received Qty",
                            SimplifiedChinese = "Received Qty (SC)",
                            TraditionalChinese = "Received Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.onHold",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "On Hold",
                            SimplifiedChinese = "On Hold (SC)",
                            TraditionalChinese = "On Hold (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.osd",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "OSD",
                            SimplifiedChinese = "OSD (SC)",
                            TraditionalChinese = "OSD (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.hazardous",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Hazardous",
                            SimplifiedChinese = "Hazardous (SC)",
                            TraditionalChinese = "Hazardous (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruisePackingList",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Packing List",
                            SimplifiedChinese = "Packing List (SC)",
                            TraditionalChinese = "Packing List (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.rtpDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "RTP Date",
                            SimplifiedChinese = "RTP Date (SC)",
                            TraditionalChinese = "RTP Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.plClosingDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PL Closing Date",
                            SimplifiedChinese = "PL Closing Date (SC)",
                            TraditionalChinese = "PL Closing Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.physicalQty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Physical Qty",
                            SimplifiedChinese = "Physical Qty (SC)",
                            TraditionalChinese = "Physical Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.packedDays",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Packed Days",
                            SimplifiedChinese = "Packed Days (SC)",
                            TraditionalChinese = "Packed Days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.availableDays",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Available Days",
                            SimplifiedChinese = "Available Days (SC)",
                            TraditionalChinese = "Available Days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.remoteDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Remote Date",
                            SimplifiedChinese = "Remote Date (SC)",
                            TraditionalChinese = "Remote Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.agentInDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Agent In Date",
                            SimplifiedChinese = "Agent In Date (SC)",
                            TraditionalChinese = "Agent In Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.packageID",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Package ID",
                            SimplifiedChinese = "Package ID (SC)",
                            TraditionalChinese = "Package ID (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.palletID",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Pallet ID",
                            SimplifiedChinese = "Pallet ID (SC)",
                            TraditionalChinese = "Pallet ID (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.onHoldCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "On Hold Code",
                            SimplifiedChinese = "On Hold Code (SC)",
                            TraditionalChinese = "On Hold Code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.osdReason",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "OSD Reason",
                            SimplifiedChinese = "OSD Reason (SC)",
                            TraditionalChinese = "OSD Reason (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.mrStatus",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "MR Status",
                            SimplifiedChinese = "MR Status (SC)",
                            TraditionalChinese = "MR Status (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.grDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "GR Date",
                            SimplifiedChinese = "GR Date (SC)",
                            TraditionalChinese = "GR Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.packedDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Packed Date",
                            SimplifiedChinese = "Packed Date (SC)",
                            TraditionalChinese = "Packed Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.receivedDays",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Received Days",
                            SimplifiedChinese = "Received Days (SC)",
                            TraditionalChinese = "Received Days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.releaseToPackDays",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Release To Pack Days",
                            SimplifiedChinese = "Release To Pack Days (SC)",
                            TraditionalChinese = "Release To Pack Days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.keepWHDays",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Keep WH Days",
                            SimplifiedChinese = "Keep WH Days (SC)",
                            TraditionalChinese = "Keep WH Days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.onHoldDays",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "On Hold Days",
                            SimplifiedChinese = "On Hold Days (SC)",
                            TraditionalChinese = "On Hold Days (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.remoteStatus",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Remote Status",
                            SimplifiedChinese = "Remote Status (SC)",
                            TraditionalChinese = "Remote Status (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bonded",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Bonded",
                            SimplifiedChinese = "Bonded (SC)",
                            TraditionalChinese = "Bonded (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bondNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Bond No.",
                            SimplifiedChinese = "Bond No. (SC)",
                            TraditionalChinese = "Bond No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.theWeekBefore",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "The week before",
                            SimplifiedChinese = "The week before (SC)",
                            TraditionalChinese = "The week before (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.allowToBookIn",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Allow to book in",
                            SimplifiedChinese = "Allow to book in (SC)",
                            TraditionalChinese = "Allow to book in (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.allowToBookWithUnrecognizedPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Allow to book with unrecognized PO",
                            SimplifiedChinese = "Allow to book with unrecognized PO (SC)",
                            TraditionalChinese = "Allow to book with unrecognized PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.allowToCreateBookingWithMissingPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Allow to create booking with missing PO",
                            SimplifiedChinese = "Allow to create booking with missing PO (SC)",
                            TraditionalChinese = "Allow to create booking with missing PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.askForPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ask For PO",
                            SimplifiedChinese = "Ask For PO (SC)",
                            TraditionalChinese = "Ask For PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.missingPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure to send email to customer for asking missing purchase order(s)?",
                            SimplifiedChinese = "Are you sure to send email to customer for asking missing purchase order(s)? (SC)",
                            TraditionalChinese = "Are you sure to send email to customer for asking missing purchase order(s)? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "save.missingPOSuccessfully",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Request for missing PO has been sent successfully",
                            SimplifiedChinese = "Request for missing PO has been sent successfully (SC)",
                            TraditionalChinese = "Request for missing PO has been sent successfully (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.updateOfToday",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Updates of today",
                            SimplifiedChinese = "Updates of today (SC)",
                            TraditionalChinese = "Updates of today (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.dismiss",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Dismiss",
                            SimplifiedChinese = "Dismiss (SC)",
                            TraditionalChinese = "Dismiss (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.dismissUpdate",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure to dismiss the updates?",
                            SimplifiedChinese = "Are you sure to dismiss the updates? (SC)",
                            TraditionalChinese = "Are you sure to dismiss the updates? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.supplementary",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Supplementary",
                            SimplifiedChinese = "Supplementary (SC)",
                            TraditionalChinese = "Supplementary (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.latestDialog",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Latest Dialog",
                            SimplifiedChinese = "Latest Dialog (SC)",
                            TraditionalChinese = "Latest Dialog (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.orderDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Order Detail",
                            SimplifiedChinese = "Order Detail (SC)",
                            TraditionalChinese = "Order Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.details",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Details",
                            SimplifiedChinese = "Details (SC)",
                            TraditionalChinese = "Details (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.itemNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Item Number",
                            SimplifiedChinese = "Item Number (SC)",
                            TraditionalChinese = "Item Number (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.lineEstDeliveryDate",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Line Est. Delivery Date",
                            SimplifiedChinese = "Line Est. Delivery Date (SC)",
                            TraditionalChinese = "Line Est. Delivery Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipboardLoadingLoc",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipboard Loading Loc.",
                            SimplifiedChinese = "Shipboard Loading Loc. (SC)",
                            TraditionalChinese = "Shipboard Loading Loc. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.markerReference",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Marker Reference",
                            SimplifiedChinese = "Marker Reference (SC)",
                            TraditionalChinese = "Marker Reference (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.estReadyDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Est. Ready Date",
                            SimplifiedChinese = "Est. Ready Date (SC)",
                            TraditionalChinese = "Est. Ready Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reqOnboardDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "REQ Onboard Date",
                            SimplifiedChinese = "REQ Onboard Date (SC)",
                            TraditionalChinese = "REQ Onboard Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookedToShip",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booked To Ship",
                            SimplifiedChinese = "Booked To Ship (SC)",
                            TraditionalChinese = "Booked To Ship (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.deliveryConfirmDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Delivery Confirm Date",
                            SimplifiedChinese = "Delivery Confirm Date (SC)",
                            TraditionalChinese = "Delivery Confirm Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.containerId",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Container ID",
                            SimplifiedChinese = "Container ID (SC)",
                            TraditionalChinese = "Container ID (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookingCreatedDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Created Date",
                            SimplifiedChinese = "Booking Created Date (SC)",
                            TraditionalChinese = "Booking Created Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookingRemarks",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Remarks",
                            SimplifiedChinese = "Booking Remarks (SC)",
                            TraditionalChinese = "Booking Remarks (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.invalidOrganizationCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Organization Code is invalid",
                            SimplifiedChinese = "Organization Code is invalid (SC)",
                            TraditionalChinese = "Organization Code is invalid (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.HAWBMAWB",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "HAWB/MAWB",
                            SimplifiedChinese = "HAWB/MAWB (SC)",
                            TraditionalChinese = "HAWB/MAWB (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.asnNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "ASN No.",
                            SimplifiedChinese = "ASN No. (SC)",
                            TraditionalChinese = "ASN No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.unNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "UN No.",
                            SimplifiedChinese = "UN No. (SC)",
                            TraditionalChinese = "UN No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addDialog",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add dialog",
                            SimplifiedChinese = "Add dialog (SC)",
                            TraditionalChinese = "Add dialog (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruiseOrder.poId",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Add. Details",
                            SimplifiedChinese = "PO Add. Details (SC)",
                            TraditionalChinese = "PO Add. Details (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruiseOrder.supplier",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Supplier Name",
                            SimplifiedChinese = "Supplier Name (SC)",
                            TraditionalChinese = "Supplier Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruiseOrder.pickupArranged",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Pick-up arranged for loose cargo",
                            SimplifiedChinese = "Pick-up arranged for loose cargo (SC)",
                            TraditionalChinese = "Pick-up arranged for loose cargo (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruiseOrder.goodsReceived",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Goods received in hub",
                            SimplifiedChinese = "Goods received in hub (SC)",
                            TraditionalChinese = "Goods received in hub (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruiseOrder.authorizedToShip",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Authorized To Ship",
                            SimplifiedChinese = "Authorized To Ship (SC)",
                            TraditionalChinese = "Authorized To Ship (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruiseOrder.bookedForVendor",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booked For Vendor",
                            SimplifiedChinese = "Booked For Vendor (SC)",
                            TraditionalChinese = "Booked For Vendor (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruiseOrder.transhipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Transhipment",
                            SimplifiedChinese = "Transhipment (SC)",
                            TraditionalChinese = "Transhipment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruiseOrder.containerToShip",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Container To Ship",
                            SimplifiedChinese = "Container To Ship (SC)",
                            TraditionalChinese = "Container To Ship (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruiseOrder.containerEmpty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Container Empty",
                            SimplifiedChinese = "Container Empty (SC)",
                            TraditionalChinese = "Container Empty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruiseOrder.emptyContainerReturned",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Empty Return",
                            SimplifiedChinese = "Empty Return (SC)",
                            TraditionalChinese = "Empty Return (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.items",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Item(s)",
                            SimplifiedChinese = "Item(s) (SC)",
                            TraditionalChinese = "Item(s) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.editItem",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit item",
                            SimplifiedChinese = "Edit item (SC)",
                            TraditionalChinese = "Edit item (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "placeHolder.searchingShipmentNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Input Shipment No. and select",
                            SimplifiedChinese = "Input Shipment No. and select (SC)",
                            TraditionalChinese = "Input Shipment No. and select (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruiseOrder.notFoundWarehouse",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No warehouse info available.",
                            SimplifiedChinese = "No warehouse info available. (SC)",
                            TraditionalChinese = "No warehouse info available. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.freightSchedulers",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Freight Scheduler",
                            SimplifiedChinese = "Freight Scheduler (SC)",
                            TraditionalChinese = "Freight Scheduler (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.freightSchedulers.add",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add Schedule",
                            SimplifiedChinese = "Add Schedule (SC)",
                            TraditionalChinese = "Add Schedule (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.freightSchedulers.update",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Update ETD/ETA",
                            SimplifiedChinese = "Update ETD/ETA (SC)",
                            TraditionalChinese = "Update ETD/ETA (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.flightNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Flight Number",
                            SimplifiedChinese = "Flight Number (SC)",
                            TraditionalChinese = "Flight Number (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.flight",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "The Flight No.",
                            SimplifiedChinese = "The Flight No. (SC)",
                            TraditionalChinese = "The Flight No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.freightSchedulers.updateSchedule",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Update Schedule",
                            SimplifiedChinese = "Update Schedule (SC)",
                            TraditionalChinese = "Update Schedule (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.freightSchedulers.editSchedule",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit Schedule",
                            SimplifiedChinese = "Edit Schedule (SC)",
                            TraditionalChinese = "Edit Schedule (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfFreightScheduler",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Freight Scheduler",
                            SimplifiedChinese = "List of Freight Scheduler (SC)",
                            TraditionalChinese = "List of Freight Scheduler (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.vesselMAWB",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Vessel/MAWB",
                            SimplifiedChinese = "Vessel/MAWB (SC)",
                            TraditionalChinese = "Vessel/MAWB (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.refNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ref. Number",
                            SimplifiedChinese = "Ref. Number (SC)",
                            TraditionalChinese = "Ref. Number (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.departureDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Departure Date",
                            SimplifiedChinese = "Departure Date (SC)",
                            TraditionalChinese = "Departure Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectASchedule",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Select a Schedule",
                            SimplifiedChinese = "Select a Schedule (SC)",
                            TraditionalChinese = "Select a Schedule (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.duplicateSequence",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Sequence cannot be duplicated",
                            SimplifiedChinese = "Sequence cannot be duplicated (SC)",
                            TraditionalChinese = "Sequence cannot be duplicated (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.courier",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Courier",
                            SimplifiedChinese = "Courier (SC)",
                            TraditionalChinese = "Courier (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shippingOrders",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipping Orders",
                            SimplifiedChinese = "Shipping Orders (SC)",
                            TraditionalChinese = "Shipping Orders (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shippingContainers",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipping Containers",
                            SimplifiedChinese = "Shipping Containers (SC)",
                            TraditionalChinese = "Shipping Containers (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfShippingContainers",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Shipping Containers",
                            SimplifiedChinese = "List of Shipping Containers (SC)",
                            TraditionalChinese = "List of Shipping Containers (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shippedPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipped PO",
                            SimplifiedChinese = "Shipped PO (SC)",
                            TraditionalChinese = "Shipped PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfShippedPurchaseOrders",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Shipped Purchase Orders",
                            SimplifiedChinese = "List of Shipped Purchase Orders (SC)",
                            TraditionalChinese = "List of Shipped Purchase Orders (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shippedPurchaseOrders",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipped Purchase Orders",
                            SimplifiedChinese = "Shipped Purchase Orders (SC)",
                            TraditionalChinese = "Shipped Purchase Orders (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poSeq",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Seq.",
                            SimplifiedChinese = "PO Seq. (SC)",
                            TraditionalChinese = "PO Seq. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.itemNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Item No.",
                            SimplifiedChinese = "Item No. (SC)",
                            TraditionalChinese = "Item No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.masterData",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Master Data",
                            SimplifiedChinese = "Master Data (SC)",
                            TraditionalChinese = "Master Data (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.carriers",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Carriers",
                            SimplifiedChinese = "Carriers (SC)",
                            TraditionalChinese = "Carriers (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.vessels",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Vessels",
                            SimplifiedChinese = "Vessels (SC)",
                            TraditionalChinese = "Vessels (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.locations",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Locations",
                            SimplifiedChinese = "Locations (SC)",
                            TraditionalChinese = "Locations (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfVessels",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Vessels",
                            SimplifiedChinese = "List of Vessels (SC)",
                            TraditionalChinese = "List of Vessels (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.vesselCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Vessel Code",
                            SimplifiedChinese = "Vessel Code (SC)",
                            TraditionalChinese = "Vessel Code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.vesselName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Vessel Name",
                            SimplifiedChinese = "Vessel Name (SC)",
                            TraditionalChinese = "Vessel Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.voyageNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Voyage No.",
                            SimplifiedChinese = "Voyage No. (SC)",
                            TraditionalChinese = "Voyage No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addNewVessel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add New Vessel",
                            SimplifiedChinese = "Add New Vessel (SC)",
                            TraditionalChinese = "Add New Vessel (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.editVessel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit Vessel",
                            SimplifiedChinese = "Edit Vessel (SC)",
                            TraditionalChinese = "Edit Vessel (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.managedYTD",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Managed YTD",
                            SimplifiedChinese = "Managed YTD (SC)",
                            TraditionalChinese = "Managed YTD (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.numberOfPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Number of PO",
                            SimplifiedChinese = "Number of PO (SC)",
                            TraditionalChinese = "Number of PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cbm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CBM",
                            SimplifiedChinese = "CBM (SC)",
                            TraditionalChinese = "CBM (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.kgs",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "KGS",
                            SimplifiedChinese = "KGS (SC)",
                            TraditionalChinese = "KGS (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.units",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Units",
                            SimplifiedChinese = "Units (SC)",
                            TraditionalChinese = "Units (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fobPrice",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "FOB Price (USD)",
                            SimplifiedChinese = "FOB Price (USD) (SC)",
                            TraditionalChinese = "FOB Price (USD) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.historicalSignIn",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Historical Sign In",
                            SimplifiedChinese = "Historical Sign In (SC)",
                            TraditionalChinese = "Historical Sign In (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.times",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Times",
                            SimplifiedChinese = "Times (SC)",
                            TraditionalChinese = "Times",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.timeZoneOfGrid",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "This table is showing time in",
                            SimplifiedChinese = "This table is showing time in (SC)",
                            TraditionalChinese = "This table is showing time in (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.localTimeZone",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Your local timezone",
                            SimplifiedChinese = "Your local timezone (SC)",
                            TraditionalChinese = "Your local timezone (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.os",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Operating System",
                            SimplifiedChinese = "Operating System (SC)",
                            TraditionalChinese = "Operating System (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.browser",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Browser",
                            SimplifiedChinese = "Browser (SC)",
                            TraditionalChinese = "Browser (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.screenSize",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Screen Size",
                            SimplifiedChinese = "Screen Size (SC)",
                            TraditionalChinese = "Screen Size (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.feature",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Feature",
                            SimplifiedChinese = "Feature (SC)",
                            TraditionalChinese = "Feature (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.dateTime",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Date Time",
                            SimplifiedChinese = "Date Time (SC)",
                            TraditionalChinese = "Date Time (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfLocations",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Locations",
                            SimplifiedChinese = "List of Locations (SC)",
                            TraditionalChinese = "List of Locations (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.locationCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Location Code",
                            SimplifiedChinese = "Location Code (SC)",
                            TraditionalChinese = "Location Code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.locationName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Location Name",
                            SimplifiedChinese = "Location Name (SC)",
                            TraditionalChinese = "Location Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.ediSONCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "ediSON Code",
                            SimplifiedChinese = "ediSON Code (SC)",
                            TraditionalChinese = "ediSON Code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addNewLocation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add New Location",
                            SimplifiedChinese = "Add New Location (SC)",
                            TraditionalChinese = "Add New Location (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.editLocation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit Location",
                            SimplifiedChinese = "Edit Location (SC)",
                            TraditionalChinese = "Edit Location (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.masterSummaryReport",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Master Summary Report",
                            SimplifiedChinese = "Master Summary Report (SC)",
                            TraditionalChinese = "Master Summary Report (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookedPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booked PO",
                            SimplifiedChinese = "Booked PO (SC)",
                            TraditionalChinese = "Booked PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.masterBLNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Master BL No.",
                            SimplifiedChinese = "Master BL No. (SC)",
                            TraditionalChinese = "Master BL No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.masterBillNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Master Bill No.",
                            SimplifiedChinese = "Master Bill No. (SC)",
                            TraditionalChinese = "Master Bill No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reportType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Report Type",
                            SimplifiedChinese = "Report Type (SC)",
                            TraditionalChinese = "Report Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.promotionCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Promotion Code",
                            SimplifiedChinese = "Promotion Code (SC)",
                            TraditionalChinese = "Promotion Code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookingFiltering",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Filtering",
                            SimplifiedChinese = "Booking Filtering (SC)",
                            TraditionalChinese = "Booking Filtering (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poFiltering",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO Filtering",
                            SimplifiedChinese = "PO Filtering (SC)",
                            TraditionalChinese = "PO Filtering (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.cargoReadyDateDurationInvalid",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Ex-work Date To and From must be within 2 months",
                            SimplifiedChinese = "Ex-work Date To and From must be within 2 months (SC)",
                            TraditionalChinese = "Ex-work Date To and From must be within 2 months (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.etdDurationInvalid",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "ETD To and From must be within 2 months",
                            SimplifiedChinese = "ETD To and From must be within 2 months (SC)",
                            TraditionalChinese = "ETD To and From must be within 2 months (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.etaDurationInvalid",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "ETA To and From must be within 2 months",
                            SimplifiedChinese = "ETA To and From must be within 2 months (SC)",
                            TraditionalChinese = "ETA To and From must be within 2 months (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.atdDurationInvalid",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "ATD To and From must be within 2 months",
                            SimplifiedChinese = "ATD To and From must be within 2 months (SC)",
                            TraditionalChinese = "ATD To and From must be within 2 months (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.dateWithin90DaysToday",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "The date must be within 90 days before and after today",
                            SimplifiedChinese = "The date must be within 90 days before and after today (SC)",
                            TraditionalChinese = "The date must be within 90 days before and after today (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.dateRangeToRunReport",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Please select either ETD, ETA, ATD or Ex-work Date range as the report criteria.",
                            SimplifiedChinese = "Please select either ETD, ETA, ATD or Ex-work Date range as the report criteria.(SC)",
                            TraditionalChinese = "Please select either ETD, ETA, ATD or Ex-work Date range as the report criteria.(TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.supplierInvalid",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Invalid Supplier",
                            SimplifiedChinese = "Invalid Supplier (SC)",
                            TraditionalChinese = "Invalid Supplier (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.numericMaxlengthHsCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Invalid HS Code.",
                            SimplifiedChinese = "Invalid HS Code. (SC)",
                            TraditionalChinese = "Invalid HS Code. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.separatedSymbolHsCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Please separate the HS Code by comma.",
                            SimplifiedChinese = "Please separate the HS Code by comma. (SC)",
                            TraditionalChinese = "Please separate the HS Code by comma. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.stillWorking",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "We are still working on it. It shouldn't take long.",
                            SimplifiedChinese = "We are still working on it. It shouldn't take long. (SC)",
                            TraditionalChinese = "We are still working on it. It shouldn't take long. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.masterDialogs",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Master Dialogs",
                            SimplifiedChinese = "Master Dialogs (SC)",
                            TraditionalChinese = "Master Dialogs (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.masterDialogDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Master Dialog Detail",
                            SimplifiedChinese = "Master Dialog Detail (SC)",
                            TraditionalChinese = "Master Dialog Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.masterDialog",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Master Dialog",
                            SimplifiedChinese = "Master Dialog (SC)",
                            TraditionalChinese = "Master Dialog (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfMasterDialog",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Master Dialogs",
                            SimplifiedChinese = "List of Master Dialogs (SC)",
                            TraditionalChinese = "List of Master Dialogs (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.purchaseOrderNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Purchase Order No.",
                            SimplifiedChinese = "Purchase Order No. (SC)",
                            TraditionalChinese = "Purchase Order No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookings",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Bookings",
                            SimplifiedChinese = "Bookings (SC)",
                            TraditionalChinese = "Bookings (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.houseBillOfLadingNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "House BL No.",
                            SimplifiedChinese = "House BL No. (SC)",
                            TraditionalChinese = "House BL No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addNewMasterDialog",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add New Message",
                            SimplifiedChinese = "Add New Message (SC)",
                            TraditionalChinese = "Add New Message (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.editMasterDialog",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit Massage",
                            SimplifiedChinese = "Edit Massage (SC)",
                            TraditionalChinese = "Edit Massage (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.dialogMessageLevel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Dialog message level",
                            SimplifiedChinese = "Dialog message level (SC)",
                            TraditionalChinese = "Dialog message level (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.confirmation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Confirmation",
                            SimplifiedChinese = "Confirmation (SC)",
                            TraditionalChinese = "Confirmation (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cancelChangeOnMasterDialog",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure to ignore these changes and move away?",
                            SimplifiedChinese = "Are you sure to ignore these changes and move away? (SC)",
                            TraditionalChinese = "Are you sure to ignore these changes and move away? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.messageDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Message Detail",
                            SimplifiedChinese = "Message Detail (SC)",
                            TraditionalChinese = "Message Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.pleaseSelect",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Please select",
                            SimplifiedChinese = "Please select (SC)",
                            TraditionalChinese = "Please select (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.dialogSearchBy",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Search {{msgLevel}} by",
                            SimplifiedChinese = "Search {{msgLevel}} by (SC)",
                            TraditionalChinese = "Search {{msgLevel}} by (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.dialogApplyTo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Dialog apply to {{name}}",
                            SimplifiedChinese = "Dialog apply to {{name}} (SC)",
                            TraditionalChinese = "Dialog apply to {{name}} (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.dialogApplyToItemLevel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Dialog apply to below item level (whenever appropriate)",
                            SimplifiedChinese = "Dialog apply to below item level (whenever appropriate) (SC)",
                            TraditionalChinese = "Dialog apply to below item level (whenever appropriate) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.dialogLevel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Dialog Level",
                            SimplifiedChinese = "Dialog Level (SC)",
                            TraditionalChinese = "Dialog Level (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.searchBy",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Search by",
                            SimplifiedChinese = "Search by (SC)",
                            TraditionalChinese = "Search by (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.masterDialogApplyTo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Dialog apply to",
                            SimplifiedChinese = "Dialog apply to (SC)",
                            TraditionalChinese = "Dialog apply to (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.attachmentType.commercialinvoice",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Commercial Invoice",
                            SimplifiedChinese = "Commercial Invoice (SC)",
                            TraditionalChinese = "Commercial Invoice (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.attachmentType.packinglist",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Packing List",
                            SimplifiedChinese = "Packing List (SC)",
                            TraditionalChinese = "Packing List (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.attachmentType.exportlicense",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Export License",
                            SimplifiedChinese = "Export License (SC)",
                            TraditionalChinese = "Export License (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.attachmentType.certificateoforigin",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Certificate of Origin",
                            SimplifiedChinese = "Certificate of Origin (SC)",
                            TraditionalChinese = "Certificate of Origin (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.attachmentType.forma",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Form A",
                            SimplifiedChinese = "Form A (SC)",
                            TraditionalChinese = "Form A (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.attachmentType.fumigationcertificate",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Fumigation Certificate",
                            SimplifiedChinese = "Fumigation Certificate (SC)",
                            TraditionalChinese = "Fumigation Certificate (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.attachmentType.packingdeclaration",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Packing Declaration",
                            SimplifiedChinese = "Packing Declaration (SC)",
                            TraditionalChinese = "Packing Declaration (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.attachmentType.msds",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "MSDS",
                            SimplifiedChinese = "MSDS (SC)",
                            TraditionalChinese = "MSDS (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.attachmentType.letterofcredit",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Letter of Credit",
                            SimplifiedChinese = "Letter of Credit (SC)",
                            TraditionalChinese = "Letter of Credit (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.attachmentType.insurancecertificate",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Insurance Certificate",
                            SimplifiedChinese = "Insurance Certificate (SC)",
                            TraditionalChinese = "Insurance Certificate (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.attachmentType.shippingorderform",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipping Order Form",
                            SimplifiedChinese = "Shipping Order Form (SC)",
                            TraditionalChinese = "Shipping Order Form (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.attachmentType.bookingform",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Form",
                            SimplifiedChinese = "Booking Form (SC)",
                            TraditionalChinese = "Booking Form (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.attachmentType.others",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Others",
                            SimplifiedChinese = "Others (SC)",
                            TraditionalChinese = "Others (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.attachmentType.masterbl",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Master BL",
                            SimplifiedChinese = "Master BL (SC)",
                            TraditionalChinese = "Master BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.attachmentType.housebl",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "House BL",
                            SimplifiedChinese = "House BL (SC)",
                            TraditionalChinese = "House BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.attachmentType.miscellaneous",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Miscellaneous",
                            SimplifiedChinese = "Miscellaneous (SC)",
                            TraditionalChinese = "Miscellaneous(TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.attachmentType.manifest",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Manifest",
                            SimplifiedChinese = "Manifest (SC)",
                            TraditionalChinese = "Manifest (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "message.overrideDocumentTypeWarning",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "You have already uploaded the {{attachmentType}}, are you sure to replace it?",
                            SimplifiedChinese = "You have already uploaded the {{attachmentType}}, are you sure to replace it? (SC)",
                            TraditionalChinese = "You have already uploaded the {{attachmentType}}, are you sure to replace it? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.documentLevel.booking",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking",
                            SimplifiedChinese = "Booking (SC)",
                            TraditionalChinese = "Booking (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.documentLevel.shipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment",
                            SimplifiedChinese = "Shipment (SC)",
                            TraditionalChinese = "Shipment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.documentLevel.container",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Container",
                            SimplifiedChinese = "Container (SC)",
                            TraditionalChinese = "Container (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.documentLevel.masterbl",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Master BL",
                            SimplifiedChinese = "Master BL (SC)",
                            TraditionalChinese = "Master BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.documentLevel.housebl",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "House BL",
                            SimplifiedChinese = "House BL (SC)",
                            TraditionalChinese = "House BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfConsolidations",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Consolidations",
                            SimplifiedChinese = "List of Consolidations (SC)",
                            TraditionalChinese = "List of Consolidations (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.new",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "New",
                            SimplifiedChinese = "New (SC)",
                            TraditionalChinese = "New (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.loadCargoDetails",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Load Cargo Details",
                            SimplifiedChinese = "Load Cargo Details (SC)",
                            TraditionalChinese = "Load Cargo Details (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.unloadedCargo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Unloaded Cargo",
                            SimplifiedChinese = "Unloaded Cargo (SC)",
                            TraditionalChinese = "Unloaded Cargo (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.loadCargoTo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Load Cargo to {{loadRef}}",
                            SimplifiedChinese = "Load Cargo to {{loadRef}} (SC)",
                            TraditionalChinese = "Load Cargo to {{loadRef}} (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.loadedCargo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Loaded Cargo",
                            SimplifiedChinese = "Loaded Cargo (SC)",
                            TraditionalChinese = "Loaded Cargo (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.numberOfItemsAreSelected",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "{{selected}} of {{total}} items are selected",
                            SimplifiedChinese = "{{selected}} of {{total}} items are selected (SC)",
                            TraditionalChinese = "{{selected}} of {{total}} items are selected (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shipmentNoPoNoItemNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment No. - PO No. - Item No.",
                            SimplifiedChinese = "Shipment No. - PO No. - Item No. (SC)",
                            TraditionalChinese = "Shipment No. - PO No. - Item No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.clickAndDragItemToReorder",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Click & drag item to a new spot within the list to re-order.",
                            SimplifiedChinese = "Click & drag item to a new spot within the list to re-order. (SC)",
                            TraditionalChinese = "Click & drag item to a new spot within the list to re-order. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.consolidate",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Consolidate",
                            SimplifiedChinese = "Consolidate (SC)",
                            TraditionalChinese = "Consolidate (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectExecutionAgentForConsolidating",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Please select an Execution Agent before consolidating",
                            SimplifiedChinese = "Please select an Execution Agent before consolidating (SC)",
                            TraditionalChinese = "Please select an Execution Agent before consolidating (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.pleaseLoadCargoDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Please load the cargo detail into the consolidation plan.",
                            SimplifiedChinese = "Please load the cargo detail into the consolidation plan. (SC)",
                            TraditionalChinese = "Please load the cargo detail into the consolidation plan. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.containerNoIsMandatoryToConfirm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Container No. is mandatory to confirm the consolidation plan",
                            SimplifiedChinese = "Container No. is mandatory to confirm the consolidation plan (SC)",
                            TraditionalChinese = "Container No. is mandatory to confirm the consolidation plan (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.sealNoIsMandatoryToConfirm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Seal No. is mandatory to confirm the consolidation plan",
                            SimplifiedChinese = "Seal No. is mandatory to confirm the consolidation plan (SC)",
                            TraditionalChinese = "Seal No. is mandatory to confirm the consolidation plan (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.carrierSONoIsMandatoryToConfirm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Carrier SO No. is mandatory to confirm the consolidation plan",
                            SimplifiedChinese = "Carrier SO No. is mandatory to confirm the consolidation plan (SC)",
                            TraditionalChinese = "Carrier SO No. is mandatory to confirm the consolidation plan (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.duplicatedOnCarrierSONoAndContainerNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Carrier SO No. and Container No. are duplicated.",
                            SimplifiedChinese = "Carrier SO No. and Container No. are duplicated. (SC)",
                            TraditionalChinese = "Carrier SO No. and Container No. are duplicated. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.noCargoAvailable",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "There is no cargo available for consolidating.",
                            SimplifiedChinese = "There is no cargo available for consolidating. (SC)",
                            TraditionalChinese = "There is no cargo available for consolidating. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.assignMasterBL",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Assign Master BL",
                            SimplifiedChinese = "Assign Master BL (SC)",
                            TraditionalChinese = "Assign Master BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectVesselVoyage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Select Vessel/Voyage",
                            SimplifiedChinese = "Select Vessel/Voyage (SC)",
                            TraditionalChinese = "Select Vessel/Voyage (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectFlightNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Select Flight No.",
                            SimplifiedChinese = "Select Flight No. (SC)",
                            TraditionalChinese = "Select Flight No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.searchMasterBLNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Search Master BL No.",
                            SimplifiedChinese = "Search Master BL No. (SC)",
                            TraditionalChinese = "Search Master BL No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.newMasterBL",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "New Master BL",
                            SimplifiedChinese = "New Master BL (SC)",
                            TraditionalChinese = "New Master BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectedMasterBL",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Selected Master BL",
                            SimplifiedChinese = "Selected Master BL (SC)",
                            TraditionalChinese = "Selected Master BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.contractNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Contract No.",
                            SimplifiedChinese = "Contract No. (SC)",
                            TraditionalChinese = "Contract No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfContract",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Contracts",
                            SimplifiedChinese = "List of Contracts (SC)",
                            TraditionalChinese = "List of Contracts (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.contractType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Contract Type",
                            SimplifiedChinese = "Contract Type (SC)",
                            TraditionalChinese = "Contract Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.contractHolder",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Contract Holder",
                            SimplifiedChinese = "Contract Holder (SC)",
                            TraditionalChinese = "Contract Holder (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.validFrom",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Valid From",
                            SimplifiedChinese = "Valid From (SC)",
                            TraditionalChinese = "Valid From (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.validTo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Valid To",
                            SimplifiedChinese = "Valid To (SC)",
                            TraditionalChinese = "Valid To (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.placeOfIssue",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Place Of Issue",
                            SimplifiedChinese = "Place Of Issue (SC)",
                            TraditionalChinese = "Place Of Issue (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.pleaseScheduleTheShipmentItinerary",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Please schedule the shipment itinerary before assigning the Master.",
                            SimplifiedChinese = "Please schedule the shipment itinerary before assigning the Master. (SC)",
                            TraditionalChinese = "Please schedule the shipment itinerary before assigning the Master. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.updateContainerInfo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Update Container Info",
                            SimplifiedChinese = "Update Container Info (SC)",
                            TraditionalChinese = "Update Container Info (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.containerInfo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Container Info",
                            SimplifiedChinese = "Container Info (SC)",
                            TraditionalChinese = "Container Info (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.pleaseCreateConsignment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Please create consignment before assigning the Master.",
                            SimplifiedChinese = "Please create consignment before assigning the Master. (SC)",
                            TraditionalChinese = "Please create consignment before assigning the Master. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.carrierBL",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Carrier B/L",
                            SimplifiedChinese = "Carrier B/L (SC)",
                            TraditionalChinese = "Carrier B/L (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fCR",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "FCR",
                            SimplifiedChinese = "FCR (SC)",
                            TraditionalChinese = "FCR (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.hBL",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "HBL",
                            SimplifiedChinese = "HBL (SC)",
                            TraditionalChinese = "HBL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.seawayBill",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Seaway Bill",
                            SimplifiedChinese = "Seaway Bill (SC)",
                            TraditionalChinese = "Seaway Bill (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.telexRelease",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Telex Release",
                            SimplifiedChinese = "Telex Release (SC)",
                            TraditionalChinese = "Telex Release (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.unitedContainerLine",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "United Container Line",
                            SimplifiedChinese = "United Container Line (SC)",
                            TraditionalChinese = "United Container Line (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.poNoItemNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO No. - Item No.",
                            SimplifiedChinese = "PO No. - Item No. (SC)",
                            TraditionalChinese = "PO No. - Item No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.valueMustBeGreaterThanZero",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Value must be greater than Zero.",
                            SimplifiedChinese = "Value must be greater than Zero. (SC)",
                            TraditionalChinese = "Value must be greater than Zero. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.loadedPackageGreaterThanBookedQty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Total booked package qty is {{max}}.",
                            SimplifiedChinese = "Total booked package qty is {{max}}. (SC)",
                            TraditionalChinese = "Total booked package qty is {{max}}. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addHouseBL",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add House BL",
                            SimplifiedChinese = "Add House BL (SC)",
                            TraditionalChinese = "Add House BL (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.cancelShipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to cancel the shipment?",
                            SimplifiedChinese = "Are you sure you want to cancel the shipment? (SC)",
                            TraditionalChinese = "Are you sure you want to cancel the shipment? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.houseBill",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "House Bill",
                            SimplifiedChinese = "House Bill (SC)",
                            TraditionalChinese = "House Bill (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.carrierBill",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Carrier Bill",
                            SimplifiedChinese = "Carrier Bill (SC)",
                            TraditionalChinese = "Carrier Bill (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfCarriers",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Carriers",
                            SimplifiedChinese = "List of Carriers (SC)",
                            TraditionalChinese = "List of Carriers (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.carrierCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Carrier Code",
                            SimplifiedChinese = "Carrier Code (SC)",
                            TraditionalChinese = "Carrier Code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addNewCarrier",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add New Carrier",
                            SimplifiedChinese = "Add New Carrier (SC)",
                            TraditionalChinese = "Add New Carrier (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.editCarrier",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit Carrier",
                            SimplifiedChinese = "Edit Carrier (SC)",
                            TraditionalChinese = "Edit Carrier (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.uom",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "UOM",
                            SimplifiedChinese = "UOM (SC)",
                            TraditionalChinese = "UOM (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.dimension",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Dimension",
                            SimplifiedChinese = "Dimension (SC)",
                            TraditionalChinese = "Dimension (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.weightKGS",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Weight (KGS)",
                            SimplifiedChinese = "Weight (KGS) (SC)",
                            TraditionalChinese = "Weight (KGS) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.airlineNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Airline No.",
                            SimplifiedChinese = "Airline No. (SC)",
                            TraditionalChinese = "Airline No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.airline",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Airline",
                            SimplifiedChinese = "Airline (SC)",
                            TraditionalChinese = "Airline (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.plannedSchedule",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Planned Schedule",
                            SimplifiedChinese = "Planned Schedule (SC)",
                            TraditionalChinese = "Planned Schedule (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.schedule",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Schedule",
                            SimplifiedChinese = "Schedule (SC)",
                            TraditionalChinese = "Schedule (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "confirmation.deleteConsolidation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure to delete this consolidation permanently?",
                            SimplifiedChinese = "Are you sure to delete this consolidation permanently? (SC)",
                            TraditionalChinese = "Are you sure to delete this consolidation permanently? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.scheduling",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Scheduling",
                            SimplifiedChinese = "Scheduling (SC)",
                            TraditionalChinese = "Scheduling (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.activityLevel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Activity Level",
                            SimplifiedChinese = "Activity Level (SC)",
                            TraditionalChinese = "Activity Level (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.newTask",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "New Task",
                            SimplifiedChinese = "New Task (SC)",
                            TraditionalChinese = "New Task (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addNewTask",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add Task",
                            SimplifiedChinese = "Add Task (SC)",
                            TraditionalChinese = "Add Task (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfTasks",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Tasks",
                            SimplifiedChinese = "List of Tasks (SC)",
                            TraditionalChinese = "List of Tasks (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.nextOccurrence",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Next Occurrence",
                            SimplifiedChinese = "Next Occurrence (SC)",
                            TraditionalChinese = "Next Occurrence (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.task",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Task",
                            SimplifiedChinese = "Task (SC)",
                            TraditionalChinese = "Task (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.report",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Report",
                            SimplifiedChinese = "Report (SC)",
                            TraditionalChinese = "Report (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.recurrence",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Recurrence",
                            SimplifiedChinese = "Recurrence (SC)",
                            TraditionalChinese = "Recurrence (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.filteringCriteria",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Filtering Criteria",
                            SimplifiedChinese = "Filtering Criteria (SC)",
                            TraditionalChinese = "Filtering Criteria (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.activities",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Activities",
                            SimplifiedChinese = "Activities (SC)",
                            TraditionalChinese = "Activities (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.executedOn",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Executed on",
                            SimplifiedChinese = "Executed on (SC)",
                            TraditionalChinese = "Executed on (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.document",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Document",
                            SimplifiedChinese = "Document (SC)",
                            TraditionalChinese = "Document (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.removeTask",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to delete this task?",
                            SimplifiedChinese = "Are you sure you want to delete this task? (SC)",
                            TraditionalChinese = "Are you sure you want to delete this task? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.removeActivity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to delete this activity?",
                            SimplifiedChinese = "Are you sure you want to delete this activity? (SC)",
                            TraditionalChinese = "Are you sure you want to delete this activity? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.removeSubscriber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to delete this subscriber?",
                            SimplifiedChinese = "Are you sure you want to delete this subscriber? (SC)",
                            TraditionalChinese = "Are you sure you want to delete this subscriber? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.execute",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Execute",
                            SimplifiedChinese = "Execute (SC)",
                            TraditionalChinese = "Execute (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.delete",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Delete",
                            SimplifiedChinese = "Delete (SC)",
                            TraditionalChinese = "Delete (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.subscribers",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Subscribers",
                            SimplifiedChinese = "Subscribers (SC)",
                            TraditionalChinese = "Subscribers (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.activateScheduling",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to activate this task?",
                            SimplifiedChinese = "Are you sure you want to delete this subscriber? (SC)",
                            TraditionalChinese = "Are you sure you want to delete this subscriber? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.deactivateScheduling",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to deactivate this task?",
                            SimplifiedChinese = "Are you sure you want to delete this subscriber? (SC)",
                            TraditionalChinese = "Are you sure you want to delete this subscriber? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.executeScheduling",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Are you sure you want to execute this task immediately?",
                            SimplifiedChinese = "Are you sure you want to execute this task immediately? (SC)",
                            TraditionalChinese = "Are you sure you want to execute this task immediately? (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.successful",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Successful",
                            SimplifiedChinese = "Successful (SC)",
                            TraditionalChinese = "Successful (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.columnOptions",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Column Options",
                            SimplifiedChinese = "Column Options (SC)",
                            TraditionalChinese = "Column Options (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.columns",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Columns",
                            SimplifiedChinese = "Columns (SC)",
                            TraditionalChinese = "Columns (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectedColumns",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Selected Columns",
                            SimplifiedChinese = "Selected Columns (SC)",
                            TraditionalChinese = "Selected Columns (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.columnName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Column Name",
                            SimplifiedChinese = "Column Name (SC)",
                            TraditionalChinese = "Column Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.revertAll",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Revert All",
                            SimplifiedChinese = "Revert All (SC)",
                            TraditionalChinese = "Revert All (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.view",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "View",
                            SimplifiedChinese = "View (SC)",
                            TraditionalChinese = "View (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.freightScheduleDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Freight Schedule Detail",
                            SimplifiedChinese = "Freight Schedule Detail (SC)",
                            TraditionalChinese = "Freight Schedule Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.vesselSlashVoyage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Vessel/Voyage",
                            SimplifiedChinese = "Vessel/Voyage (SC)",
                            TraditionalChinese = "Vessel/Voyage (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.assignPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Assign PO",
                            SimplifiedChinese = "Assign PO (SC)",
                            TraditionalChinese = "Assign PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.unmappedPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Unmapped PO",
                            SimplifiedChinese = "Unmapped PO (SC)",
                            TraditionalChinese = "Unmapped PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.assign",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Assign",
                            SimplifiedChinese = "Assign (SC)",
                            TraditionalChinese = "Assign (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectedPOToAssign",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Selected PO To Assign",
                            SimplifiedChinese = "Selected PO To Assign (SC)",
                            TraditionalChinese = "Selected PO To Assign (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.pleaseAssignUnmappedPOToSupplier",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "There are unmapped PO found. Please assign {{supplier}} to PO.",
                            SimplifiedChinese = "There are unmapped PO found. Please assign {{supplier}} to PO. (SC)",
                            TraditionalChinese = "There are unmapped PO found. Please assign {{supplier}} to PO. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookingDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Detail",
                            SimplifiedChinese = "Booking Detail (SC)",
                            TraditionalChinese = "Booking Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.freight",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Freight",
                            SimplifiedChinese = "Freight (SC)",
                            TraditionalChinese = "Freight (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.freightWarehouse",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Freight & Warehouse",
                            SimplifiedChinese = "Freight & Warehouse (SC)",
                            TraditionalChinese = "Freight & Warehouse (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.warehouseFreight",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Warehouse & Freight",
                            SimplifiedChinese = "Warehouse & Freight (SC)",
                            TraditionalChinese = "Warehouse & Freight (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.integrateWithWMS",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Integrate With WMS",
                            SimplifiedChinese = "Integrate With WMS (SC)",
                            TraditionalChinese = "Integrate With WMS (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.plantNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Plant No.",
                            SimplifiedChinese = "Plant No. (SC)",
                            TraditionalChinese = "Plant No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.warehouseInboundDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Warehouse Inbound Date",
                            SimplifiedChinese = "Warehouse Inbound Date (SC)",
                            TraditionalChinese = "Warehouse Inbound Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.warehouseAssignment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Warehouse Assignment",
                            SimplifiedChinese = "Warehouse Assignment (SC)",
                            TraditionalChinese = "Warehouse Assignment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.warehouseCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Warehouse Code",
                            SimplifiedChinese = "Warehouse Code (SC)",
                            TraditionalChinese = "Warehouse Code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfWarehouseLocations",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Warehouse Locations",
                            SimplifiedChinese = "List of Warehouse Locations (SC)",
                            TraditionalChinese = "List of Warehouse Locations (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.warehouseLocations",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Warehouse Locations",
                            SimplifiedChinese = "Warehouse Locations (SC)",
                            TraditionalChinese = "Warehouse Locations (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cityCountry",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "City - Country",
                            SimplifiedChinese = "City - Country (SC)",
                            TraditionalChinese = "City - Country (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.provider",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Provider",
                            SimplifiedChinese = "Provider (SC)",
                            TraditionalChinese = "Provider (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.warehouseLocation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Warehouse Location",
                            SimplifiedChinese = "Warehouse Location (SC)",
                            TraditionalChinese = "Warehouse Location (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.warehouseLocationDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Warehouse Location Detail",
                            SimplifiedChinese = "Warehouse Location Detail (SC)",
                            TraditionalChinese = "Warehouse Location Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.warehouseName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Warehouse Name",
                            SimplifiedChinese = "Warehouse Name (SC)",
                            TraditionalChinese = "Warehouse Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addressLine1",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Address Line 1",
                            SimplifiedChinese = "Address Line 1 (SC)",
                            TraditionalChinese = "Address Line 1 (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfCustomers",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Customers",
                            SimplifiedChinese = "List of Customers (SC)",
                            TraditionalChinese = "List of Customers (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.expectedHubArrivalDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Expected Hub Arrival Date",
                            SimplifiedChinese = "Expected Hub Arrival Date (SC)",
                            TraditionalChinese = "Expected Hub Arrival Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.bookinglist",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking list",
                            SimplifiedChinese = "Booking list (SC)",
                            TraditionalChinese = "Booking list (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.confirmBooking",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Confirm Booking",
                            SimplifiedChinese = "Confirm Booking (SC)",
                            TraditionalChinese = "Confirm Booking (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.confirmedHubArrivalDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Confirmed Hub Arrival Date",
                            SimplifiedChinese = "Confirmed Hub Arrival Date (SC)",
                            TraditionalChinese = "Confirmed Hub Arrival Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.confirmedBy",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Confirmed By",
                            SimplifiedChinese = "Confirmed By (SC)",
                            TraditionalChinese = "Confirmed By (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.confirmedAt",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Confirmed At",
                            SimplifiedChinese = "Confirmed At (SC)",
                            TraditionalChinese = "Confirmed At (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.time",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Time",
                            SimplifiedChinese = "Time (SC)",
                            TraditionalChinese = "Time (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.am",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "AM",
                            SimplifiedChinese = "AM (SC)",
                            TraditionalChinese = "AM (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.pm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PM",
                            SimplifiedChinese = "PM (SC)",
                            TraditionalChinese = "PM (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.loadingBay",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Loading Bay",
                            SimplifiedChinese = "Loading Bay (SC)",
                            TraditionalChinese = "Loading Bay (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.bookingNoRangeInvalid",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking No. To must be greater than From",
                            SimplifiedChinese = "Booking No. To must be greater than From (SC)",
                            TraditionalChinese = "Booking No. To must be greater than From (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.expectedHubArrivalDateRangeInvalid",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Expected Hub Arrival Date To must be greater than From",
                            SimplifiedChinese = "Expected Hub Arrival Date To must be greater than From (SC)",
                            TraditionalChinese = "Expected Hub Arrival Date To must be greater than From (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.companyNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Company No.",
                            SimplifiedChinese = "Company No. (SC)",
                            TraditionalChinese = "Company No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.actualTimeArrival",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Actual Time Arrival",
                            SimplifiedChinese = "Actual Time Arrival (SC)",
                            TraditionalChinese = "Actual Time Arrival (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.hawbNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "HAWB No.",
                            SimplifiedChinese = "HAWB No. (SC)",
                            TraditionalChinese = "HAWB No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.incoterms",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Incoterms",
                            SimplifiedChinese = "Incoterms (SC)",
                            TraditionalChinese = "Incoterms (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.nameOfInternationalAccount",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Name of International Account",
                            SimplifiedChinese = "Name of International Account (SC)",
                            TraditionalChinese = "Name of International Account (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.deliveryMode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Delivery Mode",
                            SimplifiedChinese = "Delivery Mode (SC)",
                            TraditionalChinese = "Delivery Mode (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.etdOrigin",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "ETD Origin",
                            SimplifiedChinese = "ETD Origin (SC)",
                            TraditionalChinese = "ETD Origin (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.etaDestination",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "ETA Destination",
                            SimplifiedChinese = "ETA Destination (SC)",
                            TraditionalChinese = "ETA Destination (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.byOwnTruck",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "By own truck",
                            SimplifiedChinese = "By own truck (SC)",
                            TraditionalChinese = "By own truck (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.byFreightForwarder",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "By freight forwarder",
                            SimplifiedChinese = "By freight forwarder (SC)",
                            TraditionalChinese = "By freight forwarder (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.warehouseApproval",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Warehouse Approval",
                            SimplifiedChinese = "Warehouse Approval (SC)",
                            TraditionalChinese = "Warehouse Approval (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.workingHours",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Working Hours",
                            SimplifiedChinese = "Working Hours (SC)",
                            TraditionalChinese = "Working Hours (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.seasonCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Season Code",
                            SimplifiedChinese = "Season Code (SC)",
                            TraditionalChinese = "Season Code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.size",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Size",
                            SimplifiedChinese = "Size (SC)",
                            TraditionalChinese = "Size (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.styleNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Style No.",
                            SimplifiedChinese = "Style No. (SC)",
                            TraditionalChinese = "Style No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.colourCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Colour Code",
                            SimplifiedChinese = "Colour Code (SC)",
                            TraditionalChinese = "Colour Code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.styleName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Style Name",
                            SimplifiedChinese = "Style Name (SC)",
                            TraditionalChinese = "Style Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.colourName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Colour Name",
                            SimplifiedChinese = "Colour Name (SC)",
                            TraditionalChinese = "Colour Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addNewWarehouseLocation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add New Warehouse Location",
                            SimplifiedChinese = "Add New Warehouse Location (SC)",
                            TraditionalChinese = "Add New Warehouse Location (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cargoReceive",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cargo Receive",
                            SimplifiedChinese = "Cargo Receive (SC)",
                            TraditionalChinese = "Cargo Receive (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.receivedDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Received Date",
                            SimplifiedChinese = "Received Date (SC)",
                            TraditionalChinese = "Received Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.received",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Received",
                            SimplifiedChinese = "Received (SC)",
                            TraditionalChinese = "Received (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.receivedQtyNotMatchingWithPackageQty",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Received Qty is not matching with Package Qty.",
                            SimplifiedChinese = "Received Qty is not matching with Package Qty. (SC)",
                            TraditionalChinese = "Received Qty is not matching with Package Qty. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.allowApi",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Allow API",
                            SimplifiedChinese = "Allow API (SC)",
                            TraditionalChinese = "Allow API (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.allowUpdateFromExternal",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Allow update from external",
                            SimplifiedChinese = "Allow update from external (SC)",
                            TraditionalChinese = "Allow update from external (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.updatedOn",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Updated On",
                            SimplifiedChinese = "Updated On (SC)",
                            TraditionalChinese = "Updated On (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.by",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "By",
                            SimplifiedChinese = "By (SC)",
                            TraditionalChinese = "By (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.warehouseContact",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Warehouse Contact",
                            SimplifiedChinese = "Warehouse Contact (SC)",
                            TraditionalChinese = "Warehouse Contact (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.warehouseNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Warehouse Number",
                            SimplifiedChinese = "Warehouse Number (SC)",
                            TraditionalChinese = "Warehouse Number (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.warehouseEmail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Warehouse Email",
                            SimplifiedChinese = "Warehouse Email (SC)",
                            TraditionalChinese = "Warehouse Email (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.customerContractType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Customer Contract Type",
                            SimplifiedChinese = "Customer Contract Type (SC)",
                            TraditionalChinese = "Customer Contract Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.none",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "None",
                            SimplifiedChinese = "None (SC)",
                            TraditionalChinese = "None (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.both",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Both",
                            SimplifiedChinese = "Both (SC)",
                            TraditionalChinese = "Both (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.flightDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Flight Date",
                            SimplifiedChinese = "Flight Date (SC)",
                            TraditionalChinese = "Flight Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.forbiddenActionInSwitchMode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Forbidden action in Switch mode. Please back to Administrator to perform your job.",
                            SimplifiedChinese = "Forbidden action in Switch mode. Please back to Administrator to perform your job. (SC)",
                            TraditionalChinese = "Forbidden action in Switch mode. Please back to Administrator to perform your job. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.at",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "At",
                            SimplifiedChinese = "At (SC)",
                            TraditionalChinese = "At (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.viewAs",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "View as",
                            SimplifiedChinese = "View as (SC)",
                            TraditionalChinese = "View as (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.recentOrganizations",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Recent organizations",
                            SimplifiedChinese = "Recent organizations (SC)",
                            TraditionalChinese = "Recent organizations (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.recentDestinations",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Recent Destinations",
                            SimplifiedChinese = "Recent Destinations (SC)",
                            TraditionalChinese = "Recent Destinations (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.backToAdmin",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Back to Admin",
                            SimplifiedChinese = "Back to Admin (SC)",
                            TraditionalChinese = "Back to Admin (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.articles",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Articles",
                            SimplifiedChinese = "Articles (SC)",
                            TraditionalChinese = "Articles (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfArticles",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Articles",
                            SimplifiedChinese = "List of Articles (SC)",
                            TraditionalChinese = "List of Articles (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.article",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Article",
                            SimplifiedChinese = "Article (SC)",
                            TraditionalChinese = "Article (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.articleDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Article Detail",
                            SimplifiedChinese = "Article Detail (SC)",
                            TraditionalChinese = "Article Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.categoryCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Category Code",
                            SimplifiedChinese = "Category Code (SC)",
                            TraditionalChinese = "Category Code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cartonType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Carton Type",
                            SimplifiedChinese = "Carton Type (SC)",
                            TraditionalChinese = "Carton Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.unitWeight",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Unit Weight",
                            SimplifiedChinese = "Unit Weight (SC)",
                            TraditionalChinese = "Unit Weight (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.innerGrossWeight",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Inner Gross Weight",
                            SimplifiedChinese = "Inner Gross Weight (SC)",
                            TraditionalChinese = "Inner Gross Weight (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.outerGrossWeight",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Outer Gross Weight",
                            SimplifiedChinese = "Outer Gross Weight (SC)",
                            TraditionalChinese = "Outer Gross Weight (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.itemPrice",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Item Price",
                            SimplifiedChinese = "Item Price (SC)",
                            TraditionalChinese = "Item Price (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.seller",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Seller",
                            SimplifiedChinese = "Seller (SC)",
                            TraditionalChinese = "Seller (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.barcode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Barcode",
                            SimplifiedChinese = "Barcode (SC)",
                            TraditionalChinese = "Barcode (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.itemDxWxH",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Item D x W x H",
                            SimplifiedChinese = "Item D x W x H (SC)",
                            TraditionalChinese = "Item D x W x H (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.innerDxWxH",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Inner D x W x H",
                            SimplifiedChinese = "Inner D x W x H (SC)",
                            TraditionalChinese = "Inner D x W x H (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.outerDxWxH",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Outer D x W x H",
                            SimplifiedChinese = "Outer D x W x H (SC)",
                            TraditionalChinese = "Outer D x W x H (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.style",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Style",
                            SimplifiedChinese = "Style (SC)",
                            TraditionalChinese = "Style (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.colour",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Colour",
                            SimplifiedChinese = "Colour (SC)",
                            TraditionalChinese = "Colour (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.emailNotifications",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Email Notifications",
                            SimplifiedChinese = "Email Notifications (SC)",
                            TraditionalChinese = "Email Notifications (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fromCountry",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "From Country",
                            SimplifiedChinese = "From Country (SC)",
                            TraditionalChinese = "From Country (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fromPort",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "From Port",
                            SimplifiedChinese = "From Port (SC)",
                            TraditionalChinese = "From Port (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.notifyEmailAddress",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Notify Email Address",
                            SimplifiedChinese = "Notify Email Address (SC)",
                            TraditionalChinese = "Notify Email Address (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "emailSettingType.bookingImportviaAPI",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Import via API",
                            SimplifiedChinese = "Booking Import via API (SC)",
                            TraditionalChinese = "Booking Import via API (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "emailSettingType.bookingImportedFailure",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Imported Failure",
                            SimplifiedChinese = "Booking Imported Failure (SC)",
                            TraditionalChinese = "Booking Imported Failure (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "emailSettingType.bookingImportedSuccessfully",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Imported Successfully",
                            SimplifiedChinese = "Booking Imported Successfully (SC)",
                            TraditionalChinese = "Booking Imported Successfully (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "emailSettingType.bookingApproval",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Approval",
                            SimplifiedChinese = "Booking Approval (SC)",
                            TraditionalChinese = "Booking Approval (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "emailSettingType.bookingRejected",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Rejected",
                            SimplifiedChinese = "Booking Rejected (SC)",
                            TraditionalChinese = "Booking Rejected (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "emailSettingType.bookingApproved",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Approved",
                            SimplifiedChinese = "Booking Approved (SC)",
                            TraditionalChinese = "Booking Approved (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "emailSettingType.bookingConfirmed",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Confirmed",
                            SimplifiedChinese = "Booking Confirmed (SC)",
                            TraditionalChinese = "Booking Confirmed (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "emailSettingType.bookingCargoReceived",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking Cargo Received",
                            SimplifiedChinese = "Booking Cargo Received (SC)",
                            TraditionalChinese = "Booking Cargo Received (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.emailSetting",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Email Setting",
                            SimplifiedChinese = "Email Setting (SC)",
                            TraditionalChinese = "Email Setting (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.emailType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Email Type",
                            SimplifiedChinese = "Email Type (SC)",
                            TraditionalChinese = "Email Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.defaultSendTo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Default Send To",
                            SimplifiedChinese = "Default Send To (SC)",
                            TraditionalChinese = "Default Send To (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.sendTo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Send To",
                            SimplifiedChinese = "Send To (SC)",
                            TraditionalChinese = "Send To (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cc",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "CC",
                            SimplifiedChinese = "CC (SC)",
                            TraditionalChinese = "CC (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.defaultSendToOwner",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Default send to Owner.",
                            SimplifiedChinese = "Default send to Owner. (SC)",
                            TraditionalChinese = "Default send to Owner. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.defaultSendToCustomer",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Default send to Customer.",
                            SimplifiedChinese = "Default send to Customer. (SC)",
                            TraditionalChinese = "Default send to Customer. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.defaultSendToWarehouseContact",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Default send to Warehouse Contact.",
                            SimplifiedChinese = "Default send to Warehouse Contact. (SC)",
                            TraditionalChinese = "Default send to Warehouse Contact. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.noSystemEmailYet",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No system email yet.",
                            SimplifiedChinese = "No system email yet. (SC)",
                            TraditionalChinese = "No system email yet. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.emailDomainToBypassApproval",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Email Domain To Bypass Approval",
                            SimplifiedChinese = "Email Domain To Bypass Approval (SC)",
                            TraditionalChinese = "Email Domain To Bypass Approval (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.forwarder",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Forwarder",
                            SimplifiedChinese = "Forwarder (SC)",
                            TraditionalChinese = "Forwarder (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.importData",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Import data",
                            SimplifiedChinese = "Import data (SC)",
                            TraditionalChinese = "Import data (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.initializing",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Initializing",
                            SimplifiedChinese = "Initializing (SC)",
                            TraditionalChinese = "Initializing (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.reImport",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Re-import",
                            SimplifiedChinese = "Re-import (SC)",
                            TraditionalChinese = "Re-import (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.limit1000OrganizationsToImport",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "You can import 1000 Organizations once",
                            SimplifiedChinese = "You can import 1000 Organizations once (SC)",
                            TraditionalChinese = "You can import 1000 Organizations once (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.organizationImport",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Organization import",
                            SimplifiedChinese = "Organization import (SC)",
                            TraditionalChinese = "Organization import (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.userImport",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "User Import",
                            SimplifiedChinese = "User Import (SC)",
                            TraditionalChinese = "User Import (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.validate",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Validate",
                            SimplifiedChinese = "Validate (SC)",
                            TraditionalChinese = "Validate (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.importBackgroundExplanation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "The import process will be run in the background and an email notification will be sent to you since the import has been done.",
                            SimplifiedChinese = "The import process will be run in the background and an email notification will be sent to you since the import has been done. (SC)",
                            TraditionalChinese = "The import process will be run in the background and an email notification will be sent to you since the import has been done. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.validateFileImportSuccessfully",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "File is valid. You can now safely begin your import.",
                            SimplifiedChinese = "File is valid. You can now safely begin your import. (SC)",
                            TraditionalChinese = "File is valid. You can now safely begin your import. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.backgroundImportingNotification",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "The file is being imported in the background.",
                            SimplifiedChinese = "The file is being imported in the background. (SC)",
                            TraditionalChinese = "The file is being imported in the background. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.fileValidationFailed",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "File validation failed!",
                            SimplifiedChinese = "File validation failed! (SC)",
                            TraditionalChinese = "File validation failed! (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.fileValidating",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "File validating",
                            SimplifiedChinese = "File validating (SC)",
                            TraditionalChinese = "File validating (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.organizationCodeInvalidChinese",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Organization Code doesn't allow Chinese wording",
                            SimplifiedChinese = "Organization Code doesn't allow Chinese wording (SC)",
                            TraditionalChinese = "Organization Code doesn't allow Chinese wording (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.markAllAsRead",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Mark all as read",
                            SimplifiedChinese = "Mark all as read (SC)",
                            TraditionalChinese = "Mark all as read (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.loadMore",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Load More",
                            SimplifiedChinese = "Load More (SC)",
                            TraditionalChinese = "Load More (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.noMessagesYet",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No messages yet.",
                            SimplifiedChinese = "No messages yet. (SC)",
                            TraditionalChinese = "No messages yet. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.categorizedPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Categorized PO",
                            SimplifiedChinese = "Categorized PO (SC)",
                            TraditionalChinese = "Categorized PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.warehouseReceive",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Warehouse Receive",
                            SimplifiedChinese = "Warehouse Receive (SC)",
                            TraditionalChinese = "Warehouse Receive (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.todayUpdate.newMobileReleased",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "A new version ({{appVersion}}) of {{appPackageLink}} application is available",
                            SimplifiedChinese = "A new version ({{appVersion}}) of {{appPackageLink}} application is available (SC)",
                            TraditionalChinese = "A new version ({{appVersion}}) of {{appPackageLink}} application is available (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.todayUpdate.currentMobileReleased",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Download {{appPackageLink}} application ({{appVersion}}) here",
                            SimplifiedChinese = "Download {{appPackageLink}} application ({{appVersion}}) here (SC)",
                            TraditionalChinese = "Download {{appPackageLink}} application ({{appVersion}}) here (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addAffiliateOrganization",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add Affiliate Organization",
                            SimplifiedChinese = "Add Affiliate Organization (SC)",
                            TraditionalChinese = "Add Affiliate Organization (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectOrganization",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Select Organization",
                            SimplifiedChinese = "Select Organization (SC)",
                            TraditionalChinese = "Select Organization (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.searchAffiliateOrganizationHint",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Search an organization by name or code",
                            SimplifiedChinese = "Search an organization by name or code (SC)",
                            TraditionalChinese = "Search an organization by name or code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.clearAll",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Clear all",
                            SimplifiedChinese = "Clear all (SC)",
                            TraditionalChinese = "Clear all (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.balanceOfGoods",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Balance Of Goods",
                            SimplifiedChinese = "Balance Of Goods (SC)",
                            TraditionalChinese = "Balance Of Goods (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.balanceOfGoodsEnquiry",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Balance Of Goods Enquiry",
                            SimplifiedChinese = "Balance Of Goods Enquiry (SC)",
                            TraditionalChinese = "Balance Of Goods Enquiry (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.articleCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Article Code",
                            SimplifiedChinese = "Article Code (SC)",
                            TraditionalChinese = "Article Code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.articleName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Article Name",
                            SimplifiedChinese = "Article Name (SC)",
                            TraditionalChinese = "Article Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.availableQuantity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Available Qty",
                            SimplifiedChinese = "Available Qty (SC)",
                            TraditionalChinese = "Available Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.receivedQuantity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Received Qty",
                            SimplifiedChinese = "Received Qty (SC)",
                            TraditionalChinese = "Received Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.shippedQuantity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipped Qty",
                            SimplifiedChinese = "Shipped Qty (SC)",
                            TraditionalChinese = "Shipped Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.adjustQuantity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Adjust Qty",
                            SimplifiedChinese = "Adjust Qty (SC)",
                            TraditionalChinese = "Adjust Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.damageQuantity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Damage Qty",
                            SimplifiedChinese = "Damage Qty (SC)",
                            TraditionalChinese = "Damage Qty (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.principalCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Principal Code",
                            SimplifiedChinese = "Principal Code (SC)",
                            TraditionalChinese = "Principal Code (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.principalName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Principal Name",
                            SimplifiedChinese = "Principal Name (SC)",
                            TraditionalChinese = "Principal Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.contractShipmentDate",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Contract Shipment Date",
                            SimplifiedChinese = "Contract Shipment Date (SC)",
                            TraditionalChinese = "Contract Shipment Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.dateOfSubmission",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Date of Submission",
                            SimplifiedChinese = "Date of Submission (SC)",
                            TraditionalChinese = "Date of Submission (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.paymentDueDate",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Payment Due Date",
                            SimplifiedChinese = "Payment Due Date (SC)",
                            TraditionalChinese = "Payment Due Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.submittedBookingFailedDetails",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking is submitted unsuccessfully due to reasons below.",
                            SimplifiedChinese = "Booking is submitted unsuccessfully due to reasons below. (SC)",
                            TraditionalChinese = "Booking is submitted unsuccessfully due to reasons below. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.cancelledBookingFailedDetails",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking is cancelled unsuccessfully due to reasons below.",
                            SimplifiedChinese = "Booking is cancelled unsuccessfully due to reasons below. (SC)",
                            TraditionalChinese = "Booking is cancelled unsuccessfully due to reasons below. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.amendedBookingFailedDetails",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking is amended unsuccessfully due to reasons below.",
                            SimplifiedChinese = "Booking is amended unsuccessfully due to reasons below. (SC)",
                            TraditionalChinese = "Booking is amended unsuccessfully due to reasons below. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.sendActivationEmailSuccessfully",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Send activation email successfully.",
                            SimplifiedChinese = "Send activation email successfully. (SC)",
                            TraditionalChinese = "Send activation email successfully. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.published",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Published",
                            SimplifiedChinese = "Published (SC)",
                            TraditionalChinese = "Published (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.singleAnswer",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Single answer",
                            SimplifiedChinese = "Single answer (SC)",
                            TraditionalChinese = "Single answer (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.multipleAnswers",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Multiple answers",
                            SimplifiedChinese = "Multiple answers (SC)",
                            TraditionalChinese = "Multiple answers (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.openEnded",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Open-ended",
                            SimplifiedChinese = "Open-ended (SC)",
                            TraditionalChinese = "Open-ended (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.openEndedWithMultipleLines",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Open-ended with multiple lines",
                            SimplifiedChinese = "Open-ended with multiple lines (SC)",
                            TraditionalChinese = "Open-ended with multiple lines (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.ratingScale",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Rating scale",
                            SimplifiedChinese = "Rating scale (SC)",
                            TraditionalChinese = "Rating scale (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addNewSurvey",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add New Survey",
                            SimplifiedChinese = "Add New Survey (SC)",
                            TraditionalChinese = "Add New Survey (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.surveyDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Survey Detail",
                            SimplifiedChinese = "Survey Detail (SC)",
                            TraditionalChinese = "Survey Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.surveyName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Survey Name",
                            SimplifiedChinese = "Survey Name (SC)",
                            TraditionalChinese = "Survey Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.specifiedUser",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Specified User",
                            SimplifiedChinese = "Specified User (SC)",
                            TraditionalChinese = "Specified User (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruiseAgent",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cruise Agent",
                            SimplifiedChinese = "Cruise Agent (SC)",
                            TraditionalChinese = "Cruise Agent (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.cruisePrincipal",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Cruise Principal",
                            SimplifiedChinese = "Cruise Principal (SC)",
                            TraditionalChinese = "Cruise Principal (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.systemAdmin",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "System Admin",
                            SimplifiedChinese = "System Admin (SC)",
                            TraditionalChinese = "System Admin (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.sendToUserEmail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Send to user email",
                            SimplifiedChinese = "Send to user email (SC)",
                            TraditionalChinese = "Send to user email (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.usersUnderSuppliersRelationship",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Users under Suppliers Relationship",
                            SimplifiedChinese = "Users under Suppliers Relationship (SC)",
                            TraditionalChinese = "Users under Suppliers Relationship (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.usersUnderCustomersRelationship",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Users under Customers Relationship",
                            SimplifiedChinese = "Users under Customers Relationship (SC)",
                            TraditionalChinese = "Users under Customers Relationship (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.usersUnderSelectedOrganizations",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Users under Selected Organization(s)",
                            SimplifiedChinese = "Users under Selected Organization(s) (SC)",
                            TraditionalChinese = "Users under Selected Organization(s) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.includeAffiliateOrganizations",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Include Affiliate Organizations",
                            SimplifiedChinese = "Include Affiliate Organizations (SC)",
                            TraditionalChinese = "Include Affiliate Organizations (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.organizationsSelected",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "{{length}} organization(s) selected",
                            SimplifiedChinese = "{{length}} organization(s) selected (SC)",
                            TraditionalChinese = "{{length}} organization(s) selected (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.questions",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Questions",
                            SimplifiedChinese = "Questions (SC)",
                            TraditionalChinese = "Questions (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.question",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Question",
                            SimplifiedChinese = "Question (SC)",
                            TraditionalChinese = "Question (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.questionType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Question Type",
                            SimplifiedChinese = "Question Type (SC)",
                            TraditionalChinese = "Question Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addNewQuestion",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add New Question",
                            SimplifiedChinese = "Add New Question (SC)",
                            TraditionalChinese = "Add New Question (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.editAQuestion",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Edit a Question",
                            SimplifiedChinese = "Edit a Question (SC)",
                            TraditionalChinese = "Edit a Question (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.questionDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Question Detail",
                            SimplifiedChinese = "Question Detail (SC)",
                            TraditionalChinese = "Question Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.answers",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Answers",
                            SimplifiedChinese = "Answers (SC)",
                            TraditionalChinese = "Answers (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.enterAnswerText",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Enter answer text",
                            SimplifiedChinese = "Enter answer text (SC)",
                            TraditionalChinese = "Enter answer text (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.answerText",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Answer text",
                            SimplifiedChinese = "Answer text (SC)",
                            TraditionalChinese = "Answer text (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.enterPlaceholderText",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Enter placeholder text",
                            SimplifiedChinese = "Placeholder text (SC)",
                            TraditionalChinese = "Enter placeholder text (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.placeholderText",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Placeholder text",
                            SimplifiedChinese = "Enter placeholder text (SC)",
                            TraditionalChinese = "Placeholder text (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.includeOpenEndedTextField",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Include an open-ended text field",
                            SimplifiedChinese = "Include an open-ended text field (SC)",
                            TraditionalChinese = "Include an open-ended text field (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.lowEndOfTheScale",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Low end of the scale",
                            SimplifiedChinese = "Low end of the scale (SC)",
                            TraditionalChinese = "Low end of the scale (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.highEndOfTheScale",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "High end of the scale",
                            SimplifiedChinese = "High end of the scale (SC)",
                            TraditionalChinese = "High end of the scale (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.enterLowEndOfTheScaleNagative",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Enter low end of the scale (Negative)",
                            SimplifiedChinese = "Enter low end of the scale (Negative) (SC)",
                            TraditionalChinese = "Enter low end of the scale (Negative) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.enterHighEndOfTheScalePositive",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Enter high end of the scale (Positive)",
                            SimplifiedChinese = "Enter high end of the scale (Positive) (SC)",
                            TraditionalChinese = "Enter high end of the scale (Positive) (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.starRating",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Star Rating",
                            SimplifiedChinese = "Star Rating (SC)",
                            TraditionalChinese = "Star Rating (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.generateSOFormFileType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Generate Booking/SO Form File Type",
                            SimplifiedChinese = "Generate Booking/SO Form File Type (SC)",
                            TraditionalChinese = "Generate Booking/SO Form File Type (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.taxpayerId",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Taxpayer ID",
                            SimplifiedChinese = "Taxpayer ID (SC)",
                            TraditionalChinese = "Taxpayer ID (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.excel",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Excel",
                            SimplifiedChinese = "Excel (SC)",
                            TraditionalChinese = "Excel (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.pdf",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PDF",
                            SimplifiedChinese = "PDF (SC)",
                            TraditionalChinese = "PDF (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.publishedOn",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Published On",
                            SimplifiedChinese = "Published On (SC)",
                            TraditionalChinese = "Published On (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.closedOn",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Closed On",
                            SimplifiedChinese = "Closed On (SC)",
                            TraditionalChinese = "Closed On (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.preview",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Preview",
                            SimplifiedChinese = "Preview (SC)",
                            TraditionalChinese = "Preview (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.usersSelected",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "{{length}} user(s) selected",
                            SimplifiedChinese = "{{length}} user(s) selected (SC)",
                            TraditionalChinese = "{{length}} user(s) selected (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.searchAndSelectEmail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Search & select the email",
                            SimplifiedChinese = "Search & select the email (SC)",
                            TraditionalChinese = "Search & select the email (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.backToDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Back to detail",
                            SimplifiedChinese = "Back to detail (SC)",
                            TraditionalChinese = "Back to detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.surveyReport",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Survey Report",
                            SimplifiedChinese = "Survey Report (SC)",
                            TraditionalChinese = "Survey Report (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.completed",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Completed",
                            SimplifiedChinese = "Completed (SC)",
                            TraditionalChinese = "Completed (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.completionRate",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Completion Rate",
                            SimplifiedChinese = "Completion Rate (SC)",
                            TraditionalChinese = "Completion Rate (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.answer",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Answer",
                            SimplifiedChinese = "Answer (SC)",
                            TraditionalChinese = "Answer (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.totalCompleted",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Total Completed",
                            SimplifiedChinese = "Total Completed (SC)",
                            TraditionalChinese = "Total Completed (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.respondents",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Respondents",
                            SimplifiedChinese = "Respondents (SC)",
                            TraditionalChinese = "Respondents (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.count",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Count",
                            SimplifiedChinese = "Count (SC)",
                            TraditionalChinese = "Count (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.closeSurvey",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Close Survey",
                            SimplifiedChinese = "Close Survey (SC)",
                            TraditionalChinese = "Close Survey (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.viewReport",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "View Report",
                            SimplifiedChinese = "View Report (SC)",
                            TraditionalChinese = "View Report (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.linkToSurveyIsNoLongerActive",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Oops! The link you clicked is no longer active.",
                            SimplifiedChinese = "Oops! The link you clicked is no longer active. (SC)",
                            TraditionalChinese = "Oops! The link you clicked is no longer active. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "msg.sorryMissYouOnThisSurvey",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "We love to hear your opinions. Sorry, we missed you on this activity.",
                            SimplifiedChinese = "We love to hear your opinions. Sorry, we missed you on this activity. (SC)",
                            TraditionalChinese = "We love to hear your opinions. Sorry, we missed you on this activity. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.number",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No.",
                            SimplifiedChinese = "No. (SC)",
                            TraditionalChinese = "No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.articleTransactionTitle",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Article {{articleName}} of {{principleCode}}",
                            SimplifiedChinese = "Article {{articleName}} of {{principleCode}} (SC)",
                            TraditionalChinese = "Article {{articleName}} of {{principleCode}} (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfShortships",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Shortships",
                            SimplifiedChinese = "List of Shortships (SC)",
                            TraditionalChinese = "List of Shortships (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.read",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Read",
                            SimplifiedChinese = "Read (SC)",
                            TraditionalChinese = "Read (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "tooltip.unread",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Unread",
                            SimplifiedChinese = "Unread (SC)",
                            TraditionalChinese = "Unread (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.warehouseTransactionTitle",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Warehouse {{warehouseCode}} of {{principleCode}}",
                            SimplifiedChinese = "Warehouse {{warehouseCode}} of {{principleCode}} (SC)",
                            TraditionalChinese = "Warehouse {{warehouseCode}} of {{principleCode}} (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.terminal",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Terminal",
                            SimplifiedChinese = "Terminal (SC)",
                            TraditionalChinese = "Terminal (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.confirmItinerary",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Confirm Itinerary",
                            SimplifiedChinese = "Confirm Itinerary (SC)",
                            TraditionalChinese = "Confirm Itinerary (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.skipAndConfirm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Skip & Confirm",
                            SimplifiedChinese = "Skip & Confirm (SC)",
                            TraditionalChinese = "Skip & Confirm (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.saveAndConfirm",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Save & Confirm",
                            SimplifiedChinese = "Save & Confirm (SC)",
                            TraditionalChinese = "Save & Confirm (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.updateCFSClosingDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Update CFS Closing Date.",
                            SimplifiedChinese = "Update CFS Closing Date. (SC)",
                            TraditionalChinese = "Update CFS Closing Date. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.updateCYClosingDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Update CY Closing Date.",
                            SimplifiedChinese = "Update CY Closing Date. (SC)",
                            TraditionalChinese = "Update CY Closing Date. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.changeDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Change date",
                            SimplifiedChinese = "Change date (SC)",
                            TraditionalChinese = "Change date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.principleCode",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Principle Code",
                            SimplifiedChinese = "客户代码",
                            TraditionalChinese = "客戶代碼",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.principleName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Principle Name",
                            SimplifiedChinese = "客户名称",
                            TraditionalChinese = "客戶名稱",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.transactionType",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Transaction Type",
                            SimplifiedChinese = "交易类型",
                            TraditionalChinese = "交易類型",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.transactionDate",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Transaction Date",
                            SimplifiedChinese = "交易日期",
                            TraditionalChinese = "交易日期",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.transactionBy",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Transaction By",
                            SimplifiedChinese = "交易人员",
                            TraditionalChinese = "交易人員",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.quantity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Quantity",
                            SimplifiedChinese = "数量",
                            TraditionalChinese = "數量",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.quantityUOM",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Quantity UOM",
                            SimplifiedChinese = "数量 计量单位",
                            TraditionalChinese = "數量 計量單位",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.soNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "SO Number",
                            SimplifiedChinese = "编号",
                            TraditionalChinese = "編號",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.blNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "BL Number",
                            SimplifiedChinese = "提单号",
                            TraditionalChinese = "提單號",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.documentNumber",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Doc Number",
                            SimplifiedChinese = "文件编号",
                            TraditionalChinese = "文件編號",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.noOfPackage",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "No of Package",
                            SimplifiedChinese = "包数",
                            TraditionalChinese = "包數",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.addMissingPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Add Missing PO",
                            SimplifiedChinese = "Add Missing PO (SC)",
                            TraditionalChinese = "Add Missing PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.selectCustomerPO",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Select Customer PO",
                            SimplifiedChinese = "Select Customer PO (SC)",
                            TraditionalChinese = "Select Customer PO (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "validation.missingPOsInformation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Missing PO(s) Information.",
                            SimplifiedChinese = "Missing PO(s) Information. (SC)",
                            TraditionalChinese = "Missing PO(s) Information. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.routingOrders",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Routing Orders",
                            SimplifiedChinese = "Routing Orders (SC)",
                            TraditionalChinese = "Routing Orders (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.listOfRoutingOrders",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "List of Routing Orders",
                            SimplifiedChinese = "List of Routing Orders (SC)",
                            TraditionalChinese = "List of Routing Orders (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.routingOrderNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Routing Order No.",
                            SimplifiedChinese = "Routing Order No. (SC)",
                            TraditionalChinese = "Routing Order No. (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.routingOrderDates",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Routing Order Date",
                            SimplifiedChinese = "Routing Order Date (SC)",
                            TraditionalChinese = "Routing Order Date (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.rateAccepted",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Rate Accepted",
                            SimplifiedChinese = "Rate Accepted (SC)",
                            TraditionalChinese = "Rate Accepted (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.rateConfirmed",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Rate Confirmed",
                            SimplifiedChinese = "Rate Confirmed (SC)",
                            TraditionalChinese = "Rate Confirmed (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.companyAddress",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Company Address",
                            SimplifiedChinese = "Company Address (SC)",
                            TraditionalChinese = "Company Address (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.operationContactName",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Operation Contact Name",
                            SimplifiedChinese = "Operation Contact Name (SC)",
                            TraditionalChinese = "Operation Contact Name (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.operationContactEmail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Operation Contact Email",
                            SimplifiedChinese = "Operation Contact Email (SC)",
                            TraditionalChinese = "Operation Contact Email (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.operationContactCountry",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Operation Contact Country",
                            SimplifiedChinese = "Operation Contact Country (SC)",
                            TraditionalChinese = "Operation Contact Country (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.operationContactCity",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Operation Contact City",
                            SimplifiedChinese = "Operation Contact City (SC)",
                            TraditionalChinese = "Operation Contact City (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "notification.msg.bookingNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Booking#",
                            SimplifiedChinese = "Booking# (SC)",
                            TraditionalChinese = "Booking# (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "notification.msg.poNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "PO#",
                            SimplifiedChinese = "PO# (SC)",
                            TraditionalChinese = "PO# (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "notification.msg.shipmentNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Shipment#",
                            SimplifiedChinese = "Shipment# (SC)",
                            TraditionalChinese = "Shipment# (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "notification.msg.hasBeenAmended",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "has been amended",
                            SimplifiedChinese = "has been amended (SC)",
                            TraditionalChinese = "has been amended (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "notification.msg.hasBeenCancelled",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "has been cancelled",
                            SimplifiedChinese = "has been cancelled (SC)",
                            TraditionalChinese = "has been cancelled (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "notification.msg.hasBeenRejected",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "has been rejected",
                            SimplifiedChinese = "has been rejected (SC)",
                            TraditionalChinese = "has been rejected (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "notification.msg.needsYourApproval",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "needs your approval",
                            SimplifiedChinese = "needs your approval (SC)",
                            TraditionalChinese = "needs your approval (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "notification.msg.hasBeenSubmitted",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "has been submitted",
                            SimplifiedChinese = "has been submitted (SC)",
                            TraditionalChinese = "has been submitted (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "notification.msg.hasBeenConfirmed",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "has been confirmed",
                            SimplifiedChinese = "has been confirmed (SC)",
                            TraditionalChinese = "has been confirmed (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "notification.msg.hasBeenSubmittedWithNewShippingDocument",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "has been submitted with new shipping document",
                            SimplifiedChinese = "has been submitted with new shipping document (SC)",
                            TraditionalChinese = "has been submitted with new shipping document (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "notification.msg.needYourUpdateProgress",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "need your update the progress",
                            SimplifiedChinese = "need your update the progress (SC)",
                            TraditionalChinese = "need your update the progress (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "notification.msg.missingPOOfBookingNo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Missing PO of Booking#",
                            SimplifiedChinese = "Missing PO of Booking# (SC)",
                            TraditionalChinese = "Missing PO of Booking# (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "notification.msg.hasBeenUploaded",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "has been uploaded",
                            SimplifiedChinese = "has been uploaded (SC)",
                            TraditionalChinese = "has been uploaded (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "notification.msg.hasBeenRemovedYourAccess",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "has been removed from your access",
                            SimplifiedChinese = "has been removed from your access (SC)",
                            TraditionalChinese = "has been removed from your access (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "notification.msg.hasBeenDelegatedToYou",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "has been delegated to you",
                            SimplifiedChinese = "has been delegated to you (SC)",
                            TraditionalChinese = "has been delegated to you (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "notification.msg.hasBeenApproved",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "has been approved",
                            SimplifiedChinese = "has been approved (SC)",
                            TraditionalChinese = "has been approved (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "notification.msg.tellYourMindWith",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Tell your mind with",
                            SimplifiedChinese = "Tell your mind with (SC)",
                            TraditionalChinese = "Tell your mind with (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.routingOrderDetail",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Routing Order Detail",
                            SimplifiedChinese = "Routing Order Detail (SC)",
                            TraditionalChinese = "Routing Order Detail (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.lastDateForShipment",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Last Date For Shipment",
                            SimplifiedChinese = "Last Date For Shipment (SC)",
                            TraditionalChinese = "Last Date For Shipment (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Key = "label.invoiceInformation",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            English = "Invoice Information",
                            SimplifiedChinese = "Invoice Information (SC)",
                            TraditionalChinese = "Invoice Information (TC)",
                            UpdatedDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.UserAuditLogModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("AccessDateTime")
                        .HasColumnType("DATETIME2(7)");

                    b.Property<string>("Browser")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("Feature")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("OperatingSystem")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("ScreenSize")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.HasKey("Id");

                    b.ToTable("UserAuditLogs", (string)null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.UserAuditLogQueryModel", b =>
                {
                    b.Property<DateTime>("AccessDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Browser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("OperatingSystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScreenSize")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.UserListQueryModel", b =>
                {
                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastSignInDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationType")
                        .HasColumnType("int");

                    b.Property<string>("OrganizationTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.UserNotificationModel", b =>
                {
                    b.Property<long>("NotificationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("NotificationId", "Username");

                    b.ToTable("UserNotifications");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.UserProfileModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("CompanyAddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAddressLine3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAddressLine4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastSignInDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OPContactEmail")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("OPContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OPCountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("OPLocationName")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("OrganizationCode")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<long?>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OrganizationRoleId")
                        .HasColumnType("bigint");

                    b.Property<int>("OrganizationType")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasMaxLength(128)
                        .HasColumnType("VARCHAR(128)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TaxpayerId")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("Title")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.HasKey("Id");

                    b.HasAlternateKey("AccountNumber");

                    b.HasAlternateKey("Username");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.UserRequestModel", b =>
                {
                    b.Property<string>("CompanyAddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAddressLine3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAddressLine4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OPContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OPContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OPCountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("OPLocationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OrganizationRoleId")
                        .HasColumnType("bigint");

                    b.Property<int>("OrganizationType")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TaxpayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.ToView("vw_UserRequests");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.UserRoleModel", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.VesselArrivalQueryModel", b =>
                {
                    b.Property<string>("CarrierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DischargePort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ETADate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ETDDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("LoadingPort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PONumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VesselVoyage")
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.AgentAssignmentModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.BuyerComplianceModel", "BuyerCompliance")
                        .WithMany("AgentAssignments")
                        .HasForeignKey("BuyerComplianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuyerCompliance");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.AttachmentTypePermissionModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.RoleModel", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BillOfLadingConsignmentModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.BillOfLadingModel", "BillOfLading")
                        .WithMany("BillOfLadingConsignments")
                        .HasForeignKey("BillOfLadingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Groove.SP.Core.Entities.ConsignmentModel", "Consignment")
                        .WithMany("BillOfLadingConsignments")
                        .HasForeignKey("ConsignmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Groove.SP.Core.Entities.ShipmentModel", "Shipment")
                        .WithMany("BillOfLadingConsignments")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BillOfLading");

                    b.Navigation("Consignment");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BillOfLadingContactModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.BillOfLadingModel", "BillOfLading")
                        .WithMany("Contacts")
                        .HasForeignKey("BillOfLadingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillOfLading");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BillOfLadingItineraryModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.BillOfLadingModel", "BillOfLading")
                        .WithMany("BillOfLadingItineraries")
                        .HasForeignKey("BillOfLadingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Groove.SP.Core.Entities.ItineraryModel", "Itinerary")
                        .WithMany("BillOfLadingItineraries")
                        .HasForeignKey("ItineraryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Groove.SP.Core.Entities.MasterBillOfLadingModel", "MasterBillOfLading")
                        .WithMany("BillOfLadingItineraries")
                        .HasForeignKey("MasterBillOfLadingId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BillOfLading");

                    b.Navigation("Itinerary");

                    b.Navigation("MasterBillOfLading");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BillOfLadingShipmentLoadModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.BillOfLadingModel", "BillOfLading")
                        .WithMany("BillOfLadingShipmentLoads")
                        .HasForeignKey("BillOfLadingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Groove.SP.Core.Entities.ConsolidationModel", "Consolidation")
                        .WithMany("BillOfLadingShipmentLoads")
                        .HasForeignKey("ConsolidationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Groove.SP.Core.Entities.ContainerModel", "Container")
                        .WithMany("BillOfLadingShipmentLoads")
                        .HasForeignKey("ContainerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Groove.SP.Core.Entities.MasterBillOfLadingModel", "MasterBillOfLading")
                        .WithMany("BillOfLadingShipmentLoads")
                        .HasForeignKey("MasterBillOfLadingId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Groove.SP.Core.Entities.ShipmentLoadModel", "ShipmentLoad")
                        .WithMany("BillOfLadingShipmentLoads")
                        .HasForeignKey("ShipmentLoadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BillOfLading");

                    b.Navigation("Consolidation");

                    b.Navigation("Container");

                    b.Navigation("MasterBillOfLading");

                    b.Navigation("ShipmentLoad");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BookingPolicyModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.BuyerComplianceModel", "BuyerCompliance")
                        .WithMany("BookingPolicies")
                        .HasForeignKey("BuyerComplianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuyerCompliance");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BookingTimelessModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.BuyerComplianceModel", "BuyerCompliance")
                        .WithOne("BookingTimeless")
                        .HasForeignKey("Groove.SP.Core.Entities.BookingTimelessModel", "BuyerComplianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuyerCompliance");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BookingValidationLogModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.BuyerComplianceModel", "BuyerCompliance")
                        .WithMany("BookingValidationLogs")
                        .HasForeignKey("BuyerComplianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuyerCompliance");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BuyerApprovalModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.POFulfillmentModel", "POFulfillment")
                        .WithMany("BuyerApprovals")
                        .HasForeignKey("POFulfillmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("POFulfillment");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.CargoDetailModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.ShipmentModel", "Shipment")
                        .WithMany("CargoDetails")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.CargoLoadabilityModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.BuyerComplianceModel", "BuyerCompliance")
                        .WithMany("CargoLoadabilities")
                        .HasForeignKey("BuyerComplianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuyerCompliance");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ComplianceSelectionModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.BuyerComplianceModel", "BuyerCompliance")
                        .WithOne("ComplianceSelection")
                        .HasForeignKey("Groove.SP.Core.Entities.ComplianceSelectionModel", "BuyerComplianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuyerCompliance");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ConsignmentItineraryModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.ConsignmentModel", "Consignment")
                        .WithMany("ConsignmentItineraries")
                        .HasForeignKey("ConsignmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Groove.SP.Core.Entities.ItineraryModel", "Itinerary")
                        .WithMany("ConsignmentItineraries")
                        .HasForeignKey("ItineraryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Groove.SP.Core.Entities.MasterBillOfLadingModel", "MasterBill")
                        .WithMany("ConsignmentItineraries")
                        .HasForeignKey("MasterBillId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Groove.SP.Core.Entities.ShipmentModel", "Shipment")
                        .WithMany("ConsignmentItineraries")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Consignment");

                    b.Navigation("Itinerary");

                    b.Navigation("MasterBill");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ConsignmentModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.BillOfLadingModel", "HouseBill")
                        .WithMany("Consignments")
                        .HasForeignKey("HouseBillId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Groove.SP.Core.Entities.MasterBillOfLadingModel", "MasterBill")
                        .WithMany("Consignments")
                        .HasForeignKey("MasterBillId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Groove.SP.Core.Entities.ShipmentModel", "Shipment")
                        .WithMany("Consignments")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HouseBill");

                    b.Navigation("MasterBill");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ConsolidationModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.ContainerModel", "Container")
                        .WithOne("Consolidation")
                        .HasForeignKey("Groove.SP.Core.Entities.ConsolidationModel", "ContainerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Container");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ContainerItineraryModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.ContainerModel", "Container")
                        .WithMany("ContainerItineraries")
                        .HasForeignKey("ContainerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Groove.SP.Core.Entities.ItineraryModel", "Itinerary")
                        .WithMany("ContainerItineraries")
                        .HasForeignKey("ItineraryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Container");

                    b.Navigation("Itinerary");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.Cruise.CruiseOrderContactModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.Cruise.CruiseOrderModel", "Order")
                        .WithMany("Contacts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.Cruise.CruiseOrderItemModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.Cruise.CruiseOrderModel", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Groove.SP.Core.Entities.ShipmentModel", "Shipment")
                        .WithMany()
                        .HasForeignKey("ShipmentId");

                    b.Navigation("Order");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.Cruise.CruiseOrderWarehouseInfoModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.Cruise.CruiseOrderItemModel", "CruiseOrderItem")
                        .WithOne("Warehouse")
                        .HasForeignKey("Groove.SP.Core.Entities.Cruise.CruiseOrderWarehouseInfoModel", "CruiseOrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CruiseOrderItem");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.EmailSettingModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.BuyerComplianceModel", "BuyerCompliance")
                        .WithMany("EmailSettings")
                        .HasForeignKey("BuyerComplianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuyerCompliance");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.FreightSchedulerChangeLogModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.FreightSchedulerModel", "FreightScheduler")
                        .WithMany("ChangeLogs")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FreightScheduler");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.GlobalIdActivityModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.ActivityModel", "Activity")
                        .WithMany("GlobalIdActivities")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Groove.SP.Core.Entities.GlobalIdModel", "ReferenceEntity")
                        .WithMany("GlobalIdActivities")
                        .HasForeignKey("GlobalId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Activity");

                    b.Navigation("ReferenceEntity");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.GlobalIdApprovalModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.BuyerApprovalModel", "Approval")
                        .WithMany("GlobalIdApprovals")
                        .HasForeignKey("ApprovalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Groove.SP.Core.Entities.GlobalIdModel", "ReferenceEntity")
                        .WithMany("GlobalIdApprovals")
                        .HasForeignKey("GlobalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Approval");

                    b.Navigation("ReferenceEntity");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.GlobalIdAttachmentModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.AttachmentModel", "Attachment")
                        .WithMany("GlobalIdAttachments")
                        .HasForeignKey("AttachemntId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Groove.SP.Core.Entities.GlobalIdModel", "ReferenceEntity")
                        .WithMany("GlobalIdAttachments")
                        .HasForeignKey("GlobalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Attachment");

                    b.Navigation("ReferenceEntity");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.GlobalIdMasterDialogModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.GlobalIdModel", "ReferenceEntity")
                        .WithMany("GlobalIdMasterDialogs")
                        .HasForeignKey("GlobalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Groove.SP.Core.Entities.MasterDialogModel", "MasterDialog")
                        .WithMany("GlobalIdMasterDialogs")
                        .HasForeignKey("MasterDialogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasterDialog");

                    b.Navigation("ReferenceEntity");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ItineraryModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.FreightSchedulerModel", "FreightScheduler")
                        .WithMany("Itineraries")
                        .HasForeignKey("ScheduleId");

                    b.Navigation("FreightScheduler");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.MasterBillOfLadingContactModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.MasterBillOfLadingModel", "MasterBillOfLading")
                        .WithMany("Contacts")
                        .HasForeignKey("MasterBillOfLadingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasterBillOfLading");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.MasterBillOfLadingItineraryModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.ItineraryModel", "Itinerary")
                        .WithMany("MasterBillOfLadingItineraries")
                        .HasForeignKey("ItineraryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Groove.SP.Core.Entities.MasterBillOfLadingModel", "MasterBillOfLading")
                        .WithMany("MasterBillOfLadingItineraries")
                        .HasForeignKey("MasterBillOfLadingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Itinerary");

                    b.Navigation("MasterBillOfLading");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentAllocatedOrderModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.POFulfillmentBookingRequestModel", "POFulfillmentBookingRequest")
                        .WithMany()
                        .HasForeignKey("POFulfillmentBookingRequestId");

                    b.HasOne("Groove.SP.Core.Entities.POFulfillmentModel", "POFulfillment")
                        .WithMany()
                        .HasForeignKey("POFulfillmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Groove.SP.Core.Entities.POLineItemModel", "POLineItem")
                        .WithMany()
                        .HasForeignKey("POLineItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Groove.SP.Core.Entities.ShipmentModel", "Shipment")
                        .WithMany("POFulfillmentAllocatedOrders")
                        .HasForeignKey("ShipmentId");

                    b.Navigation("POFulfillment");

                    b.Navigation("POFulfillmentBookingRequest");

                    b.Navigation("POLineItem");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentBookingRequestModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.POFulfillmentModel", "POFulfillment")
                        .WithMany("BookingRequests")
                        .HasForeignKey("POFulfillmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("POFulfillment");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentCargoDetailModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.POFulfillmentModel", "PoFulfillment")
                        .WithMany("CargoDetails")
                        .HasForeignKey("POFulfillmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PoFulfillment");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentCargoReceiveItemModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.POFulfillmentCargoReceiveModel", "POFulfillmentCargoReceive")
                        .WithMany("CargoReceiveItems")
                        .HasForeignKey("POFulfillmentCargoReceiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Groove.SP.Core.Entities.POFulfillmentOrderModel", "POFulfillmentOrder")
                        .WithOne("POFulfillmentCargoReceiveItem")
                        .HasForeignKey("Groove.SP.Core.Entities.POFulfillmentCargoReceiveItemModel", "POFulfillmentOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("POFulfillmentCargoReceive");

                    b.Navigation("POFulfillmentOrder");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentContactModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.POFulfillmentModel", "POFulfillment")
                        .WithMany("Contacts")
                        .HasForeignKey("POFulfillmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("POFulfillment");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentItineraryModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.POFulfillmentModel", "PoFulfillment")
                        .WithMany("Itineraries")
                        .HasForeignKey("POFulfillmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PoFulfillment");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentLoadDetailModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.POFulfillmentLoadModel", "PoFulfillmentLoad")
                        .WithMany("Details")
                        .HasForeignKey("POFulfillmentLoadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PoFulfillmentLoad");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentLoadModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.POFulfillmentModel", "PoFulfillment")
                        .WithMany("Loads")
                        .HasForeignKey("POFulfillmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PoFulfillment");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentOrderModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.POFulfillmentModel", "POFulfillment")
                        .WithMany("Orders")
                        .HasForeignKey("POFulfillmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("POFulfillment");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentShortshipOrderModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.POFulfillmentModel", "POFulfillment")
                        .WithMany("ShortshipOrders")
                        .HasForeignKey("POFulfillmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("POFulfillment");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POLineItemModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.PurchaseOrderModel", "PurchaseOrder")
                        .WithMany("LineItems")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ProductVerificationSettingModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.BuyerComplianceModel", "BuyerCompliance")
                        .WithOne("ProductVerificationSetting")
                        .HasForeignKey("Groove.SP.Core.Entities.ProductVerificationSettingModel", "BuyerComplianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuyerCompliance");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.PurchaseOrderAdhocChangeModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.POFulfillmentModel", "POFulfillment")
                        .WithMany("PurchaseOrderAdhocChanges")
                        .HasForeignKey("POFulfillmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("POFulfillment");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.PurchaseOrderContactModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.PurchaseOrderModel", "PurchaseOrder")
                        .WithMany("Contacts")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.PurchaseOrderModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.PurchaseOrderModel", "BlanketPO")
                        .WithMany("AllocatedPOs")
                        .HasForeignKey("BlanketPOId");

                    b.Navigation("BlanketPO");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.PurchaseOrderVerificationSettingModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.BuyerComplianceModel", "BuyerCompliance")
                        .WithOne("PurchaseOrderVerificationSetting")
                        .HasForeignKey("Groove.SP.Core.Entities.PurchaseOrderVerificationSettingModel", "BuyerComplianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuyerCompliance");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ReportPermissionModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.ReportModel", "Report")
                        .WithMany("Permissions")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Groove.SP.Core.Entities.RoleModel", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.RolePermissionModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.PermissionModel", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Groove.SP.Core.Entities.RoleModel", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ROLineItemModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.RoutingOrderModel", "RoutingOrder")
                        .WithMany("LineItems")
                        .HasForeignKey("RoutingOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoutingOrder");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.RoutingOrderContactModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.RoutingOrderModel", "RoutingOrder")
                        .WithMany("Contacts")
                        .HasForeignKey("RoutingOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoutingOrder");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.RoutingOrderContainerModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.RoutingOrderModel", "RoutingOrder")
                        .WithMany("Containers")
                        .HasForeignKey("RoutingOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoutingOrder");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.RoutingOrderInvoiceModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.RoutingOrderModel", "RoutingOrder")
                        .WithMany("Invoices")
                        .HasForeignKey("RoutingOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoutingOrder");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.SchedulingModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.FtpServerModel", "FtpServer")
                        .WithMany()
                        .HasForeignKey("FtpServerId");

                    b.Navigation("FtpServer");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ShipmentBillOfLadingModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.BillOfLadingModel", "BillOfLading")
                        .WithMany("ShipmentBillOfLadings")
                        .HasForeignKey("BillOfLadingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Groove.SP.Core.Entities.ShipmentModel", "Shipment")
                        .WithMany("ShipmentBillOfLadings")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BillOfLading");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ShipmentContactModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.ShipmentModel", "Shipment")
                        .WithMany("Contacts")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ShipmentItemModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.ShipmentModel", "Shipment")
                        .WithMany("ShipmentItems")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ShipmentLoadDetailModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.CargoDetailModel", "CargoDetail")
                        .WithMany("ShipmentLoadDetails")
                        .HasForeignKey("CargoDetailId");

                    b.HasOne("Groove.SP.Core.Entities.ConsignmentModel", "Consignment")
                        .WithMany("ShipmentLoadDetails")
                        .HasForeignKey("ConsignmentId");

                    b.HasOne("Groove.SP.Core.Entities.ConsolidationModel", "Consolidation")
                        .WithMany("ShipmentLoadDetails")
                        .HasForeignKey("ConsolidationId");

                    b.HasOne("Groove.SP.Core.Entities.ContainerModel", "Container")
                        .WithMany("ShipmentLoadDetails")
                        .HasForeignKey("ContainerId");

                    b.HasOne("Groove.SP.Core.Entities.ShipmentModel", "Shipment")
                        .WithMany("ShipmentLoadDetails")
                        .HasForeignKey("ShipmentId");

                    b.HasOne("Groove.SP.Core.Entities.ShipmentLoadModel", "ShipmentLoad")
                        .WithMany("ShipmentLoadDetails")
                        .HasForeignKey("ShipmentLoadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("CargoDetail");

                    b.Navigation("Consignment");

                    b.Navigation("Consolidation");

                    b.Navigation("Container");

                    b.Navigation("Shipment");

                    b.Navigation("ShipmentLoad");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ShipmentLoadModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.ConsignmentModel", "Consignment")
                        .WithMany("ShipmentLoads")
                        .HasForeignKey("ConsignmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Groove.SP.Core.Entities.ConsolidationModel", "Consolidation")
                        .WithMany("ShipmentLoads")
                        .HasForeignKey("ConsolidationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Groove.SP.Core.Entities.ContainerModel", "Container")
                        .WithMany("ShipmentLoads")
                        .HasForeignKey("ContainerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Groove.SP.Core.Entities.ShipmentModel", "Shipment")
                        .WithMany("ShipmentLoads")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Consignment");

                    b.Navigation("Consolidation");

                    b.Navigation("Container");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ShipmentModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.ContractMasterModel", "ContractMaster")
                        .WithMany()
                        .HasForeignKey("CarrierContractNo")
                        .HasPrincipalKey("CarrierContractNo");

                    b.HasOne("Groove.SP.Core.Entities.POFulfillmentModel", "POFulfillment")
                        .WithMany("Shipments")
                        .HasForeignKey("POFulfillmentId");

                    b.Navigation("ContractMaster");

                    b.Navigation("POFulfillment");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ShippingComplianceModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.BuyerComplianceModel", "BuyerCompliance")
                        .WithOne("ShippingCompliance")
                        .HasForeignKey("Groove.SP.Core.Entities.ShippingComplianceModel", "BuyerComplianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuyerCompliance");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.SurveyAnswerModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.SurveyQuestionOptionModel", "Option")
                        .WithMany("Answers")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Groove.SP.Core.Entities.SurveyQuestionModel", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Option");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.SurveyParticipantModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.SurveyModel", "Survey")
                        .WithMany("Participants")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.SurveyQuestionModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.SurveyModel", "Survey")
                        .WithMany("Questions")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.SurveyQuestionOptionModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.SurveyQuestionModel", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.UserNotificationModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.NotificationModel", "Notification")
                        .WithMany("UserNotifications")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.UserRoleModel", b =>
                {
                    b.HasOne("Groove.SP.Core.Entities.RoleModel", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Groove.SP.Core.Entities.UserProfileModel", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ActivityModel", b =>
                {
                    b.Navigation("GlobalIdActivities");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.AttachmentModel", b =>
                {
                    b.Navigation("GlobalIdAttachments");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BillOfLadingModel", b =>
                {
                    b.Navigation("BillOfLadingConsignments");

                    b.Navigation("BillOfLadingItineraries");

                    b.Navigation("BillOfLadingShipmentLoads");

                    b.Navigation("Consignments");

                    b.Navigation("Contacts");

                    b.Navigation("ShipmentBillOfLadings");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BuyerApprovalModel", b =>
                {
                    b.Navigation("GlobalIdApprovals");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.BuyerComplianceModel", b =>
                {
                    b.Navigation("AgentAssignments");

                    b.Navigation("BookingPolicies");

                    b.Navigation("BookingTimeless");

                    b.Navigation("BookingValidationLogs");

                    b.Navigation("CargoLoadabilities");

                    b.Navigation("ComplianceSelection");

                    b.Navigation("EmailSettings");

                    b.Navigation("ProductVerificationSetting");

                    b.Navigation("PurchaseOrderVerificationSetting");

                    b.Navigation("ShippingCompliance");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.CargoDetailModel", b =>
                {
                    b.Navigation("ShipmentLoadDetails");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ConsignmentModel", b =>
                {
                    b.Navigation("BillOfLadingConsignments");

                    b.Navigation("ConsignmentItineraries");

                    b.Navigation("ShipmentLoadDetails");

                    b.Navigation("ShipmentLoads");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ConsolidationModel", b =>
                {
                    b.Navigation("BillOfLadingShipmentLoads");

                    b.Navigation("ShipmentLoadDetails");

                    b.Navigation("ShipmentLoads");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ContainerModel", b =>
                {
                    b.Navigation("BillOfLadingShipmentLoads");

                    b.Navigation("Consolidation");

                    b.Navigation("ContainerItineraries");

                    b.Navigation("ShipmentLoadDetails");

                    b.Navigation("ShipmentLoads");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.Cruise.CruiseOrderItemModel", b =>
                {
                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.Cruise.CruiseOrderModel", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.FreightSchedulerModel", b =>
                {
                    b.Navigation("ChangeLogs");

                    b.Navigation("Itineraries");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.GlobalIdModel", b =>
                {
                    b.Navigation("GlobalIdActivities");

                    b.Navigation("GlobalIdApprovals");

                    b.Navigation("GlobalIdAttachments");

                    b.Navigation("GlobalIdMasterDialogs");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ItineraryModel", b =>
                {
                    b.Navigation("BillOfLadingItineraries");

                    b.Navigation("ConsignmentItineraries");

                    b.Navigation("ContainerItineraries");

                    b.Navigation("MasterBillOfLadingItineraries");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.MasterBillOfLadingModel", b =>
                {
                    b.Navigation("BillOfLadingItineraries");

                    b.Navigation("BillOfLadingShipmentLoads");

                    b.Navigation("ConsignmentItineraries");

                    b.Navigation("Consignments");

                    b.Navigation("Contacts");

                    b.Navigation("MasterBillOfLadingItineraries");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.MasterDialogModel", b =>
                {
                    b.Navigation("GlobalIdMasterDialogs");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.NotificationModel", b =>
                {
                    b.Navigation("UserNotifications");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.PermissionModel", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentCargoReceiveModel", b =>
                {
                    b.Navigation("CargoReceiveItems");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentLoadModel", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentModel", b =>
                {
                    b.Navigation("BookingRequests");

                    b.Navigation("BuyerApprovals");

                    b.Navigation("CargoDetails");

                    b.Navigation("Contacts");

                    b.Navigation("Itineraries");

                    b.Navigation("Loads");

                    b.Navigation("Orders");

                    b.Navigation("PurchaseOrderAdhocChanges");

                    b.Navigation("Shipments");

                    b.Navigation("ShortshipOrders");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.POFulfillmentOrderModel", b =>
                {
                    b.Navigation("POFulfillmentCargoReceiveItem");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.PurchaseOrderModel", b =>
                {
                    b.Navigation("AllocatedPOs");

                    b.Navigation("Contacts");

                    b.Navigation("LineItems");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ReportModel", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.RoleModel", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.RoutingOrderModel", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Containers");

                    b.Navigation("Invoices");

                    b.Navigation("LineItems");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ShipmentLoadModel", b =>
                {
                    b.Navigation("BillOfLadingShipmentLoads");

                    b.Navigation("ShipmentLoadDetails");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.ShipmentModel", b =>
                {
                    b.Navigation("BillOfLadingConsignments");

                    b.Navigation("CargoDetails");

                    b.Navigation("ConsignmentItineraries");

                    b.Navigation("Consignments");

                    b.Navigation("Contacts");

                    b.Navigation("POFulfillmentAllocatedOrders");

                    b.Navigation("ShipmentBillOfLadings");

                    b.Navigation("ShipmentItems");

                    b.Navigation("ShipmentLoadDetails");

                    b.Navigation("ShipmentLoads");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.SurveyModel", b =>
                {
                    b.Navigation("Participants");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.SurveyQuestionModel", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Options");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.SurveyQuestionOptionModel", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("Groove.SP.Core.Entities.UserProfileModel", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
